#!/bin/sh

# I'm just gonna write a quick script to do what I want it to do,
# with no regard for possible bugs or problems.
# I'm disrespecting all there is to disrespect about computer science.

# But in all seriousness, this is a very barebones, simple wrapper to
# tar and gpg to encrypt and store select data of mine.

# THIS SCRIPT REQUIRES THE USER TO HAVE A VALID GnuPG KEYPAIR, WHICH CAN BE CREATED WITH:
# gpg --full-generate-key
# PRIOR TO EXECUTING THIS SCRIPT.

# Usage: zzCrypt arg1 arg2 arg3 arg4
# If arg1 is unlock...
# arg2 is the target file to decrypt
# arg3 and arg4 are ignored
#
# If arg1 is lock...
# arg2 is the target file/directory
# arg3 is the cipher to use, usually just AES256
# arg4 is the target key to use, usually just my name or email address
#
# If arg1 is peek...
# arg2 is the target file to decrypt (and later remove)
# arg3 is the target file in the archive to peek into
# arg4 is ignored
#
# If arg1 is ls...
# arg2 is the target file to decrypt (and won't be stored anywhere on the system as it is piped directly to tar for file listing)
# arg3 and arg4 are ignored

# Check if required arguments exist, 1 is command, 2 is target file/directory
if [[ -z $1 || -z $2 ]]; then
	echo "Invalid arguments."
	exit 1
fi

# Check if 3rd argument exists, only required for "peek" command
if [[ $1 == "peek" && -z $3 ]]; then
	echo "No target to peek into."
	exit 2
fi

# Unneeded variables set. Might remove later if I don't think of any reason to use them
SCRIPTPATH=$(dirname "$(readlink -f \"$0\")")
TARGET="$(pwd)/$2"

if [[ $1 == "unlock" ]]; then
	gpg -d $2 | tar -xz
	if [[ $? -eq 0 ]]; then
		rm $2; # No need for -r because it's a single archive file
	else
		echo "WARNING: UNSUCCESSFUL EXECUTION. CHECK YOUR FILES!"
	fi

	exit 0
fi

if [[ $1 == "lock" ]]; then
	tar -cz $2 | gpg -se --cipher-algo $3 -r $4 -o encrypted_archive.tar.gz.gpg
	if [[ $? -eq 0 ]]; then
		rm -r $2; # Gotta make sure it gets deleted, even if it's a directory
	else
		echo "WARNING: UNSUCCESSFUL EXECUTION. CHECK YOUR FILES!"
	fi

	exit 0
fi

if [[ $1 == "peek" ]]; then
	TEMPDIR=/tmp/zzCrypt/tempunpack

	if [[ ! -d $TEMPDIR ]]; then
		mkdir -p $TEMPDIR
	fi
	
	gpg -d $2 | tar -xz --directory $TEMPDIR

	find $TEMPDIR -name $3 -exec cat {} \;

	rm -r $TEMPDIR
	
	exit 0
fi

if [[ $1 == "ls" ]]; then
	gpg -d $2 | tar -tzv

	exit 0
fi

