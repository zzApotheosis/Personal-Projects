include_dirs = ['../math']

# Addition code testing
test_addition_00 = executable('test-addition-00', sources: ['test-addition-00.c'], link_with: math_lib, include_directories: include_dirs)
test('test-addition-00', test_addition_00)
test_addition_01 = executable('test-addition-01', sources: ['test-addition-01.c'], link_with: math_lib, include_directories: include_dirs)
test('test-addition-01', test_addition_01)
test_addition_02 = executable('test-addition-02', sources: ['test-addition-02.c'], link_with: math_lib, include_directories: include_dirs)
test('test-addition-02', test_addition_02, should_fail: true)

# Division code testing
test_division_00 = executable('test-division-00', sources: ['test-division-00.c'], link_with: math_lib, include_directories: include_dirs)
test('test-division-00', test_division_00)
test_division_01 = executable('test-division-01', sources: ['test-division-01.c'], link_with: math_lib, include_directories: include_dirs)
test('test-division-01', test_division_01, should_fail: true)
test_division_02 = executable('test-division-02', sources: ['test-division-02.c'], link_with: math_lib, include_directories: include_dirs)
test('test-division-02', test_division_02)

# Factorial code testing
test_factorial_00 = executable('test-factorial-00', sources: ['test-factorial-00.c'], link_with: math_lib, include_directories: include_dirs)
test('test-factorial-00', test_factorial_00)
test_factorial_01 = executable('test-factorial-01', sources: ['test-factorial-01.c'], link_with: math_lib, include_directories: include_dirs)
test('test-factorial-01', test_factorial_01, should_fail: true)
test_factorial_02 = executable('test-factorial-02', sources: ['test-factorial-02.c'], link_with: math_lib, include_directories: include_dirs)
test('test-factorial-02', test_factorial_02, should_fail: true)

# Modulo code testing
test_modulo_00 = executable('test-modulo-00', sources: ['test-modulo-00.c'], link_with: math_lib, include_directories: include_dirs)
test('test-modulo-00', test_modulo_00)
test_modulo_01 = executable('test-modulo-01', sources: ['test-modulo-01.c'], link_with: math_lib, include_directories: include_dirs)
test('test-modulo-01', test_modulo_01)
test_modulo_02 = executable('test-modulo-02', sources: ['test-modulo-02.c'], link_with: math_lib, include_directories: include_dirs)
test('test-modulo-02', test_modulo_02)

# Multiplication code testing
test_multiplication_00 = executable('test-multiplication-00', sources: ['test-multiplication-00.c'], link_with: math_lib, include_directories: include_dirs)
test('test-multiplication-00', test_multiplication_00)
test_multiplication_01 = executable('test-multiplication-01', sources: ['test-multiplication-01.c'], link_with: math_lib, include_directories: include_dirs)
test('test-multiplication-01', test_multiplication_01)
test_multiplication_02 = executable('test-multiplication-02', sources: ['test-multiplication-02.c'], link_with: math_lib, include_directories: include_dirs)
test('test-multiplication-02', test_multiplication_02, should_fail: true)

# Subtraction code testing
test_subtraction_00 = executable('test-subtraction-00', sources: ['test-subtraction-00.c'], link_with: math_lib, include_directories: include_dirs)
test('test-subtraction-00', test_subtraction_00)
test_subtraction_01 = executable('test-subtraction-01', sources: ['test-subtraction-01.c'], link_with: math_lib, include_directories: include_dirs)
test('test-subtraction-01', test_subtraction_01)
test_subtraction_02 = executable('test-subtraction-02', sources: ['test-subtraction-02.c'], link_with: math_lib, include_directories: include_dirs)
test('test-subtraction-02', test_subtraction_02, should_fail: true)
