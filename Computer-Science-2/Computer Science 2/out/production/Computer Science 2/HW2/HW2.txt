2.1.1)
EASYQUESTION
AESYQUESTION
AESYQUESTION
AEEYQUSSTION
AEEIQUSSTYON
AEEINUSSTYOQ
AEEINOSSTYUQ
AEEINOQSTYUS
AEEINOQSTYUS
AEEINOQSSYUT
AEEINOQSSTUY
AEEINOQSSTUY

2.1.5)
For Insertion Sort, there are two conditions that must be met
to make the swap (exchange) happen to sort the data set:
j > 0 && less(a[j], a[j-1])

The less() method compares the two arguments and returns a
boolean value based on whether or not the value at a[j] is
less than the value at a[j-1].

For the first condition, the only way that j > 0 could always be
a false statement at the end of the loop is if the array is
already fully sorted, because the loop will always reach j = 0
after checking each element in the array.

The second condition may likewise always be false when the loop
terminates when the array is already fully sorted, because
if the array is fully sorted, then there is no way that
a[j] can be less than a[j-1].

2.1.9)
EASYSHELLSORTQUESTION
EASQSHELLSORTYUESTION
EASQSEELLSORTYUHSTION
EASQSEELISORTYUHSTLON
EASQSEELIOORTYUHSTLSN
EASQSEELIONRTYUHSTLSO
EASQSEELIONRTYUHSTLSO
EALQSEESIONRTYUHSTLSO
EALISEESQONRTYUHSTLSO
EALIOEESQSNRTYUHSTLSO
EALIOEESQSHRTYUNSTLSO
EALIOEESQSHRTLUNSTYSO
EALIOEESLSHRTQUNSTYSO
EALIOEESLSHRTQSNSTYUO
EALIOEESLSHRTQSNSTYUO
EALEOIESLSHRTQSNSTYUO
EALEEIOSLSHRTQSNSTYUO
EAEELIOSLSHRTQSNSTYUO
EAEELILSOSHRTQSNSTYUO
EAEELILSHSORTQSNSTYUO
EAEELIHSLSORTQSNSTYUO
EAEEHILSLSORTQSNSTYUO
EAEEHILSLROSTQSNSTYUO
EAEEHILRLSOSTQSNSTYUO
EAEEHILRLSOQTSSNSTYUO
EAEEHILRLQOSTSSNSTYUO
EAEEHILQLROSTSSNSTYUO
EAEEHILQLROSSSTNSTYUO
EAEEHILQLROSSNTSSTYUO
EAEEHILQLRONSSTSSTYUO
EAEEHILQLNORSSTSSTYUO
EAEEHILNLQORSSTSSTYUO
EAEEHILNLQORSSSSTTYUO
EAEEHILNLQORSSSSTTOUY
EAEEHILNLQORSSSSOTTUY
EAEEHILNLQORSSOSSTTUY
EAEEHILNLQOROSSSSTTUY
EAEEHILNLQOROSSSSTTUY
AEEEHILNLQOROSSSSTTUY
AEEEHILLNQOROSSSSTTUY
AEEEHILLNOQROSSSSTTUY
AEEEHILLNOQORSSSSTTUY
AEEEHILLNOOQRSSSSTTUY

2.1.12)

