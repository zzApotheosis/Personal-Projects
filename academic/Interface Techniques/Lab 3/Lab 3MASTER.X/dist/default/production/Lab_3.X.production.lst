

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Feb 22 18:40:12 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	smallconst
    54  001000                     __psmallconst:
    55                           	opt stack 0
    56  001000  00                 	db	0
    57  001001                     _dpowers:
    58                           	opt stack 0
    59  001001  0001               	dw	1
    60  001003  000A               	dw	10
    61  001005  0064               	dw	100
    62  001007  03E8               	dw	1000
    63  001009  2710               	dw	10000
    64  00100B                     __end_of_dpowers:
    65                           	opt stack 0
    66  0000                     _INTCON2bits	set	4081
    67  0000                     _INTCONbits	set	4082
    68  0000                     _LATAbits	set	3977
    69  0000                     _LATD	set	3980
    70  0000                     _OSCTUNEbits	set	3995
    71  0000                     _RCONbits	set	4048
    72  0000                     _SSP2ADD	set	3950
    73  0000                     _SSP2BUF	set	3951
    74  0000                     _SSP2CON1bits	set	3948
    75  0000                     _SSP2CON2bits	set	3947
    76  0000                     _SSP2STATbits	set	3949
    77  0000                     _SSPBUF	set	4041
    78  0000                     _SSPCON1	set	4038
    79  0000                     _SSPSTATbits	set	4039
    80  0000                     _TRISAbits	set	3986
    81  0000                     _TRISB	set	3987
    82  0000                     _TRISCbits	set	3988
    83  0000                     _TRISD	set	3989
    84  0000                     _SSPIF	set	31987
    85  00100B                     STR_2:
    86  00100B  57                 	db	87	;'W'
    87  00100C  72                 	db	114	;'r'
    88  00100D  6F                 	db	111	;'o'
    89  00100E  74                 	db	116	;'t'
    90  00100F  65                 	db	101	;'e'
    91  001010  20                 	db	32
    92  001011  25                 	db	37
    93  001012  64                 	db	100	;'d'
    94  001013  2C                 	db	44
    95  001014  20                 	db	32
    96  001015  47                 	db	71	;'G'
    97  001016  6F                 	db	111	;'o'
    98  001017  74                 	db	116	;'t'
    99  001018  20                 	db	32
   100  001019  25                 	db	37
   101  00101A  64                 	db	100	;'d'
   102  00101B  00                 	db	0
   103  0000                     
   104                           ; #config settings
   105  00101C  00                 	db	0	; dummy byte at the end
   106  0000                     
   107                           	psect	cinit
   108  00199E                     __pcinit:
   109                           	opt stack 0
   110  00199E                     start_initialization:
   111                           	opt stack 0
   112  00199E                     __initialization:
   113                           	opt stack 0
   114                           
   115                           ; Clear objects allocated to BANK0 (18 bytes)
   116  00199E  EE00  F07E         	lfsr	0,__pbssBANK0
   117  0019A2  0E12               	movlw	18
   118  0019A4                     clear_0:
   119  0019A4  6AEE               	clrf	postinc0,c
   120  0019A6  06E8               	decf	wreg,f,c
   121  0019A8  E1FD               	bnz	clear_0
   122                           
   123                           ; Clear objects allocated to COMRAM (19 bytes)
   124  0019AA  EE00  F02C         	lfsr	0,__pbssCOMRAM
   125  0019AE  0E13               	movlw	19
   126  0019B0                     clear_1:
   127  0019B0  6AEE               	clrf	postinc0,c
   128  0019B2  06E8               	decf	wreg,f,c
   129  0019B4  E1FD               	bnz	clear_1
   130  0019B6                     end_of_initialization:
   131                           	opt stack 0
   132  0019B6                     __end_of__initialization:
   133                           	opt stack 0
   134  0019B6  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   135  0019B8  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   136  0019BA  0100               	movlb	0
   137  0019BC  EF87  F009         	goto	_main	;jump to C main() function
   138                           postinc0	equ	0xFEE
   139                           wreg	equ	0xFE8
   140                           
   141                           	psect	bssCOMRAM
   142  00002C                     __pbssCOMRAM:
   143                           	opt stack 0
   144  00002C                     _rx:
   145                           	opt stack 0
   146  00002C                     	ds	1
   147  00002D                     _toggle:
   148                           	opt stack 0
   149  00002D                     	ds	1
   150  00002E                     _line2str:
   151                           	opt stack 0
   152  00002E                     	ds	17
   153                           postinc0	equ	0xFEE
   154                           wreg	equ	0xFE8
   155                           
   156                           	psect	bssBANK0
   157  00007E                     __pbssBANK0:
   158                           	opt stack 0
   159  00007E                     _count:
   160                           	opt stack 0
   161  00007E                     	ds	1
   162  00007F                     _line1str:
   163                           	opt stack 0
   164  00007F                     	ds	17
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           
   168                           	psect	cstackBANK0
   169  000060                     __pcstackBANK0:
   170                           	opt stack 0
   171  000060                     ??_longDelay:
   172  000060                     ?___lwdiv:
   173                           	opt stack 0
   174  000060                     calculateBase@base:
   175                           	opt stack 0
   176  000060                     WriteRegister@b:
   177                           	opt stack 0
   178  000060                     ___lwdiv@dividend:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x0
   182  000060                     	ds	1
   183  000061                     calculateBase@line:
   184                           	opt stack 0
   185  000061                     WriteRegister@reg:
   186                           	opt stack 0
   187                           
   188                           ; 1 bytes @ 0x1
   189  000061                     	ds	1
   190  000062                     LCDWriteByte@rs:
   191                           	opt stack 0
   192  000062                     ___lwdiv@divisor:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x2
   196  000062                     	ds	1
   197  000063                     LCDWriteByte@c:
   198                           	opt stack 0
   199                           
   200                           ; 1 bytes @ 0x3
   201  000063                     	ds	1
   202  000064                     LCDWriteByte@comFlags:
   203                           	opt stack 0
   204  000064                     ___lwdiv@counter:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0x4
   208  000064                     	ds	1
   209  000065                     LCDCommand@command:
   210                           	opt stack 0
   211  000065                     LCDInitCommand@command:
   212                           	opt stack 0
   213  000065                     LCDWriteData@c:
   214                           	opt stack 0
   215  000065                     ___lwdiv@quotient:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x5
   219  000065                     	ds	1
   220  000066                     ??_LCDInit:
   221  000066                     LCDSetPos@row:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x6
   225  000066                     	ds	1
   226  000067                     ?___lwmod:
   227                           	opt stack 0
   228  000067                     LCDInit@functionSet:
   229                           	opt stack 0
   230  000067                     ___lwmod@dividend:
   231                           	opt stack 0
   232                           
   233                           ; 2 bytes @ 0x7
   234  000067                     	ds	1
   235  000068                     LCDSetPos@col:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x8
   239  000068                     	ds	1
   240  000069                     ___lwmod@divisor:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x9
   244  000069                     	ds	1
   245  00006A                     ??_LCDSetPos:
   246                           
   247                           ; 0 bytes @ 0xA
   248  00006A                     	ds	1
   249  00006B                     ___lwmod@counter:
   250                           	opt stack 0
   251  00006B                     LCDSetPos@pos:
   252                           	opt stack 0
   253                           
   254                           ; 2 bytes @ 0xB
   255  00006B                     	ds	1
   256  00006C                     ?_sprintf:
   257                           	opt stack 0
   258  00006C                     sprintf@sp:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0xC
   262  00006C                     	ds	1
   263  00006D                     LCDClearLine@c:
   264                           	opt stack 0
   265  00006D                     LCDWriteLine@str:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0xD
   269  00006D                     	ds	1
   270  00006E                     LCDClearLine@line:
   271                           	opt stack 0
   272  00006E                     sprintf@f:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0xE
   276  00006E                     	ds	1
   277  00006F                     LCDWriteLine@line:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0xF
   281  00006F                     	ds	1
   282  000070                     
   283                           ; 0 bytes @ 0x10
   284  000070                     	ds	2
   285  000072                     ??_sprintf:
   286                           
   287                           ; 0 bytes @ 0x12
   288  000072                     	ds	1
   289  000073                     sprintf@ap:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x13
   293  000073                     	ds	2
   294  000075                     sprintf@flag:
   295                           	opt stack 0
   296                           
   297                           ; 1 bytes @ 0x15
   298  000075                     	ds	1
   299  000076                     sprintf@prec:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x16
   303  000076                     	ds	1
   304  000077                     sprintf@val:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x17
   308  000077                     	ds	2
   309  000079                     sprintf@c:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x19
   313  000079                     	ds	1
   314  00007A                     main@i:
   315                           	opt stack 0
   316                           
   317                           ; 4 bytes @ 0x1A
   318  00007A                     	ds	4
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	cstackCOMRAM
   323  000001                     __pcstackCOMRAM:
   324                           	opt stack 0
   325  000001                     ?i2___lwdiv:
   326                           	opt stack 0
   327  000001                     I2CWriteByte@choice:
   328                           	opt stack 0
   329  000001                     I2CReadByte@rx:
   330                           	opt stack 0
   331  000001                     i2calculateBase@base:
   332                           	opt stack 0
   333  000001                     i2WriteRegister@b:
   334                           	opt stack 0
   335  000001                     i2___lwdiv@dividend:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x0
   339  000001                     	ds	1
   340  000002                     I2CWriteByte@data:
   341                           	opt stack 0
   342  000002                     i2calculateBase@line:
   343                           	opt stack 0
   344  000002                     i2WriteRegister@reg:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x1
   348  000002                     	ds	1
   349  000003                     I2CWriteByte@byte:
   350                           	opt stack 0
   351  000003                     i2LCDWriteByte@rs:
   352                           	opt stack 0
   353  000003                     i2___lwdiv@divisor:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x2
   357  000003                     	ds	1
   358  000004                     i2LCDWriteByte@c:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x3
   362  000004                     	ds	1
   363  000005                     i2LCDWriteByte@comFlags:
   364                           	opt stack 0
   365  000005                     i2___lwdiv@quotient:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x4
   369  000005                     	ds	1
   370  000006                     i2LCDCommand@command:
   371                           	opt stack 0
   372  000006                     i2LCDWriteData@c:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x5
   376  000006                     	ds	1
   377  000007                     i2___lwdiv@counter:
   378                           	opt stack 0
   379  000007                     i2LCDSetPos@row:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x6
   383  000007                     	ds	1
   384  000008                     ?i2___lwmod:
   385                           	opt stack 0
   386  000008                     i2___lwmod@dividend:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x7
   390  000008                     	ds	1
   391  000009                     i2LCDSetPos@col:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x8
   395  000009                     	ds	1
   396  00000A                     i2___lwmod@divisor:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x9
   400  00000A                     	ds	1
   401  00000B                     ??i2_LCDSetPos:
   402                           
   403                           ; 0 bytes @ 0xA
   404  00000B                     	ds	1
   405  00000C                     i2___lwmod@counter:
   406                           	opt stack 0
   407  00000C                     i2LCDSetPos@pos:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0xB
   411  00000C                     	ds	1
   412  00000D                     ?i2_sprintf:
   413                           	opt stack 0
   414  00000D                     i2sprintf@sp:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0xC
   418  00000D                     	ds	1
   419  00000E                     i2LCDClearLine@line:
   420                           	opt stack 0
   421  00000E                     i2LCDWriteLine@str:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0xD
   425  00000E                     	ds	1
   426  00000F                     i2LCDClearLine@c:
   427                           	opt stack 0
   428  00000F                     i2sprintf@f:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0xE
   432  00000F                     	ds	1
   433  000010                     i2LCDWriteLine@line:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0xF
   437  000010                     	ds	1
   438  000011                     
   439                           ; 0 bytes @ 0x10
   440  000011                     	ds	4
   441  000015                     ??i2_sprintf:
   442                           
   443                           ; 0 bytes @ 0x14
   444  000015                     	ds	1
   445  000016                     i2sprintf@ap:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x15
   449  000016                     	ds	2
   450  000018                     i2sprintf@flag:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x17
   454  000018                     	ds	1
   455  000019                     i2sprintf@prec:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x18
   459  000019                     	ds	1
   460  00001A                     i2sprintf@val:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x19
   464  00001A                     	ds	2
   465  00001C                     i2sprintf@c:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x1B
   469  00001C                     	ds	1
   470  00001D                     ??_HighIsr:
   471                           
   472                           ; 0 bytes @ 0x1C
   473  00001D                     	ds	14
   474  00002B                     HighIsr@rx:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x2A
   478  00002B                     	ds	1
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 32 in file "I2CMaster.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  i               4   26[BANK0 ] long 
   492 ;; Return value:  Size  Location     Type
   493 ;;		None               void
   494 ;; Registers used:
   495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;Total ram usage:        4 bytes
   506 ;; Hardware stack levels required when called:   11
   507 ;; This function calls:
   508 ;;		_ConfigInterrupts
   509 ;;		_ConfigPeriph
   510 ;;		_InitPins
   511 ;;		_LCDClear
   512 ;;		_LCDClearLine
   513 ;;		_LCDInit
   514 ;;		_LCDWriteLine
   515 ;;		_sprintf
   516 ;; This function is called by:
   517 ;;		Startup code after reset
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text0
   522  00130E                     __ptext0:
   523                           	opt stack 0
   524  00130E                     _main:
   525                           	opt stack 20
   526                           
   527                           ;I2CMaster.c: 33: long i;
   528                           ;I2CMaster.c: 34: count = 0;
   529                           
   530                           ;incstack = 0
   531  00130E  0E00               	movlw	0
   532  001310  0100               	movlb	0	; () banked
   533  001312  6F7E               	movwf	_count& (0+255),b
   534                           
   535                           ; BSR set to: 0
   536                           ;I2CMaster.c: 35: OSCTUNEbits.PLLEN = 1;
   537  001314  8C9B               	bsf	3995,6,c	;volatile
   538                           
   539                           ; BSR set to: 0
   540                           ;I2CMaster.c: 36: LCDInit();
   541  001316  EC46  F00B         	call	_LCDInit	;wreg free
   542                           
   543                           ;I2CMaster.c: 37: LCDClear();
   544  00131A  EC46  F00D         	call	_LCDClear	;wreg free
   545                           
   546                           ;I2CMaster.c: 38: InitPins();
   547  00131E  EC2B  F00D         	call	_InitPins	;wreg free
   548                           
   549                           ;I2CMaster.c: 39: ConfigPeriph();
   550  001322  EC3E  F00D         	call	_ConfigPeriph	;wreg free
   551                           
   552                           ;I2CMaster.c: 40: ConfigInterrupts();
   553  001326  EC4C  F00D         	call	_ConfigInterrupts	;wreg free
   554  00132A                     l2558:
   555                           
   556                           ;I2CMaster.c: 43: sprintf(line1str, "%d", count);
   557  00132A  0E7F               	movlw	low _line1str
   558  00132C  0100               	movlb	0	; () banked
   559  00132E  6F6C               	movwf	sprintf@sp& (0+255),b
   560  001330  0E00               	movlw	high _line1str
   561  001332  0100               	movlb	0	; () banked
   562  001334  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
   563  001336  0E19               	movlw	low (STR_2+14)
   564  001338  0100               	movlb	0	; () banked
   565  00133A  6F6E               	movwf	sprintf@f& (0+255),b
   566  00133C  0E10               	movlw	high (STR_2+14)
   567  00133E  0100               	movlb	0	; () banked
   568  001340  6F6F               	movwf	(sprintf@f+1)& (0+255),b
   569  001342  C07E  F070         	movff	_count,?_sprintf+4
   570  001346  0100               	movlb	0	; () banked
   571  001348  6B71               	clrf	(?_sprintf+5)& (0+255),b
   572  00134A  EC0F  F008         	call	_sprintf	;wreg free
   573                           
   574                           ;I2CMaster.c: 44: LCDClearLine(0);
   575  00134E  0E00               	movlw	0
   576  001350  EC08  F00C         	call	_LCDClearLine
   577                           
   578                           ;I2CMaster.c: 45: LCDWriteLine(line1str, 0);
   579  001354  0E7F               	movlw	low _line1str
   580  001356  0100               	movlb	0	; () banked
   581  001358  6F6D               	movwf	LCDWriteLine@str& (0+255),b
   582  00135A  0E00               	movlw	high _line1str
   583  00135C  0100               	movlb	0	; () banked
   584  00135E  6F6E               	movwf	(LCDWriteLine@str+1)& (0+255),b
   585  001360  0E00               	movlw	0
   586  001362  0100               	movlb	0	; () banked
   587  001364  6F6F               	movwf	LCDWriteLine@line& (0+255),b
   588  001366  ECDA  F009         	call	_LCDWriteLine	;wreg free
   589                           
   590                           ;I2CMaster.c: 46: for (i = 0; i < 300000; ++i);
   591  00136A  0E00               	movlw	0
   592  00136C  0100               	movlb	0	; () banked
   593  00136E  6F7A               	movwf	main@i& (0+255),b
   594  001370  0E00               	movlw	0
   595  001372  6F7B               	movwf	(main@i+1)& (0+255),b
   596  001374  0E00               	movlw	0
   597  001376  6F7C               	movwf	(main@i+2)& (0+255),b
   598  001378  0E00               	movlw	0
   599  00137A  6F7D               	movwf	(main@i+3)& (0+255),b
   600  00137C                     l2566:
   601                           
   602                           ; BSR set to: 0
   603  00137C  0100               	movlb	0	; () banked
   604  00137E  BF7D               	btfsc	(main@i+3)& (0+255),7,b
   605  001380  D00E               	goto	l2570
   606  001382  0100               	movlb	0	; () banked
   607  001384  517D               	movf	(main@i+3)& (0+255),w,b
   608  001386  E113               	bnz	l2572
   609  001388  0EE0               	movlw	224
   610  00138A  0100               	movlb	0	; () banked
   611  00138C  5D7A               	subwf	main@i& (0+255),w,b
   612  00138E  0E93               	movlw	147
   613  001390  0100               	movlb	0	; () banked
   614  001392  597B               	subwfb	(main@i+1)& (0+255),w,b
   615  001394  0E04               	movlw	4
   616  001396  0100               	movlb	0	; () banked
   617  001398  597C               	subwfb	(main@i+2)& (0+255),w,b
   618  00139A  B0D8               	btfsc	status,0,c
   619  00139C  D008               	goto	l2572
   620  00139E                     l2570:
   621                           
   622                           ; BSR set to: 0
   623  00139E  0E01               	movlw	1
   624  0013A0  0100               	movlb	0	; () banked
   625  0013A2  277A               	addwf	main@i& (0+255),f,b
   626  0013A4  0E00               	movlw	0
   627  0013A6  237B               	addwfc	(main@i+1)& (0+255),f,b
   628  0013A8  237C               	addwfc	(main@i+2)& (0+255),f,b
   629  0013AA  237D               	addwfc	(main@i+3)& (0+255),f,b
   630  0013AC  D7E7               	goto	l2566
   631  0013AE                     l2572:
   632                           
   633                           ; BSR set to: 0
   634                           ;I2CMaster.c: 47: ++count;
   635  0013AE  0100               	movlb	0	; () banked
   636  0013B0  2B7E               	incf	_count& (0+255),f,b
   637                           
   638                           ; BSR set to: 0
   639  0013B2  D7BB               	goto	l2558
   640  0013B4                     __end_of_main:
   641                           	opt stack 0
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           status	equ	0xFD8
   645                           
   646 ;; *************** function _sprintf *****************
   647 ;; Defined at:
   648 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  sp              2   12[BANK0 ] PTR unsigned char 
   651 ;;		 -> line2str(17), line1str(17), 
   652 ;;  f               2   14[BANK0 ] PTR const unsigned char 
   653 ;;		 -> STR_2(17), STR_1(3), 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  tmpval          4    0        struct .
   656 ;;  cp              3    0        PTR const unsigned char 
   657 ;;  val             2   23[BANK0 ] unsigned int 
   658 ;;  ap              2   19[BANK0 ] PTR void [1]
   659 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
   660 ;;  len             2    0        unsigned int 
   661 ;;  c               1   25[BANK0 ] char 
   662 ;;  prec            1   22[BANK0 ] char 
   663 ;;  flag            1   21[BANK0 ] unsigned char 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  2   12[BANK0 ] int 
   666 ;; Registers used:
   667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   673 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;Total ram usage:       14 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; Hardware stack levels required when called:    7
   680 ;; This function calls:
   681 ;;		___lwdiv
   682 ;;		___lwmod
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text1
   689  00101E                     __ptext1:
   690                           	opt stack 0
   691  00101E                     _sprintf:
   692                           	opt stack 23
   693                           
   694                           ;doprnt.c: 494: va_list ap;
   695                           ;doprnt.c: 499: signed char c;
   696                           ;doprnt.c: 506: signed char prec;
   697                           ;doprnt.c: 508: unsigned char flag;
   698                           ;doprnt.c: 523: union {
   699                           ;doprnt.c: 524: unsigned long vd;
   700                           ;doprnt.c: 525: double integ;
   701                           ;doprnt.c: 526: } tmpval;
   702                           ;doprnt.c: 528: unsigned int val;
   703                           ;doprnt.c: 529: unsigned len;
   704                           ;doprnt.c: 530: const char * cp;
   705                           ;doprnt.c: 533: *ap = __va_start();
   706                           
   707                           ; BSR set to: 0
   708                           ;incstack = 0
   709  00101E  0E70               	movlw	low (?_sprintf+4)
   710  001020  0100               	movlb	0	; () banked
   711  001022  6F73               	movwf	sprintf@ap& (0+255),b
   712  001024  0E00               	movlw	high (?_sprintf+4)
   713  001026  0100               	movlb	0	; () banked
   714  001028  6F74               	movwf	(sprintf@ap+1)& (0+255),b
   715                           
   716                           ;doprnt.c: 536: while(c = *f++) {
   717  00102A  D0AC               	goto	l2476
   718  00102C                     l2424:
   719                           
   720                           ; BSR set to: 0
   721                           ;doprnt.c: 538: if(c != '%')
   722  00102C  0E25               	movlw	37
   723  00102E  0100               	movlb	0	; () banked
   724  001030  1979               	xorwf	sprintf@c& (0+255),w,b
   725  001032  B4D8               	btfsc	status,2,c
   726  001034  D00A               	goto	l2430
   727                           
   728                           ; BSR set to: 0
   729                           ;doprnt.c: 540: {
   730                           ;doprnt.c: 541: ((*sp++ = (c)));
   731  001036  C06C  FFD9         	movff	sprintf@sp,fsr2l
   732  00103A  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
   733  00103E  C079  FFDF         	movff	sprintf@c,indf2
   734                           
   735                           ; BSR set to: 0
   736  001042  0100               	movlb	0	; () banked
   737  001044  4B6C               	infsnz	sprintf@sp& (0+255),f,b
   738  001046  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
   739                           
   740                           ;doprnt.c: 542: continue;
   741  001048  D09D               	goto	l2476
   742  00104A                     l2430:
   743                           
   744                           ; BSR set to: 0
   745                           ;doprnt.c: 543: }
   746                           ;doprnt.c: 548: flag = 0;
   747  00104A  0E00               	movlw	0
   748  00104C  0100               	movlb	0	; () banked
   749  00104E  6F75               	movwf	sprintf@flag& (0+255),b
   750                           
   751                           ; BSR set to: 0
   752                           
   753                           ; BSR set to: 0
   754                           
   755                           ; BSR set to: 0
   756                           ;doprnt.c: 822: }
   757                           
   758                           ; BSR set to: 0
   759                           ;doprnt.c: 813: continue;
   760                           
   761                           ;doprnt.c: 802: default:
   762                           
   763                           ; BSR set to: 0
   764                           ;doprnt.c: 698: case 'i':
   765                           ;doprnt.c: 699: break;
   766                           
   767                           ; BSR set to: 0
   768                           
   769                           ;doprnt.c: 697: case 'd':
   770                           
   771                           ; BSR set to: 0
   772                           ;doprnt.c: 638: goto alldone;
   773                           
   774                           ;doprnt.c: 637: case 0:
   775                           
   776                           ;doprnt.c: 635: switch(c = *f++) {
   777  001050  C06E  FFF6         	movff	sprintf@f,tblptrl
   778  001054  C06F  FFF7         	movff	sprintf@f+1,tblptrh
   779  001058  0100               	movlb	0	; () banked
   780  00105A  4B6E               	infsnz	sprintf@f& (0+255),f,b
   781  00105C  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
   782  00105E                     	if	0	;tblptru may be non-zero
   783  00105E                     	endif
   784  00105E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   785  00105E  0E00               	movlw	low (__mediumconst shr (0+16))
   786  001060  6EF8               	movwf	tblptru,c
   787  001062                     	endif
   788  001062  0008               	tblrd		*
   789  001064  CFF5 F079          	movff	tablat,sprintf@c
   790  001068  0100               	movlb	0	; () banked
   791  00106A  5179               	movf	sprintf@c& (0+255),w,b
   792                           
   793                           ; Switch size 1, requested type "space"
   794                           ; Number of cases is 3, Range of values is 0 to 105
   795                           ; switch strategies available:
   796                           ; Name         Instructions Cycles
   797                           ; simple_byte           10     6 (average)
   798                           ;	Chosen strategy is simple_byte
   799  00106C  0A00               	xorlw	0	; case 0
   800  00106E  B4D8               	btfsc	status,2,c
   801  001070  D099               	goto	l2478
   802  001072  0A64               	xorlw	100	; case 100
   803  001074  B4D8               	btfsc	status,2,c
   804  001076  D003               	goto	l2436
   805  001078  0A0D               	xorlw	13	; case 105
   806  00107A  A4D8               	btfss	status,2,c
   807  00107C  D083               	goto	l2476
   808  00107E                     l2436:
   809                           
   810                           ; BSR set to: 0
   811                           ;doprnt.c: 1253: {
   812                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   813  00107E  C073  FFD9         	movff	sprintf@ap,fsr2l
   814  001082  C074  FFDA         	movff	sprintf@ap+1,fsr2h
   815  001086  CFDE F077          	movff	postinc2,sprintf@val
   816  00108A  CFDD F078          	movff	postdec2,sprintf@val+1
   817                           
   818                           ; BSR set to: 0
   819  00108E  0E02               	movlw	2
   820  001090  0100               	movlb	0	; () banked
   821  001092  2773               	addwf	sprintf@ap& (0+255),f,b
   822  001094  0E00               	movlw	0
   823  001096  2374               	addwfc	(sprintf@ap+1)& (0+255),f,b
   824                           
   825                           ; BSR set to: 0
   826                           ;doprnt.c: 1261: if((int)val < 0) {
   827  001098  0100               	movlb	0	; () banked
   828  00109A  AF78               	btfss	(sprintf@val+1)& (0+255),7,b
   829  00109C  D008               	goto	l2446
   830                           
   831                           ; BSR set to: 0
   832                           ;doprnt.c: 1262: flag |= 0x03;
   833  00109E  0E03               	movlw	3
   834  0010A0  0100               	movlb	0	; () banked
   835  0010A2  1375               	iorwf	sprintf@flag& (0+255),f,b
   836                           
   837                           ; BSR set to: 0
   838                           ;doprnt.c: 1263: val = -val;
   839  0010A4  0100               	movlb	0	; () banked
   840  0010A6  6D77               	negf	sprintf@val& (0+255),b
   841  0010A8  1F78               	comf	(sprintf@val+1)& (0+255),f,b
   842  0010AA  B0D8               	btfsc	status,0,c
   843  0010AC  2B78               	incf	(sprintf@val+1)& (0+255),f,b
   844  0010AE                     l2446:
   845                           
   846                           ; BSR set to: 0
   847                           ;doprnt.c: 1264: }
   848                           ;doprnt.c: 1266: }
   849                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   850  0010AE  0E01               	movlw	1
   851  0010B0  0100               	movlb	0	; () banked
   852  0010B2  6F79               	movwf	sprintf@c& (0+255),b
   853  0010B4                     l2448:
   854                           
   855                           ; BSR set to: 0
   856  0010B4  0E05               	movlw	5
   857  0010B6  0100               	movlb	0	; () banked
   858  0010B8  1979               	xorwf	sprintf@c& (0+255),w,b
   859  0010BA  B4D8               	btfsc	status,2,c
   860  0010BC  D019               	goto	l2460
   861                           
   862                           ; BSR set to: 0
   863                           ;doprnt.c: 1306: if(val < dpowers[c])
   864                           
   865                           ; BSR set to: 0
   866                           
   867                           ; BSR set to: 0
   868  0010BE  0100               	movlb	0	; () banked
   869  0010C0  5179               	movf	sprintf@c& (0+255),w,b
   870  0010C2  0D02               	mullw	2
   871  0010C4  0E01               	movlw	low _dpowers
   872  0010C6  24F3               	addwf	prodl,w,c
   873  0010C8  6EF6               	movwf	tblptrl,c
   874  0010CA  0E10               	movlw	high _dpowers
   875  0010CC  20F4               	addwfc	prodh,w,c
   876  0010CE  6EF7               	movwf	tblptrh,c
   877  0010D0                     	if	1	;There are 3 active tblptr bytes
   878  0010D0  6AF8               	clrf	tblptru,c
   879  0010D2  0E00               	movlw	low (__mediumconst shr (0+16))
   880  0010D4  22F8               	addwfc	tblptru,f,c
   881  0010D6                     	endif
   882  0010D6  0009               	tblrd		*+
   883  0010D8  50F5               	movf	tablat,w,c
   884  0010DA  0100               	movlb	0	; () banked
   885  0010DC  5D77               	subwf	sprintf@val& (0+255),w,b
   886  0010DE  0009               	tblrd		*+
   887  0010E0  50F5               	movf	tablat,w,c
   888  0010E2  0100               	movlb	0	; () banked
   889  0010E4  5978               	subwfb	(sprintf@val+1)& (0+255),w,b
   890  0010E6  A0D8               	btfss	status,0,c
   891  0010E8  D003               	goto	l2460
   892                           
   893                           ; BSR set to: 0
   894                           
   895                           ; BSR set to: 0
   896                           
   897                           ; BSR set to: 0
   898                           ;doprnt.c: 1307: break;
   899  0010EA  0100               	movlb	0	; () banked
   900  0010EC  2B79               	incf	sprintf@c& (0+255),f,b
   901  0010EE  D7E2               	goto	l2448
   902  0010F0                     l2460:
   903                           
   904                           ; BSR set to: 0
   905                           ;doprnt.c: 1422: {
   906                           ;doprnt.c: 1438: if(flag & 0x03)
   907  0010F0  C075  F072         	movff	sprintf@flag,??_sprintf
   908  0010F4  0E03               	movlw	3
   909  0010F6  0100               	movlb	0	; () banked
   910  0010F8  1772               	andwf	??_sprintf& (0+255),f,b
   911  0010FA  B4D8               	btfsc	status,2,c
   912  0010FC  D009               	goto	l2466
   913                           
   914                           ; BSR set to: 0
   915                           ;doprnt.c: 1439: ((*sp++ = ('-')));
   916  0010FE  C06C  FFD9         	movff	sprintf@sp,fsr2l
   917  001102  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
   918  001106  0E2D               	movlw	45
   919  001108  6EDF               	movwf	indf2,c
   920                           
   921                           ; BSR set to: 0
   922  00110A  0100               	movlb	0	; () banked
   923  00110C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
   924  00110E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
   925  001110                     l2466:
   926                           
   927                           ; BSR set to: 0
   928                           ;doprnt.c: 1469: }
   929                           ;doprnt.c: 1472: prec = c;
   930  001110  C079  F076         	movff	sprintf@c,sprintf@prec
   931                           
   932                           ;doprnt.c: 1474: while(prec--) {
   933  001114  D031               	goto	l2474
   934  001116                     l2468:
   935                           
   936                           ; BSR set to: 0
   937                           ;doprnt.c: 1478: {
   938                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   939  001116  0100               	movlb	0	; () banked
   940  001118  5176               	movf	sprintf@prec& (0+255),w,b
   941  00111A  0D02               	mullw	2
   942  00111C  0E01               	movlw	low _dpowers
   943  00111E  24F3               	addwf	prodl,w,c
   944  001120  6EF6               	movwf	tblptrl,c
   945  001122  0E10               	movlw	high _dpowers
   946  001124  20F4               	addwfc	prodh,w,c
   947  001126  6EF7               	movwf	tblptrh,c
   948  001128                     	if	1	;There are 3 active tblptr bytes
   949  001128  6AF8               	clrf	tblptru,c
   950  00112A  0E00               	movlw	low (__mediumconst shr (0+16))
   951  00112C  22F8               	addwfc	tblptru,f,c
   952  00112E                     	endif
   953  00112E  0009               	tblrd		*+
   954  001130  CFF5 F062          	movff	tablat,___lwdiv@divisor
   955  001134  000A               	tblrd		*-
   956  001136  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
   957  00113A  C077  F060         	movff	sprintf@val,___lwdiv@dividend
   958  00113E  C078  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
   959  001142  EC73  F00A         	call	___lwdiv	;wreg free
   960  001146  C060  F067         	movff	?___lwdiv,___lwmod@dividend
   961  00114A  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
   962  00114E  0E00               	movlw	0
   963  001150  0100               	movlb	0	; () banked
   964  001152  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
   965  001154  0E0A               	movlw	10
   966  001156  6F69               	movwf	___lwmod@divisor& (0+255),b
   967  001158  EC15  F00B         	call	___lwmod	;wreg free
   968  00115C  0100               	movlb	0	; () banked
   969  00115E  5167               	movf	?___lwmod& (0+255),w,b
   970  001160  0F30               	addlw	48
   971  001162  0100               	movlb	0	; () banked
   972  001164  6F79               	movwf	sprintf@c& (0+255),b
   973                           
   974                           ; BSR set to: 0
   975                           ;doprnt.c: 1523: }
   976                           ;doprnt.c: 1524: ((*sp++ = (c)));
   977  001166  C06C  FFD9         	movff	sprintf@sp,fsr2l
   978  00116A  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
   979  00116E  C079  FFDF         	movff	sprintf@c,indf2
   980                           
   981                           ; BSR set to: 0
   982  001172  0100               	movlb	0	; () banked
   983  001174  4B6C               	infsnz	sprintf@sp& (0+255),f,b
   984  001176  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
   985  001178                     l2474:
   986                           
   987                           ; BSR set to: 0
   988  001178  0100               	movlb	0	; () banked
   989  00117A  0776               	decf	sprintf@prec& (0+255),f,b
   990  00117C  0100               	movlb	0	; () banked
   991  00117E  2976               	incf	sprintf@prec& (0+255),w,b
   992  001180  A4D8               	btfss	status,2,c
   993  001182  D7C9               	goto	l2468
   994  001184                     l2476:
   995                           
   996                           ; BSR set to: 0
   997  001184  C06E  FFF6         	movff	sprintf@f,tblptrl
   998  001188  C06F  FFF7         	movff	sprintf@f+1,tblptrh
   999  00118C  0100               	movlb	0	; () banked
  1000  00118E  4B6E               	infsnz	sprintf@f& (0+255),f,b
  1001  001190  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  1002  001192                     	if	0	;tblptru may be non-zero
  1003  001192                     	endif
  1004  001192                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1005  001192  0E00               	movlw	low (__mediumconst shr (0+16))
  1006  001194  6EF8               	movwf	tblptru,c
  1007  001196                     	endif
  1008  001196  0008               	tblrd		*
  1009  001198  CFF5 F079          	movff	tablat,sprintf@c
  1010  00119C  0100               	movlb	0	; () banked
  1011  00119E  5179               	movf	sprintf@c& (0+255),w,b
  1012  0011A0  A4D8               	btfss	status,2,c
  1013  0011A2  D744               	goto	l2424
  1014  0011A4                     l2478:
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;doprnt.c: 1538: *sp = 0;
  1018  0011A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  1019  0011A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  1020  0011AC  0E00               	movlw	0
  1021  0011AE  6EDF               	movwf	indf2,c
  1022  0011B0  0012               	return	
  1023  0011B2                     __end_of_sprintf:
  1024                           	opt stack 0
  1025                           tblptru	equ	0xFF8
  1026                           tblptrh	equ	0xFF7
  1027                           tblptrl	equ	0xFF6
  1028                           tablat	equ	0xFF5
  1029                           prodh	equ	0xFF4
  1030                           prodl	equ	0xFF3
  1031                           postinc0	equ	0xFEE
  1032                           wreg	equ	0xFE8
  1033                           indf2	equ	0xFDF
  1034                           postinc2	equ	0xFDE
  1035                           postdec2	equ	0xFDD
  1036                           fsr2h	equ	0xFDA
  1037                           fsr2l	equ	0xFD9
  1038                           status	equ	0xFD8
  1039                           
  1040 ;; *************** function ___lwmod *****************
  1041 ;; Defined at:
  1042 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  dividend        2    7[BANK0 ] unsigned int 
  1045 ;;  divisor         2    9[BANK0 ] unsigned int 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  counter         1   11[BANK0 ] unsigned char 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  2    7[BANK0 ] unsigned int 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1057 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;Total ram usage:        5 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    6
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_sprintf
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text2
  1072  00162A                     __ptext2:
  1073                           	opt stack 0
  1074  00162A                     ___lwmod:
  1075                           	opt stack 23
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;incstack = 0
  1079  00162A  0100               	movlb	0	; () banked
  1080  00162C  5169               	movf	___lwmod@divisor& (0+255),w,b
  1081  00162E  0100               	movlb	0	; () banked
  1082  001630  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1083  001632  B4D8               	btfsc	status,2,c
  1084  001634  D026               	goto	l741
  1085                           
  1086                           ; BSR set to: 0
  1087  001636  0E01               	movlw	1
  1088  001638  0100               	movlb	0	; () banked
  1089  00163A  6F6B               	movwf	___lwmod@counter& (0+255),b
  1090  00163C  D006               	goto	l2376
  1091  00163E                     l2374:
  1092                           
  1093                           ; BSR set to: 0
  1094  00163E  0100               	movlb	0	; () banked
  1095  001640  90D8               	bcf	status,0,c
  1096  001642  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  1097  001644  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1098  001646  0100               	movlb	0	; () banked
  1099  001648  2B6B               	incf	___lwmod@counter& (0+255),f,b
  1100  00164A                     l2376:
  1101                           
  1102                           ; BSR set to: 0
  1103  00164A  0100               	movlb	0	; () banked
  1104  00164C  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1105  00164E  D7F7               	goto	l2374
  1106  001650                     l2378:
  1107                           
  1108                           ; BSR set to: 0
  1109  001650  0100               	movlb	0	; () banked
  1110  001652  5169               	movf	___lwmod@divisor& (0+255),w,b
  1111  001654  0100               	movlb	0	; () banked
  1112  001656  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  1113  001658  0100               	movlb	0	; () banked
  1114  00165A  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1115  00165C  0100               	movlb	0	; () banked
  1116  00165E  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1117  001660  A0D8               	btfss	status,0,c
  1118  001662  D008               	goto	l2382
  1119                           
  1120                           ; BSR set to: 0
  1121  001664  0100               	movlb	0	; () banked
  1122  001666  5169               	movf	___lwmod@divisor& (0+255),w,b
  1123  001668  0100               	movlb	0	; () banked
  1124  00166A  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  1125  00166C  0100               	movlb	0	; () banked
  1126  00166E  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1127  001670  0100               	movlb	0	; () banked
  1128  001672  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1129  001674                     l2382:
  1130                           
  1131                           ; BSR set to: 0
  1132  001674  0100               	movlb	0	; () banked
  1133  001676  90D8               	bcf	status,0,c
  1134  001678  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1135  00167A  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  1136                           
  1137                           ; BSR set to: 0
  1138  00167C  0100               	movlb	0	; () banked
  1139  00167E  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  1140  001680  D7E7               	goto	l2378
  1141  001682                     l741:
  1142                           
  1143                           ; BSR set to: 0
  1144  001682  C067  F067         	movff	___lwmod@dividend,?___lwmod
  1145  001686  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  1146                           
  1147                           ; BSR set to: 0
  1148  00168A  0012               	return		;funcret
  1149  00168C                     __end_of___lwmod:
  1150                           	opt stack 0
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           prodh	equ	0xFF4
  1156                           prodl	equ	0xFF3
  1157                           postinc0	equ	0xFEE
  1158                           wreg	equ	0xFE8
  1159                           indf2	equ	0xFDF
  1160                           postinc2	equ	0xFDE
  1161                           postdec2	equ	0xFDD
  1162                           fsr2h	equ	0xFDA
  1163                           fsr2l	equ	0xFD9
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function ___lwdiv *****************
  1167 ;; Defined at:
  1168 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  dividend        2    0[BANK0 ] unsigned int 
  1171 ;;  divisor         2    2[BANK0 ] unsigned int 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  quotient        2    5[BANK0 ] unsigned int 
  1174 ;;  counter         1    4[BANK0 ] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  2    0[BANK0 ] unsigned int 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1184 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;Total ram usage:        7 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    6
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_sprintf
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text3
  1199  0014E6                     __ptext3:
  1200                           	opt stack 0
  1201  0014E6                     ___lwdiv:
  1202                           	opt stack 23
  1203                           
  1204                           ; BSR set to: 0
  1205                           ;incstack = 0
  1206  0014E6  0E00               	movlw	0
  1207  0014E8  0100               	movlb	0	; () banked
  1208  0014EA  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1209  0014EC  0E00               	movlw	0
  1210  0014EE  6F65               	movwf	___lwdiv@quotient& (0+255),b
  1211                           
  1212                           ; BSR set to: 0
  1213  0014F0  0100               	movlb	0	; () banked
  1214  0014F2  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1215  0014F4  0100               	movlb	0	; () banked
  1216  0014F6  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1217  0014F8  B4D8               	btfsc	status,2,c
  1218  0014FA  D02C               	goto	l731
  1219                           
  1220                           ; BSR set to: 0
  1221  0014FC  0E01               	movlw	1
  1222  0014FE  0100               	movlb	0	; () banked
  1223  001500  6F64               	movwf	___lwdiv@counter& (0+255),b
  1224  001502  D006               	goto	l2356
  1225  001504                     l2354:
  1226                           
  1227                           ; BSR set to: 0
  1228  001504  0100               	movlb	0	; () banked
  1229  001506  90D8               	bcf	status,0,c
  1230  001508  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  1231  00150A  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1232  00150C  0100               	movlb	0	; () banked
  1233  00150E  2B64               	incf	___lwdiv@counter& (0+255),f,b
  1234  001510                     l2356:
  1235                           
  1236                           ; BSR set to: 0
  1237  001510  0100               	movlb	0	; () banked
  1238  001512  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1239  001514  D7F7               	goto	l2354
  1240  001516                     l2358:
  1241                           
  1242                           ; BSR set to: 0
  1243  001516  0100               	movlb	0	; () banked
  1244  001518  90D8               	bcf	status,0,c
  1245  00151A  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  1246  00151C  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1247                           
  1248                           ; BSR set to: 0
  1249  00151E  0100               	movlb	0	; () banked
  1250  001520  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1251  001522  0100               	movlb	0	; () banked
  1252  001524  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  1253  001526  0100               	movlb	0	; () banked
  1254  001528  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1255  00152A  0100               	movlb	0	; () banked
  1256  00152C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1257  00152E  A0D8               	btfss	status,0,c
  1258  001530  D00A               	goto	l2366
  1259                           
  1260                           ; BSR set to: 0
  1261  001532  0100               	movlb	0	; () banked
  1262  001534  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1263  001536  0100               	movlb	0	; () banked
  1264  001538  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  1265  00153A  0100               	movlb	0	; () banked
  1266  00153C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1267  00153E  0100               	movlb	0	; () banked
  1268  001540  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1269                           
  1270                           ; BSR set to: 0
  1271  001542  0100               	movlb	0	; () banked
  1272  001544  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  1273  001546                     l2366:
  1274                           
  1275                           ; BSR set to: 0
  1276  001546  0100               	movlb	0	; () banked
  1277  001548  90D8               	bcf	status,0,c
  1278  00154A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1279  00154C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  1280                           
  1281                           ; BSR set to: 0
  1282  00154E  0100               	movlb	0	; () banked
  1283  001550  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  1284  001552  D7E1               	goto	l2358
  1285  001554                     l731:
  1286                           
  1287                           ; BSR set to: 0
  1288  001554  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  1289  001558  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1290                           
  1291                           ; BSR set to: 0
  1292  00155C  0012               	return		;funcret
  1293  00155E                     __end_of___lwdiv:
  1294                           	opt stack 0
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           prodh	equ	0xFF4
  1300                           prodl	equ	0xFF3
  1301                           postinc0	equ	0xFEE
  1302                           wreg	equ	0xFE8
  1303                           indf2	equ	0xFDF
  1304                           postinc2	equ	0xFDE
  1305                           postdec2	equ	0xFDD
  1306                           fsr2h	equ	0xFDA
  1307                           fsr2l	equ	0xFD9
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function _LCDWriteLine *****************
  1311 ;; Defined at:
  1312 ;;		line 59 in file "LCD.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  str             2   13[BANK0 ] PTR const unsigned char 
  1315 ;;		 -> LCDScroll@str(17), line2str(17), line1str(17), 
  1316 ;;  line            1   15[BANK0 ] unsigned char 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;		None               void
  1321 ;; Registers used:
  1322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1328 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;Total ram usage:        4 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:   10
  1335 ;; This function calls:
  1336 ;;		_LCDSetPos
  1337 ;;		_LCDWriteData
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;;		_LCDScroll
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text4
  1345  0013B4                     __ptext4:
  1346                           	opt stack 0
  1347  0013B4                     _LCDWriteLine:
  1348                           	opt stack 20
  1349                           
  1350                           ;LCD.c: 60: if (line >= 2) {
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;incstack = 0
  1354  0013B4  0E01               	movlw	1
  1355  0013B6  0100               	movlb	0	; () banked
  1356  0013B8  656F               	cpfsgt	LCDWriteLine@line& (0+255),b
  1357  0013BA  D001               	goto	l2500
  1358  0013BC  0012               	return	
  1359  0013BE                     l2500:
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;LCD.c: 62: }
  1363                           ;LCD.c: 63: LCDSetPos(line, 0);
  1364  0013BE  C06F  F066         	movff	LCDWriteLine@line,LCDSetPos@row
  1365  0013C2  0100               	movlb	0	; () banked
  1366  0013C4  6B67               	clrf	(LCDSetPos@row+1)& (0+255),b
  1367  0013C6  0E00               	movlw	0
  1368  0013C8  0100               	movlb	0	; () banked
  1369  0013CA  6F69               	movwf	(LCDSetPos@col+1)& (0+255),b
  1370  0013CC  0E00               	movlw	0
  1371  0013CE  6F68               	movwf	LCDSetPos@col& (0+255),b
  1372  0013D0  ECAF  F00A         	call	_LCDSetPos	;wreg free
  1373                           
  1374                           ;LCD.c: 64: while (*str) {
  1375  0013D4  D038               	goto	l2520
  1376  0013D6                     l2502:
  1377                           
  1378                           ;LCD.c: 65: if (*str == '\n') {
  1379  0013D6  C06D  FFD9         	movff	LCDWriteLine@str,fsr2l
  1380  0013DA  C06E  FFDA         	movff	LCDWriteLine@str+1,fsr2h
  1381  0013DE  0E0A               	movlw	10
  1382  0013E0  18DE               	xorwf	postinc2,w,c
  1383  0013E2  A4D8               	btfss	status,2,c
  1384  0013E4  D00A               	goto	l2510
  1385                           
  1386                           ;LCD.c: 66: ++line;
  1387  0013E6  0100               	movlb	0	; () banked
  1388  0013E8  2B6F               	incf	LCDWriteLine@line& (0+255),f,b
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;LCD.c: 67: if (line == 2) {
  1392  0013EA  0E02               	movlw	2
  1393  0013EC  0100               	movlb	0	; () banked
  1394  0013EE  196F               	xorwf	LCDWriteLine@line& (0+255),w,b
  1395  0013F0  A4D8               	btfss	status,2,c
  1396  0013F2  D003               	goto	l2510
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;LCD.c: 68: line = 0;
  1400  0013F4  0E00               	movlw	0
  1401  0013F6  0100               	movlb	0	; () banked
  1402  0013F8  6F6F               	movwf	LCDWriteLine@line& (0+255),b
  1403  0013FA                     l2510:
  1404                           
  1405                           ;LCD.c: 69: }
  1406                           ;LCD.c: 70: }
  1407                           ;LCD.c: 71: if (*str == '\r' || *str == '\n') {
  1408  0013FA  C06D  FFD9         	movff	LCDWriteLine@str,fsr2l
  1409  0013FE  C06E  FFDA         	movff	LCDWriteLine@str+1,fsr2h
  1410  001402  0E0D               	movlw	13
  1411  001404  18DE               	xorwf	postinc2,w,c
  1412  001406  B4D8               	btfsc	status,2,c
  1413  001408  D008               	goto	l2514
  1414  00140A  C06D  FFD9         	movff	LCDWriteLine@str,fsr2l
  1415  00140E  C06E  FFDA         	movff	LCDWriteLine@str+1,fsr2h
  1416  001412  0E0A               	movlw	10
  1417  001414  18DE               	xorwf	postinc2,w,c
  1418  001416  A4D8               	btfss	status,2,c
  1419  001418  D00C               	goto	l2516
  1420  00141A                     l2514:
  1421                           
  1422                           ;LCD.c: 72: LCDSetPos(line, 0);
  1423  00141A  C06F  F066         	movff	LCDWriteLine@line,LCDSetPos@row
  1424  00141E  0100               	movlb	0	; () banked
  1425  001420  6B67               	clrf	(LCDSetPos@row+1)& (0+255),b
  1426  001422  0E00               	movlw	0
  1427  001424  0100               	movlb	0	; () banked
  1428  001426  6F69               	movwf	(LCDSetPos@col+1)& (0+255),b
  1429  001428  0E00               	movlw	0
  1430  00142A  6F68               	movwf	LCDSetPos@col& (0+255),b
  1431  00142C  ECAF  F00A         	call	_LCDSetPos	;wreg free
  1432                           
  1433                           ;LCD.c: 73: } else {
  1434  001430  D007               	goto	l2518
  1435  001432                     l2516:
  1436                           
  1437                           ;LCD.c: 74: LCDWriteData(*str);
  1438  001432  C06D  FFD9         	movff	LCDWriteLine@str,fsr2l
  1439  001436  C06E  FFDA         	movff	LCDWriteLine@str+1,fsr2h
  1440  00143A  50DF               	movf	indf2,w,c
  1441  00143C  ECEF  F00C         	call	_LCDWriteData
  1442  001440                     l2518:
  1443                           
  1444                           ;LCD.c: 75: }
  1445                           ;LCD.c: 76: ++str;
  1446  001440  0100               	movlb	0	; () banked
  1447  001442  4B6D               	infsnz	LCDWriteLine@str& (0+255),f,b
  1448  001444  2B6E               	incf	(LCDWriteLine@str+1)& (0+255),f,b
  1449  001446                     l2520:
  1450  001446  C06D  FFD9         	movff	LCDWriteLine@str,fsr2l
  1451  00144A  C06E  FFDA         	movff	LCDWriteLine@str+1,fsr2h
  1452  00144E  50DF               	movf	indf2,w,c
  1453  001450  B4D8               	btfsc	status,2,c
  1454  001452  0012               	return	
  1455  001454  D7C0               	goto	l2502
  1456  001456                     __end_of_LCDWriteLine:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           prodh	equ	0xFF4
  1463                           prodl	equ	0xFF3
  1464                           postinc0	equ	0xFEE
  1465                           wreg	equ	0xFE8
  1466                           indf2	equ	0xFDF
  1467                           postinc2	equ	0xFDE
  1468                           postdec2	equ	0xFDD
  1469                           fsr2h	equ	0xFDA
  1470                           fsr2l	equ	0xFD9
  1471                           status	equ	0xFD8
  1472                           
  1473 ;; *************** function _LCDInit *****************
  1474 ;; Defined at:
  1475 ;;		line 24 in file "LCD.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  functionSet     1    7[BANK0 ] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;		None               void
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;Total ram usage:        2 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    9
  1496 ;; This function calls:
  1497 ;;		_LCDInitCommand
  1498 ;;		_LCDInitPort
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text5
  1505  00168C                     __ptext5:
  1506                           	opt stack 0
  1507  00168C                     _LCDInit:
  1508                           	opt stack 21
  1509                           
  1510                           ;LCD.c: 25: char functionSet = 0b00111000;
  1511                           
  1512                           ;incstack = 0
  1513  00168C  0E38               	movlw	56
  1514  00168E  0100               	movlb	0	; () banked
  1515  001690  6F67               	movwf	LCDInit@functionSet& (0+255),b
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;LCD.c: 26: LCDInitPort();
  1519  001692  EC46  F00C         	call	_LCDInitPort	;wreg free
  1520                           
  1521                           ;LCD.c: 27: _delay((unsigned long)((10)*(40000000L/4000.0)));
  1522  001696  0E82               	movlw	130
  1523  001698  0100               	movlb	0	; () banked
  1524  00169A  6F66               	movwf	??_LCDInit& (0+255),b
  1525  00169C  0EDE               	movlw	222
  1526  00169E                     u2467:
  1527  00169E  2EE8               	decfsz	wreg,f,c
  1528  0016A0  D7FE               	goto	u2467
  1529  0016A2  2F66               	decfsz	??_LCDInit& (0+255),f,b
  1530  0016A4  D7FC               	goto	u2467
  1531                           
  1532                           ;LCD.c: 37: LCDInitCommand(functionSet);
  1533  0016A6  0100               	movlb	0	; () banked
  1534  0016A8  5167               	movf	LCDInit@functionSet& (0+255),w,b
  1535  0016AA  EC21  F00D         	call	_LCDInitCommand
  1536                           
  1537                           ;LCD.c: 38: _delay((unsigned long)((40)*(40000000L/4000000.0)));
  1538  0016AE  0E85               	movlw	133
  1539  0016B0                     u2477:
  1540  0016B0  2EE8               	decfsz	wreg,f,c
  1541  0016B2  D7FE               	goto	u2477
  1542  0016B4  F000               	nop	
  1543                           
  1544                           ;LCD.c: 39: LCDInitCommand(0b00001100);
  1545  0016B6  0E0C               	movlw	12
  1546  0016B8  EC21  F00D         	call	_LCDInitCommand
  1547                           
  1548                           ;LCD.c: 40: _delay((unsigned long)((40)*(40000000L/4000000.0)));
  1549  0016BC  0E85               	movlw	133
  1550  0016BE                     u2487:
  1551  0016BE  2EE8               	decfsz	wreg,f,c
  1552  0016C0  D7FE               	goto	u2487
  1553  0016C2  F000               	nop	
  1554                           
  1555                           ;LCD.c: 41: LCDInitCommand(0b00000001);
  1556  0016C4  0E01               	movlw	1
  1557  0016C6  EC21  F00D         	call	_LCDInitCommand
  1558                           
  1559                           ;LCD.c: 42: _delay((unsigned long)((1700)*(40000000L/4000000.0)));
  1560  0016CA  0E17               	movlw	23
  1561  0016CC  0100               	movlb	0	; () banked
  1562  0016CE  6F66               	movwf	??_LCDInit& (0+255),b
  1563  0016D0  0E12               	movlw	18
  1564  0016D2                     u2497:
  1565  0016D2  2EE8               	decfsz	wreg,f,c
  1566  0016D4  D7FE               	goto	u2497
  1567  0016D6  2F66               	decfsz	??_LCDInit& (0+255),f,b
  1568  0016D8  D7FC               	goto	u2497
  1569  0016DA  D000               	nop2	
  1570                           
  1571                           ;LCD.c: 43: LCDInitCommand(0b00000110);
  1572  0016DC  0E06               	movlw	6
  1573  0016DE  EC21  F00D         	call	_LCDInitCommand
  1574                           
  1575                           ;LCD.c: 44: _delay((unsigned long)((40)*(40000000L/4000000.0)));
  1576  0016E2  0E85               	movlw	133
  1577  0016E4                     u2507:
  1578  0016E4  2EE8               	decfsz	wreg,f,c
  1579  0016E6  D7FE               	goto	u2507
  1580  0016E8  F000               	nop	
  1581  0016EA  0012               	return		;funcret
  1582  0016EC                     __end_of_LCDInit:
  1583                           	opt stack 0
  1584                           tblptru	equ	0xFF8
  1585                           tblptrh	equ	0xFF7
  1586                           tblptrl	equ	0xFF6
  1587                           tablat	equ	0xFF5
  1588                           prodh	equ	0xFF4
  1589                           prodl	equ	0xFF3
  1590                           postinc0	equ	0xFEE
  1591                           wreg	equ	0xFE8
  1592                           indf2	equ	0xFDF
  1593                           postinc2	equ	0xFDE
  1594                           postdec2	equ	0xFDD
  1595                           fsr2h	equ	0xFDA
  1596                           fsr2l	equ	0xFD9
  1597                           status	equ	0xFD8
  1598                           
  1599 ;; *************** function _LCDInitPort *****************
  1600 ;; Defined at:
  1601 ;;		line 287 in file "LCD.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;		None               void
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    7
  1622 ;; This function calls:
  1623 ;;		_WriteRegister
  1624 ;; This function is called by:
  1625 ;;		_LCDInit
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text6
  1630  00188C                     __ptext6:
  1631                           	opt stack 0
  1632  00188C                     _LCDInitPort:
  1633                           	opt stack 22
  1634                           
  1635                           ;LCD.c: 288: TRISAbits.TRISA2 = 0;
  1636                           
  1637                           ;incstack = 0
  1638  00188C  9492               	bcf	3986,2,c	;volatile
  1639                           
  1640                           ;LCD.c: 289: LATAbits.LATA2 = 1;
  1641  00188E  8489               	bsf	3977,2,c	;volatile
  1642                           
  1643                           ;LCD.c: 304: TRISCbits.TRISC3 = 0;
  1644  001890  9694               	bcf	3988,3,c	;volatile
  1645                           
  1646                           ;LCD.c: 305: TRISCbits.TRISC5 = 0;
  1647  001892  9A94               	bcf	3988,5,c	;volatile
  1648                           
  1649                           ;LCD.c: 307: SSPCON1 = 0x21;
  1650  001894  0E21               	movlw	33
  1651  001896  6EC6               	movwf	4038,c	;volatile
  1652                           
  1653                           ;LCD.c: 308: SSPSTATbits.CKE = 1;
  1654  001898  8CC7               	bsf	4039,6,c	;volatile
  1655                           
  1656                           ;LCD.c: 309: SSPIF = 0;
  1657  00189A  969E               	bcf	3998,3,c	;volatile
  1658                           
  1659                           ;LCD.c: 310: WriteRegister(0, 0);
  1660  00189C  0E00               	movlw	0
  1661  00189E  0100               	movlb	0	; () banked
  1662  0018A0  6F60               	movwf	WriteRegister@b& (0+255),b
  1663  0018A2  0E00               	movlw	0
  1664  0018A4  ECA8  F00C         	call	_WriteRegister
  1665                           
  1666                           ;LCD.c: 311: WriteRegister(1, 0);
  1667  0018A8  0E00               	movlw	0
  1668  0018AA  0100               	movlb	0	; () banked
  1669  0018AC  6F60               	movwf	WriteRegister@b& (0+255),b
  1670  0018AE  0E01               	movlw	1
  1671  0018B0  ECA8  F00C         	call	_WriteRegister
  1672                           
  1673                           ;LCD.c: 312: WriteRegister(0x12, 0);
  1674  0018B4  0E00               	movlw	0
  1675  0018B6  0100               	movlb	0	; () banked
  1676  0018B8  6F60               	movwf	WriteRegister@b& (0+255),b
  1677  0018BA  0E12               	movlw	18
  1678  0018BC  ECA8  F00C         	call	_WriteRegister
  1679  0018C0  0012               	return		;funcret
  1680  0018C2                     __end_of_LCDInitPort:
  1681                           	opt stack 0
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           prodh	equ	0xFF4
  1687                           prodl	equ	0xFF3
  1688                           postinc0	equ	0xFEE
  1689                           wreg	equ	0xFE8
  1690                           indf2	equ	0xFDF
  1691                           postinc2	equ	0xFDE
  1692                           postdec2	equ	0xFDD
  1693                           fsr2h	equ	0xFDA
  1694                           fsr2l	equ	0xFD9
  1695                           status	equ	0xFD8
  1696                           
  1697 ;; *************** function _LCDInitCommand *****************
  1698 ;; Defined at:
  1699 ;;		line 193 in file "LCD.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  command         1    wreg     unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  command         1    5[BANK0 ] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;		None               void
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        1 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    8
  1720 ;; This function calls:
  1721 ;;		_LCDWriteByte
  1722 ;; This function is called by:
  1723 ;;		_LCDInit
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text7
  1728  001A42                     __ptext7:
  1729                           	opt stack 0
  1730  001A42                     _LCDInitCommand:
  1731                           	opt stack 21
  1732                           
  1733                           ;incstack = 0
  1734                           ;LCDInitCommand@command stored from wreg
  1735  001A42  0100               	movlb	0	; () banked
  1736  001A44  6F65               	movwf	LCDInitCommand@command& (0+255),b
  1737                           
  1738                           ;LCD.c: 194: LCDWriteByte(command, 0);
  1739  001A46  0E00               	movlw	0
  1740  001A48  0100               	movlb	0	; () banked
  1741  001A4A  6F62               	movwf	LCDWriteByte@rs& (0+255),b
  1742  001A4C  0100               	movlb	0	; () banked
  1743  001A4E  5165               	movf	LCDInitCommand@command& (0+255),w,b
  1744  001A50  EC9F  F00B         	call	_LCDWriteByte
  1745  001A54  0012               	return		;funcret
  1746  001A56                     __end_of_LCDInitCommand:
  1747                           	opt stack 0
  1748                           tblptru	equ	0xFF8
  1749                           tblptrh	equ	0xFF7
  1750                           tblptrl	equ	0xFF6
  1751                           tablat	equ	0xFF5
  1752                           prodh	equ	0xFF4
  1753                           prodl	equ	0xFF3
  1754                           postinc0	equ	0xFEE
  1755                           wreg	equ	0xFE8
  1756                           indf2	equ	0xFDF
  1757                           postinc2	equ	0xFDE
  1758                           postdec2	equ	0xFDD
  1759                           fsr2h	equ	0xFDA
  1760                           fsr2l	equ	0xFD9
  1761                           status	equ	0xFD8
  1762                           
  1763 ;; *************** function _LCDClearLine *****************
  1764 ;; Defined at:
  1765 ;;		line 80 in file "LCD.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  line            1    wreg     unsigned char 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  line            1   14[BANK0 ] unsigned char 
  1770 ;;  c               1   13[BANK0 ] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;		None               void
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;Total ram usage:        2 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:   10
  1787 ;; This function calls:
  1788 ;;		_LCDSetPos
  1789 ;;		_LCDWriteData
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;;		_LCDScroll
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text8
  1797  001810                     __ptext8:
  1798                           	opt stack 0
  1799  001810                     _LCDClearLine:
  1800                           	opt stack 20
  1801                           
  1802                           ;incstack = 0
  1803                           ;LCDClearLine@line stored from wreg
  1804  001810  0100               	movlb	0	; () banked
  1805  001812  6F6E               	movwf	LCDClearLine@line& (0+255),b
  1806                           
  1807                           ;LCD.c: 81: char c = 0;
  1808  001814  0E00               	movlw	0
  1809  001816  0100               	movlb	0	; () banked
  1810  001818  6F6D               	movwf	LCDClearLine@c& (0+255),b
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;LCD.c: 82: if (line >= 2) {
  1814  00181A  0E01               	movlw	1
  1815  00181C  0100               	movlb	0	; () banked
  1816  00181E  656E               	cpfsgt	LCDClearLine@line& (0+255),b
  1817  001820  D001               	goto	l2488
  1818  001822  0012               	return	
  1819  001824                     l2488:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;LCD.c: 84: }
  1823                           ;LCD.c: 85: LCDSetPos(line, 0);
  1824  001824  C06E  F066         	movff	LCDClearLine@line,LCDSetPos@row
  1825  001828  0100               	movlb	0	; () banked
  1826  00182A  6B67               	clrf	(LCDSetPos@row+1)& (0+255),b
  1827  00182C  0E00               	movlw	0
  1828  00182E  0100               	movlb	0	; () banked
  1829  001830  6F69               	movwf	(LCDSetPos@col+1)& (0+255),b
  1830  001832  0E00               	movlw	0
  1831  001834  6F68               	movwf	LCDSetPos@col& (0+255),b
  1832  001836  ECAF  F00A         	call	_LCDSetPos	;wreg free
  1833                           
  1834                           ;LCD.c: 86: while (c < 16) {
  1835  00183A  D005               	goto	l2494
  1836  00183C                     l2490:
  1837                           
  1838                           ;LCD.c: 87: LCDWriteData(' ');
  1839  00183C  0E20               	movlw	32
  1840  00183E  ECEF  F00C         	call	_LCDWriteData
  1841                           
  1842                           ;LCD.c: 88: ++c;
  1843  001842  0100               	movlb	0	; () banked
  1844  001844  2B6D               	incf	LCDClearLine@c& (0+255),f,b
  1845  001846                     l2494:
  1846  001846  0E0F               	movlw	15
  1847  001848  0100               	movlb	0	; () banked
  1848  00184A  656D               	cpfsgt	LCDClearLine@c& (0+255),b
  1849  00184C  D7F7               	goto	l2490
  1850  00184E  0012               	return	
  1851  001850                     __end_of_LCDClearLine:
  1852                           	opt stack 0
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           prodh	equ	0xFF4
  1858                           prodl	equ	0xFF3
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           indf2	equ	0xFDF
  1862                           postinc2	equ	0xFDE
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _LCDWriteData *****************
  1869 ;; Defined at:
  1870 ;;		line 197 in file "LCD.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  c               1    wreg     unsigned char 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  c               1    5[BANK0 ] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;		None               void
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;Total ram usage:        1 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    8
  1891 ;; This function calls:
  1892 ;;		_LCDWriteByte
  1893 ;;		_shortDelay
  1894 ;;		_wait
  1895 ;; This function is called by:
  1896 ;;		_LCDWriteLine
  1897 ;;		_LCDClearLine
  1898 ;;		_LCDPutStr
  1899 ;;		_LCDPutChar
  1900 ;;		_LCDLoadCustomChar
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text9
  1905  0019DE                     __ptext9:
  1906                           	opt stack 0
  1907  0019DE                     _LCDWriteData:
  1908                           	opt stack 21
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;incstack = 0
  1912                           ;LCDWriteData@c stored from wreg
  1913  0019DE  0100               	movlb	0	; () banked
  1914  0019E0  6F65               	movwf	LCDWriteData@c& (0+255),b
  1915                           
  1916                           ;LCD.c: 198: wait();
  1917  0019E2  EC5C  F00D         	call	_wait	;wreg free
  1918                           
  1919                           ;LCD.c: 199: LCDWriteByte(c, 1);
  1920  0019E6  0E01               	movlw	1
  1921  0019E8  0100               	movlb	0	; () banked
  1922  0019EA  6F62               	movwf	LCDWriteByte@rs& (0+255),b
  1923  0019EC  0100               	movlb	0	; () banked
  1924  0019EE  5165               	movf	LCDWriteData@c& (0+255),w,b
  1925  0019F0  EC9F  F00B         	call	_LCDWriteByte
  1926                           
  1927                           ;LCD.c: 200: shortDelay();
  1928  0019F4  EC52  F00D         	call	_shortDelay	;wreg free
  1929  0019F8  0012               	return		;funcret
  1930  0019FA                     __end_of_LCDWriteData:
  1931                           	opt stack 0
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           prodh	equ	0xFF4
  1937                           prodl	equ	0xFF3
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           indf2	equ	0xFDF
  1941                           postinc2	equ	0xFDE
  1942                           postdec2	equ	0xFDD
  1943                           fsr2h	equ	0xFDA
  1944                           fsr2l	equ	0xFD9
  1945                           status	equ	0xFD8
  1946                           
  1947 ;; *************** function _LCDSetPos *****************
  1948 ;; Defined at:
  1949 ;;		line 96 in file "LCD.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  row             2    6[BANK0 ] int 
  1952 ;;  col             2    8[BANK0 ] int 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  pos             2   11[BANK0 ] int 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;		None               void
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;Total ram usage:        7 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    9
  1971 ;; This function calls:
  1972 ;;		_LCDCommand
  1973 ;;		_calculateBase
  1974 ;; This function is called by:
  1975 ;;		_LCDWriteLine
  1976 ;;		_LCDClearLine
  1977 ;;		_LCDReadLine
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text10
  1982  00155E                     __ptext10:
  1983                           	opt stack 0
  1984  00155E                     _LCDSetPos:
  1985                           	opt stack 20
  1986                           
  1987                           ;LCD.c: 97: int pos;
  1988                           ;LCD.c: 98: if (row < 0 || col < 0 || row >= 2 || col >= 16) {
  1989                           
  1990                           ;incstack = 0
  1991  00155E  0100               	movlb	0	; () banked
  1992  001560  BF67               	btfsc	(LCDSetPos@row+1)& (0+255),7,b
  1993  001562  0012               	return	
  1994                           
  1995                           ; BSR set to: 0
  1996  001564  0100               	movlb	0	; () banked
  1997  001566  BF69               	btfsc	(LCDSetPos@col+1)& (0+255),7,b
  1998  001568  0012               	return	
  1999                           
  2000                           ; BSR set to: 0
  2001  00156A  0100               	movlb	0	; () banked
  2002  00156C  BF67               	btfsc	(LCDSetPos@row+1)& (0+255),7,b
  2003  00156E  D008               	goto	l2342
  2004  001570  0100               	movlb	0	; () banked
  2005  001572  5167               	movf	(LCDSetPos@row+1)& (0+255),w,b
  2006  001574  E126               	bnz	l210
  2007  001576  0E02               	movlw	2
  2008  001578  0100               	movlb	0	; () banked
  2009  00157A  5D66               	subwf	LCDSetPos@row& (0+255),w,b
  2010  00157C  B0D8               	btfsc	status,0,c
  2011  00157E  0012               	return	
  2012  001580                     l2342:
  2013                           
  2014                           ; BSR set to: 0
  2015  001580  0100               	movlb	0	; () banked
  2016  001582  BF69               	btfsc	(LCDSetPos@col+1)& (0+255),7,b
  2017  001584  D008               	goto	l2344
  2018  001586  0100               	movlb	0	; () banked
  2019  001588  5169               	movf	(LCDSetPos@col+1)& (0+255),w,b
  2020  00158A  E11B               	bnz	l210
  2021  00158C  0E10               	movlw	16
  2022  00158E  0100               	movlb	0	; () banked
  2023  001590  5D68               	subwf	LCDSetPos@col& (0+255),w,b
  2024  001592  B0D8               	btfsc	status,0,c
  2025  001594  0012               	return	
  2026  001596                     l2344:
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;LCD.c: 100: }
  2030                           ;LCD.c: 101: pos = calculateBase(row) + col;
  2031  001596  0100               	movlb	0	; () banked
  2032  001598  5166               	movf	LCDSetPos@row& (0+255),w,b
  2033  00159A  EC93  F00C         	call	_calculateBase
  2034  00159E  0100               	movlb	0	; () banked
  2035  0015A0  6F6A               	movwf	??_LCDSetPos& (0+255),b
  2036  0015A2  0100               	movlb	0	; () banked
  2037  0015A4  516A               	movf	??_LCDSetPos& (0+255),w,b
  2038  0015A6  0100               	movlb	0	; () banked
  2039  0015A8  2568               	addwf	LCDSetPos@col& (0+255),w,b
  2040  0015AA  0100               	movlb	0	; () banked
  2041  0015AC  6F6B               	movwf	LCDSetPos@pos& (0+255),b
  2042  0015AE  0E00               	movlw	0
  2043  0015B0  0100               	movlb	0	; () banked
  2044  0015B2  2169               	addwfc	(LCDSetPos@col+1)& (0+255),w,b
  2045  0015B4  0100               	movlb	0	; () banked
  2046  0015B6  6F6C               	movwf	(LCDSetPos@pos+1)& (0+255),b
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;LCD.c: 102: LCDCommand(128 + pos);
  2050  0015B8  0100               	movlb	0	; () banked
  2051  0015BA  516B               	movf	LCDSetPos@pos& (0+255),w,b
  2052  0015BC  0F80               	addlw	128
  2053  0015BE  ECFD  F00C         	call	_LCDCommand
  2054  0015C2                     l210:
  2055  0015C2  0012               	return		;funcret
  2056  0015C4                     __end_of_LCDSetPos:
  2057                           	opt stack 0
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           prodh	equ	0xFF4
  2063                           prodl	equ	0xFF3
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           indf2	equ	0xFDF
  2067                           postinc2	equ	0xFDE
  2068                           postdec2	equ	0xFDD
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8
  2072                           
  2073 ;; *************** function _calculateBase *****************
  2074 ;; Defined at:
  2075 ;;		line 225 in file "LCD.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  line            1    wreg     unsigned char 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  line            1    1[BANK0 ] unsigned char 
  2080 ;;  base            1    0[BANK0 ] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      unsigned char 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, prodl, prodh
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;Total ram usage:        2 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    6
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_LCDSetPos
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text11
  2105  001926                     __ptext11:
  2106                           	opt stack 0
  2107  001926                     _calculateBase:
  2108                           	opt stack 22
  2109                           
  2110                           ;incstack = 0
  2111                           ;calculateBase@line stored from wreg
  2112  001926  0100               	movlb	0	; () banked
  2113  001928  6F61               	movwf	calculateBase@line& (0+255),b
  2114                           
  2115                           ;LCD.c: 226: char base;
  2116                           ;LCD.c: 227: if (line % 2 == 0) {
  2117  00192A  0100               	movlb	0	; () banked
  2118  00192C  B161               	btfsc	calculateBase@line& (0+255),0,b
  2119  00192E  D006               	goto	l2306
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;LCD.c: 228: base = line * 10;
  2123  001930  0100               	movlb	0	; () banked
  2124  001932  5161               	movf	calculateBase@line& (0+255),w,b
  2125  001934  0D0A               	mullw	10
  2126  001936  CFF3 F060          	movff	prodl,calculateBase@base
  2127                           
  2128                           ;LCD.c: 229: } else {
  2129  00193A  D007               	goto	l2308
  2130  00193C                     l2306:
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;LCD.c: 230: base = 54 + line * 10;
  2134  00193C  0100               	movlb	0	; () banked
  2135  00193E  5161               	movf	calculateBase@line& (0+255),w,b
  2136  001940  0D0A               	mullw	10
  2137  001942  50F3               	movf	prodl,w,c
  2138  001944  0F36               	addlw	54
  2139  001946  0100               	movlb	0	; () banked
  2140  001948  6F60               	movwf	calculateBase@base& (0+255),b
  2141  00194A                     l2308:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;LCD.c: 231: }
  2145                           ;LCD.c: 232: return base;
  2146  00194A  0100               	movlb	0	; () banked
  2147  00194C  5160               	movf	calculateBase@base& (0+255),w,b
  2148  00194E  0012               	return	
  2149  001950                     __end_of_calculateBase:
  2150                           	opt stack 0
  2151                           tblptru	equ	0xFF8
  2152                           tblptrh	equ	0xFF7
  2153                           tblptrl	equ	0xFF6
  2154                           tablat	equ	0xFF5
  2155                           prodh	equ	0xFF4
  2156                           prodl	equ	0xFF3
  2157                           postinc0	equ	0xFEE
  2158                           wreg	equ	0xFE8
  2159                           indf2	equ	0xFDF
  2160                           postinc2	equ	0xFDE
  2161                           postdec2	equ	0xFDD
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _LCDClear *****************
  2167 ;; Defined at:
  2168 ;;		line 47 in file "LCD.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;		None               void
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;Total ram usage:        0 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    9
  2189 ;; This function calls:
  2190 ;;		_LCDCommand
  2191 ;;		_longDelay
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text12
  2198  001A8C                     __ptext12:
  2199                           	opt stack 0
  2200  001A8C                     _LCDClear:
  2201                           	opt stack 21
  2202                           
  2203                           ;LCD.c: 48: LCDCommand(0b00000001);
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;incstack = 0
  2207  001A8C  0E01               	movlw	1
  2208  001A8E  ECFD  F00C         	call	_LCDCommand
  2209                           
  2210                           ;LCD.c: 49: longDelay();
  2211  001A92  EC35  F00D         	call	_longDelay	;wreg free
  2212  001A96  0012               	return		;funcret
  2213  001A98                     __end_of_LCDClear:
  2214                           	opt stack 0
  2215                           tblptru	equ	0xFF8
  2216                           tblptrh	equ	0xFF7
  2217                           tblptrl	equ	0xFF6
  2218                           tablat	equ	0xFF5
  2219                           prodh	equ	0xFF4
  2220                           prodl	equ	0xFF3
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           indf2	equ	0xFDF
  2224                           postinc2	equ	0xFDE
  2225                           postdec2	equ	0xFDD
  2226                           fsr2h	equ	0xFDA
  2227                           fsr2l	equ	0xFD9
  2228                           status	equ	0xFD8
  2229                           
  2230 ;; *************** function _longDelay *****************
  2231 ;; Defined at:
  2232 ;;		line 241 in file "LCD.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;		None
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;		None
  2237 ;; Return value:  Size  Location     Type
  2238 ;;		None               void
  2239 ;; Registers used:
  2240 ;;		wreg
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;Total ram usage:        1 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:    6
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_LCDClear
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text13
  2261  001A6A                     __ptext13:
  2262                           	opt stack 0
  2263  001A6A                     _longDelay:
  2264                           	opt stack 23
  2265                           
  2266                           ;LCD.c: 243: _delay((unsigned long)((1660)*(40000000L/4000000.0)));
  2267                           
  2268                           ;incstack = 0
  2269  001A6A  0E16               	movlw	22
  2270  001A6C  0100               	movlb	0	; () banked
  2271  001A6E  6F60               	movwf	??_longDelay& (0+255),b
  2272  001A70  0E8E               	movlw	142
  2273  001A72                     u2517:
  2274  001A72  2EE8               	decfsz	wreg,f,c
  2275  001A74  D7FE               	goto	u2517
  2276  001A76  2F60               	decfsz	??_longDelay& (0+255),f,b
  2277  001A78  D7FC               	goto	u2517
  2278  001A7A  0012               	return		;funcret
  2279  001A7C                     __end_of_longDelay:
  2280                           	opt stack 0
  2281                           tblptru	equ	0xFF8
  2282                           tblptrh	equ	0xFF7
  2283                           tblptrl	equ	0xFF6
  2284                           tablat	equ	0xFF5
  2285                           prodh	equ	0xFF4
  2286                           prodl	equ	0xFF3
  2287                           postinc0	equ	0xFEE
  2288                           wreg	equ	0xFE8
  2289                           indf2	equ	0xFDF
  2290                           postinc2	equ	0xFDE
  2291                           postdec2	equ	0xFDD
  2292                           fsr2h	equ	0xFDA
  2293                           fsr2l	equ	0xFD9
  2294                           status	equ	0xFD8
  2295                           
  2296 ;; *************** function _LCDCommand *****************
  2297 ;; Defined at:
  2298 ;;		line 187 in file "LCD.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  command         1    wreg     unsigned char 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  command         1    5[BANK0 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;		None               void
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;Total ram usage:        1 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    8
  2319 ;; This function calls:
  2320 ;;		_LCDWriteByte
  2321 ;;		_shortDelay
  2322 ;;		_wait
  2323 ;; This function is called by:
  2324 ;;		_LCDClear
  2325 ;;		_LCDSetPos
  2326 ;;		_LCDLoadCustomChar
  2327 ;;		_LCDScroll
  2328 ;;		_LCDDisplay
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text14
  2333  0019FA                     __ptext14:
  2334                           	opt stack 0
  2335  0019FA                     _LCDCommand:
  2336                           	opt stack 20
  2337                           
  2338                           ;incstack = 0
  2339                           ;LCDCommand@command stored from wreg
  2340  0019FA  0100               	movlb	0	; () banked
  2341  0019FC  6F65               	movwf	LCDCommand@command& (0+255),b
  2342                           
  2343                           ;LCD.c: 188: wait();
  2344  0019FE  EC5C  F00D         	call	_wait	;wreg free
  2345                           
  2346                           ;LCD.c: 189: LCDWriteByte(command, 0);
  2347  001A02  0E00               	movlw	0
  2348  001A04  0100               	movlb	0	; () banked
  2349  001A06  6F62               	movwf	LCDWriteByte@rs& (0+255),b
  2350  001A08  0100               	movlb	0	; () banked
  2351  001A0A  5165               	movf	LCDCommand@command& (0+255),w,b
  2352  001A0C  EC9F  F00B         	call	_LCDWriteByte
  2353                           
  2354                           ;LCD.c: 190: shortDelay();
  2355  001A10  EC52  F00D         	call	_shortDelay	;wreg free
  2356  001A14  0012               	return		;funcret
  2357  001A16                     __end_of_LCDCommand:
  2358                           	opt stack 0
  2359                           tblptru	equ	0xFF8
  2360                           tblptrh	equ	0xFF7
  2361                           tblptrl	equ	0xFF6
  2362                           tablat	equ	0xFF5
  2363                           prodh	equ	0xFF4
  2364                           prodl	equ	0xFF3
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           indf2	equ	0xFDF
  2368                           postinc2	equ	0xFDE
  2369                           postdec2	equ	0xFDD
  2370                           fsr2h	equ	0xFDA
  2371                           fsr2l	equ	0xFD9
  2372                           status	equ	0xFD8
  2373                           
  2374 ;; *************** function _wait *****************
  2375 ;; Defined at:
  2376 ;;		line 235 in file "LCD.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;		None
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;		None
  2381 ;; Return value:  Size  Location     Type
  2382 ;;		None               void
  2383 ;; Registers used:
  2384 ;;		None
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;Total ram usage:        0 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    6
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_LCDCommand
  2401 ;;		_LCDWriteData
  2402 ;;		_LCDReadData
  2403 ;;		_LCDGetAC
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text15
  2408  001AB8                     __ptext15:
  2409                           	opt stack 0
  2410  001AB8                     _wait:
  2411                           	opt stack 22
  2412                           
  2413                           ;incstack = 0
  2414  001AB8  0012               	return		;funcret
  2415  001ABA                     __end_of_wait:
  2416                           	opt stack 0
  2417                           tblptru	equ	0xFF8
  2418                           tblptrh	equ	0xFF7
  2419                           tblptrl	equ	0xFF6
  2420                           tablat	equ	0xFF5
  2421                           prodh	equ	0xFF4
  2422                           prodl	equ	0xFF3
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           indf2	equ	0xFDF
  2426                           postinc2	equ	0xFDE
  2427                           postdec2	equ	0xFDD
  2428                           fsr2h	equ	0xFDA
  2429                           fsr2l	equ	0xFD9
  2430                           status	equ	0xFD8
  2431                           
  2432 ;; *************** function _shortDelay *****************
  2433 ;; Defined at:
  2434 ;;		line 247 in file "LCD.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;		None               void
  2441 ;; Registers used:
  2442 ;;		wreg
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    6
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_LCDCommand
  2459 ;;		_LCDWriteData
  2460 ;;		_LCDReadData
  2461 ;;		_LCDGetAC
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text16
  2466  001AA4                     __ptext16:
  2467                           	opt stack 0
  2468  001AA4                     _shortDelay:
  2469                           	opt stack 22
  2470                           
  2471                           ;LCD.c: 249: _delay((unsigned long)((40)*(40000000L/4000000.0)));
  2472                           
  2473                           ;incstack = 0
  2474  001AA4  0E85               	movlw	133
  2475  001AA6                     u2527:
  2476  001AA6  2EE8               	decfsz	wreg,f,c
  2477  001AA8  D7FE               	goto	u2527
  2478  001AAA  F000               	nop	
  2479  001AAC  0012               	return		;funcret
  2480  001AAE                     __end_of_shortDelay:
  2481                           	opt stack 0
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           prodh	equ	0xFF4
  2487                           prodl	equ	0xFF3
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           indf2	equ	0xFDF
  2491                           postinc2	equ	0xFDE
  2492                           postdec2	equ	0xFDD
  2493                           fsr2h	equ	0xFDA
  2494                           fsr2l	equ	0xFD9
  2495                           status	equ	0xFD8
  2496                           
  2497 ;; *************** function _LCDWriteByte *****************
  2498 ;; Defined at:
  2499 ;;		line 260 in file "LCD.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  c               1    wreg     unsigned char 
  2502 ;;  rs              1    2[BANK0 ] unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  c               1    3[BANK0 ] unsigned char 
  2505 ;;  comFlags        1    4[BANK0 ] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2515 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;Total ram usage:        3 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    7
  2522 ;; This function calls:
  2523 ;;		_WriteRegister
  2524 ;; This function is called by:
  2525 ;;		_LCDCommand
  2526 ;;		_LCDInitCommand
  2527 ;;		_LCDWriteData
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text17
  2532  00173E                     __ptext17:
  2533                           	opt stack 0
  2534  00173E                     _LCDWriteByte:
  2535                           	opt stack 21
  2536                           
  2537                           ;incstack = 0
  2538                           ;LCDWriteByte@c stored from wreg
  2539  00173E  0100               	movlb	0	; () banked
  2540  001740  6F63               	movwf	LCDWriteByte@c& (0+255),b
  2541                           
  2542                           ;LCD.c: 261: unsigned char comFlags = 0;
  2543  001742  0E00               	movlw	0
  2544  001744  0100               	movlb	0	; () banked
  2545  001746  6F64               	movwf	LCDWriteByte@comFlags& (0+255),b
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;LCD.c: 262: if (rs) {
  2549  001748  0100               	movlb	0	; () banked
  2550  00174A  5162               	movf	LCDWriteByte@rs& (0+255),w,b
  2551  00174C  0100               	movlb	0	; () banked
  2552  00174E  B4D8               	btfsc	status,2,c
  2553  001750  D003               	goto	l2286
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;LCD.c: 263: comFlags = 0b10000000;
  2557  001752  0E80               	movlw	128
  2558  001754  0100               	movlb	0	; () banked
  2559  001756  6F64               	movwf	LCDWriteByte@comFlags& (0+255),b
  2560  001758                     l2286:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;LCD.c: 264: }
  2564                           ;LCD.c: 265: WriteRegister(0x12, comFlags);
  2565  001758  C064  F060         	movff	LCDWriteByte@comFlags,WriteRegister@b
  2566  00175C  0E12               	movlw	18
  2567  00175E  ECA8  F00C         	call	_WriteRegister
  2568                           
  2569                           ;LCD.c: 266: WriteRegister(0x13, c);
  2570  001762  C063  F060         	movff	LCDWriteByte@c,WriteRegister@b
  2571  001766  0E13               	movlw	19
  2572  001768  ECA8  F00C         	call	_WriteRegister
  2573                           
  2574                           ;LCD.c: 267: WriteRegister(0x12, comFlags | 0b01000000);
  2575  00176C  0100               	movlb	0	; () banked
  2576  00176E  5164               	movf	LCDWriteByte@comFlags& (0+255),w,b
  2577  001770  0940               	iorlw	64
  2578  001772  0100               	movlb	0	; () banked
  2579  001774  6F60               	movwf	WriteRegister@b& (0+255),b
  2580  001776  0E12               	movlw	18
  2581  001778  ECA8  F00C         	call	_WriteRegister
  2582                           
  2583                           ;LCD.c: 268: WriteRegister(0x12, comFlags);
  2584  00177C  C064  F060         	movff	LCDWriteByte@comFlags,WriteRegister@b
  2585  001780  0E12               	movlw	18
  2586  001782  ECA8  F00C         	call	_WriteRegister
  2587  001786  0012               	return		;funcret
  2588  001788                     __end_of_LCDWriteByte:
  2589                           	opt stack 0
  2590                           tblptru	equ	0xFF8
  2591                           tblptrh	equ	0xFF7
  2592                           tblptrl	equ	0xFF6
  2593                           tablat	equ	0xFF5
  2594                           prodh	equ	0xFF4
  2595                           prodl	equ	0xFF3
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           indf2	equ	0xFDF
  2599                           postinc2	equ	0xFDE
  2600                           postdec2	equ	0xFDD
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function _WriteRegister *****************
  2606 ;; Defined at:
  2607 ;;		line 320 in file "LCD.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  reg             1    wreg     unsigned char 
  2610 ;;  b               1    0[BANK0 ] unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  reg             1    1[BANK0 ] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;		None               void
  2615 ;; Registers used:
  2616 ;;		wreg, status,2
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2622 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;Total ram usage:        2 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    6
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_LCDWriteByte
  2633 ;;		_LCDInitPort
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text18
  2638  001950                     __ptext18:
  2639                           	opt stack 0
  2640  001950                     _WriteRegister:
  2641                           	opt stack 21
  2642                           
  2643                           ;incstack = 0
  2644                           ;WriteRegister@reg stored from wreg
  2645  001950  0100               	movlb	0	; () banked
  2646  001952  6F61               	movwf	WriteRegister@reg& (0+255),b
  2647                           
  2648                           ;LCD.c: 321: LATAbits.LATA2 = 0;
  2649  001954  9489               	bcf	3977,2,c	;volatile
  2650                           
  2651                           ;LCD.c: 322: SSPBUF = 0x40;
  2652  001956  0E40               	movlw	64
  2653  001958  6EC9               	movwf	4041,c	;volatile
  2654  00195A                     l291:
  2655  00195A  A69E               	btfss	3998,3,c	;volatile
  2656  00195C  D7FE               	goto	l291
  2657                           
  2658                           ;LCD.c: 324: SSPIF = 0;
  2659  00195E  969E               	bcf	3998,3,c	;volatile
  2660                           
  2661                           ;LCD.c: 325: SSPBUF = reg;
  2662  001960  C061  FFC9         	movff	WriteRegister@reg,4041	;volatile
  2663  001964                     l294:
  2664  001964  A69E               	btfss	3998,3,c	;volatile
  2665  001966  D7FE               	goto	l294
  2666                           
  2667                           ;LCD.c: 327: SSPIF = 0;
  2668  001968  969E               	bcf	3998,3,c	;volatile
  2669                           
  2670                           ;LCD.c: 328: SSPBUF = b;
  2671  00196A  C060  FFC9         	movff	WriteRegister@b,4041	;volatile
  2672  00196E                     l297:
  2673  00196E  A69E               	btfss	3998,3,c	;volatile
  2674  001970  D7FE               	goto	l297
  2675                           
  2676                           ;LCD.c: 330: SSPIF = 0;
  2677  001972  969E               	bcf	3998,3,c	;volatile
  2678                           
  2679                           ;LCD.c: 331: LATAbits.LATA2 = 1;
  2680  001974  8489               	bsf	3977,2,c	;volatile
  2681  001976  0012               	return		;funcret
  2682  001978                     __end_of_WriteRegister:
  2683                           	opt stack 0
  2684                           tblptru	equ	0xFF8
  2685                           tblptrh	equ	0xFF7
  2686                           tblptrl	equ	0xFF6
  2687                           tablat	equ	0xFF5
  2688                           prodh	equ	0xFF4
  2689                           prodl	equ	0xFF3
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           indf2	equ	0xFDF
  2693                           postinc2	equ	0xFDE
  2694                           postdec2	equ	0xFDD
  2695                           fsr2h	equ	0xFDA
  2696                           fsr2l	equ	0xFD9
  2697                           status	equ	0xFD8
  2698                           
  2699 ;; *************** function _InitPins *****************
  2700 ;; Defined at:
  2701 ;;		line 119 in file "I2CMaster.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;		None               void
  2708 ;; Registers used:
  2709 ;;		wreg, status,2
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;Total ram usage:        0 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    6
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_main
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text19
  2730  001A56                     __ptext19:
  2731                           	opt stack 0
  2732  001A56                     _InitPins:
  2733                           	opt stack 24
  2734                           
  2735                           ;I2CMaster.c: 120: LATD = 0;
  2736                           
  2737                           ;incstack = 0
  2738  001A56  0E00               	movlw	0
  2739  001A58  6E8C               	movwf	3980,c	;volatile
  2740                           
  2741                           ;I2CMaster.c: 121: TRISD = 0;
  2742  001A5A  0E00               	movlw	0
  2743  001A5C  6E95               	movwf	3989,c	;volatile
  2744                           
  2745                           ;I2CMaster.c: 125: TRISB = 0b00000001;
  2746  001A5E  0E01               	movlw	1
  2747  001A60  6E93               	movwf	3987,c	;volatile
  2748                           
  2749                           ;I2CMaster.c: 126: INTCON2bits.RBPU = 0;
  2750  001A62  9EF1               	bcf	intcon2,7,c	;volatile
  2751                           
  2752                           ;I2CMaster.c: 129: TRISD = 0b01100000;
  2753  001A64  0E60               	movlw	96
  2754  001A66  6E95               	movwf	3989,c	;volatile
  2755  001A68  0012               	return		;funcret
  2756  001A6A                     __end_of_InitPins:
  2757                           	opt stack 0
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon2	equ	0xFF1
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           indf2	equ	0xFDF
  2768                           postinc2	equ	0xFDE
  2769                           postdec2	equ	0xFDD
  2770                           fsr2h	equ	0xFDA
  2771                           fsr2l	equ	0xFD9
  2772                           status	equ	0xFD8
  2773                           
  2774 ;; *************** function _ConfigPeriph *****************
  2775 ;; Defined at:
  2776 ;;		line 148 in file "I2CMaster.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;		None               void
  2783 ;; Registers used:
  2784 ;;		wreg, status,2
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    6
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_main
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text20
  2805  001A7C                     __ptext20:
  2806                           	opt stack 0
  2807  001A7C                     _ConfigPeriph:
  2808                           	opt stack 24
  2809                           
  2810                           ;I2CMaster.c: 152: SSP2ADD = 0x63;
  2811                           
  2812                           ;incstack = 0
  2813  001A7C  0E63               	movlw	99
  2814  001A7E  6E6E               	movwf	3950,c	;volatile
  2815                           
  2816                           ;I2CMaster.c: 153: SSP2CON1bits.SSPM = 0b1000;
  2817  001A80  506C               	movf	3948,w,c	;volatile
  2818  001A82  0BF0               	andlw	-16
  2819  001A84  0908               	iorlw	8
  2820  001A86  6E6C               	movwf	3948,c	;volatile
  2821                           
  2822                           ;I2CMaster.c: 154: SSP2CON1bits.SSPEN = 1;
  2823  001A88  8A6C               	bsf	3948,5,c	;volatile
  2824  001A8A  0012               	return		;funcret
  2825  001A8C                     __end_of_ConfigPeriph:
  2826                           	opt stack 0
  2827                           tblptru	equ	0xFF8
  2828                           tblptrh	equ	0xFF7
  2829                           tblptrl	equ	0xFF6
  2830                           tablat	equ	0xFF5
  2831                           prodh	equ	0xFF4
  2832                           prodl	equ	0xFF3
  2833                           intcon2	equ	0xFF1
  2834                           postinc0	equ	0xFEE
  2835                           wreg	equ	0xFE8
  2836                           indf2	equ	0xFDF
  2837                           postinc2	equ	0xFDE
  2838                           postdec2	equ	0xFDD
  2839                           fsr2h	equ	0xFDA
  2840                           fsr2l	equ	0xFD9
  2841                           status	equ	0xFD8
  2842                           
  2843 ;; *************** function _ConfigInterrupts *****************
  2844 ;; Defined at:
  2845 ;;		line 133 in file "I2CMaster.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;		None               void
  2852 ;; Registers used:
  2853 ;;		None
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    6
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text21
  2874  001A98                     __ptext21:
  2875                           	opt stack 0
  2876  001A98                     _ConfigInterrupts:
  2877                           	opt stack 24
  2878                           
  2879                           ;I2CMaster.c: 135: RCONbits.IPEN = 0;
  2880                           
  2881                           ;incstack = 0
  2882  001A98  9ED0               	bcf	4048,7,c	;volatile
  2883                           
  2884                           ;I2CMaster.c: 140: INTCON2bits.INTEDG0 = 0;
  2885  001A9A  9CF1               	bcf	intcon2,6,c	;volatile
  2886                           
  2887                           ;I2CMaster.c: 141: INTCONbits.INT0IE = 1;
  2888  001A9C  88F2               	bsf	intcon,4,c	;volatile
  2889                           
  2890                           ;I2CMaster.c: 143: INTCONbits.INT0IF = 0;
  2891  001A9E  92F2               	bcf	intcon,1,c	;volatile
  2892                           
  2893                           ;I2CMaster.c: 145: INTCONbits.GIE = 1;
  2894  001AA0  8EF2               	bsf	intcon,7,c	;volatile
  2895  001AA2  0012               	return		;funcret
  2896  001AA4                     __end_of_ConfigInterrupts:
  2897                           	opt stack 0
  2898                           tblptru	equ	0xFF8
  2899                           tblptrh	equ	0xFF7
  2900                           tblptrl	equ	0xFF6
  2901                           tablat	equ	0xFF5
  2902                           prodh	equ	0xFF4
  2903                           prodl	equ	0xFF3
  2904                           intcon	equ	0xFF2
  2905                           intcon2	equ	0xFF1
  2906                           postinc0	equ	0xFEE
  2907                           wreg	equ	0xFE8
  2908                           indf2	equ	0xFDF
  2909                           postinc2	equ	0xFDE
  2910                           postdec2	equ	0xFDD
  2911                           fsr2h	equ	0xFDA
  2912                           fsr2l	equ	0xFD9
  2913                           status	equ	0xFD8
  2914                           
  2915 ;; *************** function _HighIsr *****************
  2916 ;; Defined at:
  2917 ;;		line 158 in file "I2CMaster.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  rx              1   42[COMRAM] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;		None               void
  2924 ;; Registers used:
  2925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;Total ram usage:       15 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    5
  2938 ;; This function calls:
  2939 ;;		_I2CReadByte
  2940 ;;		_I2CWriteByte
  2941 ;;		i2_LCDClearLine
  2942 ;;		i2_LCDWriteLine
  2943 ;;		i2_sprintf
  2944 ;; This function is called by:
  2945 ;;		Interrupt level 2
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	intcode
  2950  000008                     __pintcode:
  2951                           	opt stack 0
  2952  000008                     _HighIsr:
  2953                           	opt stack 20
  2954                           
  2955                           ;incstack = 0
  2956  000008  823F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2957  00000A  CFFA F01D          	movff	pclath,??_HighIsr
  2958  00000E  CFFB F01E          	movff	pclatu,??_HighIsr+1
  2959  000012  CFE9 F01F          	movff	fsr0l,??_HighIsr+2
  2960  000016  CFEA F020          	movff	fsr0h,??_HighIsr+3
  2961  00001A  CFE1 F021          	movff	fsr1l,??_HighIsr+4
  2962  00001E  CFE2 F022          	movff	fsr1h,??_HighIsr+5
  2963  000022  CFD9 F023          	movff	fsr2l,??_HighIsr+6
  2964  000026  CFDA F024          	movff	fsr2h,??_HighIsr+7
  2965  00002A  CFF3 F025          	movff	prodl,??_HighIsr+8
  2966  00002E  CFF4 F026          	movff	prodh,??_HighIsr+9
  2967  000032  CFF6 F027          	movff	tblptrl,??_HighIsr+10
  2968  000036  CFF7 F028          	movff	tblptrh,??_HighIsr+11
  2969  00003A  CFF8 F029          	movff	tblptru,??_HighIsr+12
  2970  00003E  CFF5 F02A          	movff	tablat,??_HighIsr+13
  2971                           
  2972                           ;I2CMaster.c: 159: unsigned char rx;
  2973                           ;I2CMaster.c: 160: rx = -1;
  2974  000042  682B               	setf	HighIsr@rx,c
  2975                           
  2976                           ;I2CMaster.c: 162: if (INTCONbits.INT0IF == 1) {
  2977  000044  A2F2               	btfss	intcon,1,c	;volatile
  2978  000046  D027               	goto	i2l125
  2979                           
  2980                           ;I2CMaster.c: 174: I2CWriteByte(count, toggle);
  2981  000048  C02D  F001         	movff	_toggle,I2CWriteByte@choice
  2982  00004C  0100               	movlb	0	; () banked
  2983  00004E  517E               	movf	_count& (0+255),w,b
  2984  000050  EC7A  F00C         	call	_I2CWriteByte
  2985                           
  2986                           ;I2CMaster.c: 175: toggle ^= 1;
  2987  000054  0E01               	movlw	1
  2988  000056  1A2D               	xorwf	_toggle,f,c
  2989                           
  2990                           ;I2CMaster.c: 177: rx = I2CReadByte();
  2991  000058  ECE2  F00A         	call	_I2CReadByte	;wreg free
  2992  00005C  6E2B               	movwf	HighIsr@rx,c
  2993                           
  2994                           ;I2CMaster.c: 178: sprintf(line2str, "Wrote %d, Got %d", count, rx);
  2995  00005E  0E2E               	movlw	low _line2str
  2996  000060  6E0D               	movwf	i2sprintf@sp,c
  2997  000062  0E00               	movlw	high _line2str
  2998  000064  6E0E               	movwf	i2sprintf@sp+1,c
  2999  000066  0E0B               	movlw	low STR_2
  3000  000068  6E0F               	movwf	i2sprintf@f,c
  3001  00006A  0E10               	movlw	high STR_2
  3002  00006C  6E10               	movwf	i2sprintf@f+1,c
  3003  00006E  C07E  F011         	movff	_count,?i2_sprintf+4
  3004  000072  6A12               	clrf	?i2_sprintf+5,c
  3005  000074  C02B  F013         	movff	HighIsr@rx,?i2_sprintf+6
  3006  000078  6A14               	clrf	?i2_sprintf+7,c
  3007  00007A  ECD9  F008         	call	i2_sprintf	;wreg free
  3008                           
  3009                           ;I2CMaster.c: 179: LCDClearLine(1);
  3010  00007E  0E01               	movlw	1
  3011  000080  EC61  F00C         	call	i2_LCDClearLine
  3012                           
  3013                           ;I2CMaster.c: 180: LCDWriteLine(line2str, 1);
  3014  000084  0E2E               	movlw	low _line2str
  3015  000086  6E0E               	movwf	i2LCDWriteLine@str,c
  3016  000088  0E00               	movlw	high _line2str
  3017  00008A  6E0F               	movwf	i2LCDWriteLine@str+1,c
  3018  00008C  0E01               	movlw	1
  3019  00008E  6E10               	movwf	i2LCDWriteLine@line,c
  3020  000090  EC2B  F00A         	call	i2_LCDWriteLine	;wreg free
  3021                           
  3022                           ;I2CMaster.c: 181: INTCONbits.INT0IF = 0;
  3023  000094  92F2               	bcf	intcon,1,c	;volatile
  3024  000096                     i2l125:
  3025  000096  C02A  FFF5         	movff	??_HighIsr+13,tablat
  3026  00009A  C029  FFF8         	movff	??_HighIsr+12,tblptru
  3027  00009E  C028  FFF7         	movff	??_HighIsr+11,tblptrh
  3028  0000A2  C027  FFF6         	movff	??_HighIsr+10,tblptrl
  3029  0000A6  C026  FFF4         	movff	??_HighIsr+9,prodh
  3030  0000AA  C025  FFF3         	movff	??_HighIsr+8,prodl
  3031  0000AE  C024  FFDA         	movff	??_HighIsr+7,fsr2h
  3032  0000B2  C023  FFD9         	movff	??_HighIsr+6,fsr2l
  3033  0000B6  C022  FFE2         	movff	??_HighIsr+5,fsr1h
  3034  0000BA  C021  FFE1         	movff	??_HighIsr+4,fsr1l
  3035  0000BE  C020  FFEA         	movff	??_HighIsr+3,fsr0h
  3036  0000C2  C01F  FFE9         	movff	??_HighIsr+2,fsr0l
  3037  0000C6  C01E  FFFB         	movff	??_HighIsr+1,pclatu
  3038  0000CA  C01D  FFFA         	movff	??_HighIsr,pclath
  3039  0000CE  923F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3040  0000D0  0011               	retfie		f
  3041  0000D2                     __end_of_HighIsr:
  3042                           	opt stack 0
  3043                           pclatu	equ	0xFFB
  3044                           pclath	equ	0xFFA
  3045                           tblptru	equ	0xFF8
  3046                           tblptrh	equ	0xFF7
  3047                           tblptrl	equ	0xFF6
  3048                           tablat	equ	0xFF5
  3049                           prodh	equ	0xFF4
  3050                           prodl	equ	0xFF3
  3051                           intcon	equ	0xFF2
  3052                           intcon2	equ	0xFF1
  3053                           postinc0	equ	0xFEE
  3054                           fsr0h	equ	0xFEA
  3055                           fsr0l	equ	0xFE9
  3056                           wreg	equ	0xFE8
  3057                           fsr1h	equ	0xFE2
  3058                           fsr1l	equ	0xFE1
  3059                           indf2	equ	0xFDF
  3060                           postinc2	equ	0xFDE
  3061                           postdec2	equ	0xFDD
  3062                           fsr2h	equ	0xFDA
  3063                           fsr2l	equ	0xFD9
  3064                           status	equ	0xFD8
  3065                           
  3066 ;; *************** function i2_sprintf *****************
  3067 ;; Defined at:
  3068 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  sp              2   12[COMRAM] PTR unsigned char 
  3071 ;;		 -> line2str(17), line1str(17), 
  3072 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3073 ;;		 -> STR_2(17), STR_1(3), 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  sprintf         4    0        struct .
  3076 ;;  sprintf         3    0        PTR const unsigned char 
  3077 ;;  sprintf         2   25[COMRAM] unsigned int 
  3078 ;;  sprintf         2   21[COMRAM] PTR void [1]
  3079 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  3080 ;;  sprintf         2    0        unsigned int 
  3081 ;;  sprintf         1   27[COMRAM] char 
  3082 ;;  sprintf         1   24[COMRAM] char 
  3083 ;;  sprintf         1   23[COMRAM] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  2   12[COMRAM] int 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3093 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;Total ram usage:       16 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    1
  3100 ;; This function calls:
  3101 ;;		i2___lwdiv
  3102 ;;		i2___lwmod
  3103 ;; This function is called by:
  3104 ;;		_HighIsr
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text23
  3109  0011B2                     __ptext23:
  3110                           	opt stack 0
  3111  0011B2                     i2_sprintf:
  3112                           	opt stack 23
  3113                           
  3114                           ;doprnt.c: 494: va_list ap;
  3115                           ;doprnt.c: 499: signed char c;
  3116                           ;doprnt.c: 506: signed char prec;
  3117                           ;doprnt.c: 508: unsigned char flag;
  3118                           ;doprnt.c: 523: union {
  3119                           ;doprnt.c: 524: unsigned long vd;
  3120                           ;doprnt.c: 525: double integ;
  3121                           ;doprnt.c: 526: } tmpval;
  3122                           ;doprnt.c: 528: unsigned int val;
  3123                           ;doprnt.c: 529: unsigned len;
  3124                           ;doprnt.c: 530: const char * cp;
  3125                           ;doprnt.c: 533: *ap = __va_start();
  3126                           
  3127                           ;incstack = 0
  3128  0011B2  0E11               	movlw	low (?i2_sprintf+4)
  3129  0011B4  6E16               	movwf	i2sprintf@ap,c
  3130  0011B6  0E00               	movlw	high (?i2_sprintf+4)
  3131  0011B8  6E17               	movwf	i2sprintf@ap+1,c
  3132                           
  3133                           ;doprnt.c: 536: while(c = *f++) {
  3134  0011BA  D094               	goto	i2l2110
  3135  0011BC                     i2l2058:
  3136                           
  3137                           ;doprnt.c: 538: if(c != '%')
  3138  0011BC  0E25               	movlw	37
  3139  0011BE  181C               	xorwf	i2sprintf@c,w,c
  3140  0011C0  B4D8               	btfsc	status,2,c
  3141  0011C2  D009               	goto	i2l2064
  3142                           
  3143                           ;doprnt.c: 540: {
  3144                           ;doprnt.c: 541: ((*sp++ = (c)));
  3145  0011C4  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  3146  0011C8  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  3147  0011CC  C01C  FFDF         	movff	i2sprintf@c,indf2
  3148  0011D0  4A0D               	infsnz	i2sprintf@sp,f,c
  3149  0011D2  2A0E               	incf	i2sprintf@sp+1,f,c
  3150                           
  3151                           ;doprnt.c: 542: continue;
  3152  0011D4  D087               	goto	i2l2110
  3153  0011D6                     i2l2064:
  3154                           
  3155                           ;doprnt.c: 543: }
  3156                           ;doprnt.c: 548: flag = 0;
  3157  0011D6  0E00               	movlw	0
  3158  0011D8  6E18               	movwf	i2sprintf@flag,c
  3159                           
  3160                           ;doprnt.c: 822: }
  3161                           
  3162                           ;doprnt.c: 813: continue;
  3163                           
  3164                           ;doprnt.c: 802: default:
  3165                           
  3166                           ;doprnt.c: 698: case 'i':
  3167                           ;doprnt.c: 699: break;
  3168                           
  3169                           ;doprnt.c: 697: case 'd':
  3170                           
  3171                           ;doprnt.c: 638: goto alldone;
  3172                           
  3173                           ;doprnt.c: 637: case 0:
  3174                           
  3175                           ;doprnt.c: 635: switch(c = *f++) {
  3176  0011DA  C00F  FFF6         	movff	i2sprintf@f,tblptrl
  3177  0011DE  C010  FFF7         	movff	i2sprintf@f+1,tblptrh
  3178  0011E2  4A0F               	infsnz	i2sprintf@f,f,c
  3179  0011E4  2A10               	incf	i2sprintf@f+1,f,c
  3180  0011E6                     	if	0	;tblptru may be non-zero
  3181  0011E6                     	endif
  3182  0011E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3183  0011E6  0E00               	movlw	low (__mediumconst shr (0+16))
  3184  0011E8  6EF8               	movwf	tblptru,c
  3185  0011EA                     	endif
  3186  0011EA  0008               	tblrd		*
  3187  0011EC  CFF5 F01C          	movff	tablat,i2sprintf@c
  3188  0011F0  501C               	movf	i2sprintf@c,w,c
  3189                           
  3190                           ; Switch size 1, requested type "space"
  3191                           ; Number of cases is 3, Range of values is 0 to 105
  3192                           ; switch strategies available:
  3193                           ; Name         Instructions Cycles
  3194                           ; simple_byte           10     6 (average)
  3195                           ;	Chosen strategy is simple_byte
  3196  0011F2  0A00               	xorlw	0	; case 0
  3197  0011F4  B4D8               	btfsc	status,2,c
  3198  0011F6  D084               	goto	i2l2112
  3199  0011F8  0A64               	xorlw	100	; case 100
  3200  0011FA  B4D8               	btfsc	status,2,c
  3201  0011FC  D003               	goto	i2l2070
  3202  0011FE  0A0D               	xorlw	13	; case 105
  3203  001200  A4D8               	btfss	status,2,c
  3204  001202  D070               	goto	i2l2110
  3205  001204                     i2l2070:
  3206                           
  3207                           ;doprnt.c: 1253: {
  3208                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3209  001204  C016  FFD9         	movff	i2sprintf@ap,fsr2l
  3210  001208  C017  FFDA         	movff	i2sprintf@ap+1,fsr2h
  3211  00120C  CFDE F01A          	movff	postinc2,i2sprintf@val
  3212  001210  CFDD F01B          	movff	postdec2,i2sprintf@val+1
  3213  001214  0E02               	movlw	2
  3214  001216  2616               	addwf	i2sprintf@ap,f,c
  3215  001218  0E00               	movlw	0
  3216  00121A  2217               	addwfc	i2sprintf@ap+1,f,c
  3217                           
  3218                           ;doprnt.c: 1261: if((int)val < 0) {
  3219  00121C  AE1B               	btfss	i2sprintf@val+1,7,c
  3220  00121E  D006               	goto	i2l2080
  3221                           
  3222                           ;doprnt.c: 1262: flag |= 0x03;
  3223  001220  0E03               	movlw	3
  3224  001222  1218               	iorwf	i2sprintf@flag,f,c
  3225                           
  3226                           ;doprnt.c: 1263: val = -val;
  3227  001224  6C1A               	negf	i2sprintf@val,c
  3228  001226  1E1B               	comf	i2sprintf@val+1,f,c
  3229  001228  B0D8               	btfsc	status,0,c
  3230  00122A  2A1B               	incf	i2sprintf@val+1,f,c
  3231  00122C                     i2l2080:
  3232                           
  3233                           ;doprnt.c: 1264: }
  3234                           ;doprnt.c: 1266: }
  3235                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3236  00122C  0E01               	movlw	1
  3237  00122E  6E1C               	movwf	i2sprintf@c,c
  3238  001230                     i2l2082:
  3239  001230  0E05               	movlw	5
  3240  001232  181C               	xorwf	i2sprintf@c,w,c
  3241  001234  B4D8               	btfsc	status,2,c
  3242  001236  D015               	goto	i2l2094
  3243                           
  3244                           ;doprnt.c: 1306: if(val < dpowers[c])
  3245  001238  501C               	movf	i2sprintf@c,w,c
  3246  00123A  0D02               	mullw	2
  3247  00123C  0E01               	movlw	low _dpowers
  3248  00123E  24F3               	addwf	prodl,w,c
  3249  001240  6EF6               	movwf	tblptrl,c
  3250  001242  0E10               	movlw	high _dpowers
  3251  001244  20F4               	addwfc	prodh,w,c
  3252  001246  6EF7               	movwf	tblptrh,c
  3253  001248                     	if	1	;There are 3 active tblptr bytes
  3254  001248  6AF8               	clrf	tblptru,c
  3255  00124A  0E00               	movlw	low (__mediumconst shr (0+16))
  3256  00124C  22F8               	addwfc	tblptru,f,c
  3257  00124E                     	endif
  3258  00124E  0009               	tblrd		*+
  3259  001250  50F5               	movf	tablat,w,c
  3260  001252  5C1A               	subwf	i2sprintf@val,w,c
  3261  001254  0009               	tblrd		*+
  3262  001256  50F5               	movf	tablat,w,c
  3263  001258  581B               	subwfb	i2sprintf@val+1,w,c
  3264  00125A  A0D8               	btfss	status,0,c
  3265  00125C  D002               	goto	i2l2094
  3266                           
  3267                           ;doprnt.c: 1307: break;
  3268  00125E  2A1C               	incf	i2sprintf@c,f,c
  3269  001260  D7E7               	goto	i2l2082
  3270  001262                     i2l2094:
  3271                           
  3272                           ;doprnt.c: 1422: {
  3273                           ;doprnt.c: 1438: if(flag & 0x03)
  3274  001262  C018  F015         	movff	i2sprintf@flag,??i2_sprintf
  3275  001266  0E03               	movlw	3
  3276  001268  1615               	andwf	??i2_sprintf,f,c
  3277  00126A  B4D8               	btfsc	status,2,c
  3278  00126C  D008               	goto	i2l2100
  3279                           
  3280                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3281  00126E  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  3282  001272  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  3283  001276  0E2D               	movlw	45
  3284  001278  6EDF               	movwf	indf2,c
  3285  00127A  4A0D               	infsnz	i2sprintf@sp,f,c
  3286  00127C  2A0E               	incf	i2sprintf@sp+1,f,c
  3287  00127E                     i2l2100:
  3288                           
  3289                           ;doprnt.c: 1469: }
  3290                           ;doprnt.c: 1472: prec = c;
  3291  00127E  C01C  F019         	movff	i2sprintf@c,i2sprintf@prec
  3292                           
  3293                           ;doprnt.c: 1474: while(prec--) {
  3294  001282  D02C               	goto	i2l2108
  3295  001284                     i2l2102:
  3296                           
  3297                           ;doprnt.c: 1478: {
  3298                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3299  001284  5019               	movf	i2sprintf@prec,w,c
  3300  001286  0D02               	mullw	2
  3301  001288  0E01               	movlw	low _dpowers
  3302  00128A  24F3               	addwf	prodl,w,c
  3303  00128C  6EF6               	movwf	tblptrl,c
  3304  00128E  0E10               	movlw	high _dpowers
  3305  001290  20F4               	addwfc	prodh,w,c
  3306  001292  6EF7               	movwf	tblptrh,c
  3307  001294                     	if	1	;There are 3 active tblptr bytes
  3308  001294  6AF8               	clrf	tblptru,c
  3309  001296  0E00               	movlw	low (__mediumconst shr (0+16))
  3310  001298  22F8               	addwfc	tblptru,f,c
  3311  00129A                     	endif
  3312  00129A  0009               	tblrd		*+
  3313  00129C  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  3314  0012A0  000A               	tblrd		*-
  3315  0012A2  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  3316  0012A6  C01A  F001         	movff	i2sprintf@val,i2___lwdiv@dividend
  3317  0012AA  C01B  F002         	movff	i2sprintf@val+1,i2___lwdiv@dividend+1
  3318  0012AE  EC76  F00B         	call	i2___lwdiv	;wreg free
  3319  0012B2  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  3320  0012B6  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  3321  0012BA  0E00               	movlw	0
  3322  0012BC  6E0B               	movwf	i2___lwmod@divisor+1,c
  3323  0012BE  0E0A               	movlw	10
  3324  0012C0  6E0A               	movwf	i2___lwmod@divisor,c
  3325  0012C2  ECE7  F00B         	call	i2___lwmod	;wreg free
  3326  0012C6  5008               	movf	?i2___lwmod,w,c
  3327  0012C8  0F30               	addlw	48
  3328  0012CA  6E1C               	movwf	i2sprintf@c,c
  3329                           
  3330                           ;doprnt.c: 1523: }
  3331                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3332  0012CC  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  3333  0012D0  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  3334  0012D4  C01C  FFDF         	movff	i2sprintf@c,indf2
  3335  0012D8  4A0D               	infsnz	i2sprintf@sp,f,c
  3336  0012DA  2A0E               	incf	i2sprintf@sp+1,f,c
  3337  0012DC                     i2l2108:
  3338  0012DC  0619               	decf	i2sprintf@prec,f,c
  3339  0012DE  2819               	incf	i2sprintf@prec,w,c
  3340  0012E0  A4D8               	btfss	status,2,c
  3341  0012E2  D7D0               	goto	i2l2102
  3342  0012E4                     i2l2110:
  3343  0012E4  C00F  FFF6         	movff	i2sprintf@f,tblptrl
  3344  0012E8  C010  FFF7         	movff	i2sprintf@f+1,tblptrh
  3345  0012EC  4A0F               	infsnz	i2sprintf@f,f,c
  3346  0012EE  2A10               	incf	i2sprintf@f+1,f,c
  3347  0012F0                     	if	0	;tblptru may be non-zero
  3348  0012F0                     	endif
  3349  0012F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3350  0012F0  0E00               	movlw	low (__mediumconst shr (0+16))
  3351  0012F2  6EF8               	movwf	tblptru,c
  3352  0012F4                     	endif
  3353  0012F4  0008               	tblrd		*
  3354  0012F6  CFF5 F01C          	movff	tablat,i2sprintf@c
  3355  0012FA  501C               	movf	i2sprintf@c,w,c
  3356  0012FC  A4D8               	btfss	status,2,c
  3357  0012FE  D75E               	goto	i2l2058
  3358  001300                     i2l2112:
  3359                           
  3360                           ;doprnt.c: 1538: *sp = 0;
  3361  001300  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  3362  001304  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  3363  001308  0E00               	movlw	0
  3364  00130A  6EDF               	movwf	indf2,c
  3365  00130C  0012               	return	
  3366  00130E                     __end_ofi2_sprintf:
  3367                           	opt stack 0
  3368                           pclatu	equ	0xFFB
  3369                           pclath	equ	0xFFA
  3370                           tblptru	equ	0xFF8
  3371                           tblptrh	equ	0xFF7
  3372                           tblptrl	equ	0xFF6
  3373                           tablat	equ	0xFF5
  3374                           prodh	equ	0xFF4
  3375                           prodl	equ	0xFF3
  3376                           intcon	equ	0xFF2
  3377                           intcon2	equ	0xFF1
  3378                           postinc0	equ	0xFEE
  3379                           fsr0h	equ	0xFEA
  3380                           fsr0l	equ	0xFE9
  3381                           wreg	equ	0xFE8
  3382                           fsr1h	equ	0xFE2
  3383                           fsr1l	equ	0xFE1
  3384                           indf2	equ	0xFDF
  3385                           postinc2	equ	0xFDE
  3386                           postdec2	equ	0xFDD
  3387                           fsr2h	equ	0xFDA
  3388                           fsr2l	equ	0xFD9
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function i2___lwmod *****************
  3392 ;; Defined at:
  3393 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  dividend        2    7[COMRAM] unsigned int 
  3396 ;;  divisor         2    9[COMRAM] unsigned int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  __lwmod         1   11[COMRAM] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  2    7[COMRAM] unsigned int 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;Total ram usage:        5 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		i2_sprintf
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text24
  3422  0017CE                     __ptext24:
  3423                           	opt stack 0
  3424  0017CE                     i2___lwmod:
  3425                           	opt stack 23
  3426                           
  3427                           ;incstack = 0
  3428  0017CE  500A               	movf	i2___lwmod@divisor,w,c
  3429  0017D0  100B               	iorwf	i2___lwmod@divisor+1,w,c
  3430  0017D2  B4D8               	btfsc	status,2,c
  3431  0017D4  D018               	goto	i2l741
  3432  0017D6  0E01               	movlw	1
  3433  0017D8  6E0C               	movwf	i2___lwmod@counter,c
  3434  0017DA  D004               	goto	i2l1808
  3435  0017DC                     i2l1806:
  3436  0017DC  90D8               	bcf	status,0,c
  3437  0017DE  360A               	rlcf	i2___lwmod@divisor,f,c
  3438  0017E0  360B               	rlcf	i2___lwmod@divisor+1,f,c
  3439  0017E2  2A0C               	incf	i2___lwmod@counter,f,c
  3440  0017E4                     i2l1808:
  3441  0017E4  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  3442  0017E6  D7FA               	goto	i2l1806
  3443  0017E8                     i2l1810:
  3444  0017E8  500A               	movf	i2___lwmod@divisor,w,c
  3445  0017EA  5C08               	subwf	i2___lwmod@dividend,w,c
  3446  0017EC  500B               	movf	i2___lwmod@divisor+1,w,c
  3447  0017EE  5809               	subwfb	i2___lwmod@dividend+1,w,c
  3448  0017F0  A0D8               	btfss	status,0,c
  3449  0017F2  D004               	goto	i2l1814
  3450  0017F4  500A               	movf	i2___lwmod@divisor,w,c
  3451  0017F6  5E08               	subwf	i2___lwmod@dividend,f,c
  3452  0017F8  500B               	movf	i2___lwmod@divisor+1,w,c
  3453  0017FA  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  3454  0017FC                     i2l1814:
  3455  0017FC  90D8               	bcf	status,0,c
  3456  0017FE  320B               	rrcf	i2___lwmod@divisor+1,f,c
  3457  001800  320A               	rrcf	i2___lwmod@divisor,f,c
  3458  001802  2E0C               	decfsz	i2___lwmod@counter,f,c
  3459  001804  D7F1               	goto	i2l1810
  3460  001806                     i2l741:
  3461  001806  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  3462  00180A  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  3463  00180E  0012               	return		;funcret
  3464  001810                     __end_ofi2___lwmod:
  3465                           	opt stack 0
  3466                           pclatu	equ	0xFFB
  3467                           pclath	equ	0xFFA
  3468                           tblptru	equ	0xFF8
  3469                           tblptrh	equ	0xFF7
  3470                           tblptrl	equ	0xFF6
  3471                           tablat	equ	0xFF5
  3472                           prodh	equ	0xFF4
  3473                           prodl	equ	0xFF3
  3474                           intcon	equ	0xFF2
  3475                           intcon2	equ	0xFF1
  3476                           postinc0	equ	0xFEE
  3477                           fsr0h	equ	0xFEA
  3478                           fsr0l	equ	0xFE9
  3479                           wreg	equ	0xFE8
  3480                           fsr1h	equ	0xFE2
  3481                           fsr1l	equ	0xFE1
  3482                           indf2	equ	0xFDF
  3483                           postinc2	equ	0xFDE
  3484                           postdec2	equ	0xFDD
  3485                           fsr2h	equ	0xFDA
  3486                           fsr2l	equ	0xFD9
  3487                           status	equ	0xFD8
  3488                           
  3489 ;; *************** function i2___lwdiv *****************
  3490 ;; Defined at:
  3491 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  dividend        2    0[COMRAM] unsigned int 
  3494 ;;  divisor         2    2[COMRAM] unsigned int 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  3497 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  2    0[COMRAM] unsigned int 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;Total ram usage:        7 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		i2_sprintf
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text25
  3521  0016EC                     __ptext25:
  3522                           	opt stack 0
  3523  0016EC                     i2___lwdiv:
  3524                           	opt stack 23
  3525                           
  3526                           ;incstack = 0
  3527  0016EC  0E00               	movlw	0
  3528  0016EE  6E06               	movwf	i2___lwdiv@quotient+1,c
  3529  0016F0  0E00               	movlw	0
  3530  0016F2  6E05               	movwf	i2___lwdiv@quotient,c
  3531  0016F4  5003               	movf	i2___lwdiv@divisor,w,c
  3532  0016F6  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  3533  0016F8  B4D8               	btfsc	status,2,c
  3534  0016FA  D01C               	goto	i2l731
  3535  0016FC  0E01               	movlw	1
  3536  0016FE  6E07               	movwf	i2___lwdiv@counter,c
  3537  001700  D004               	goto	i2l1788
  3538  001702                     i2l1786:
  3539  001702  90D8               	bcf	status,0,c
  3540  001704  3603               	rlcf	i2___lwdiv@divisor,f,c
  3541  001706  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  3542  001708  2A07               	incf	i2___lwdiv@counter,f,c
  3543  00170A                     i2l1788:
  3544  00170A  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  3545  00170C  D7FA               	goto	i2l1786
  3546  00170E                     i2l1790:
  3547  00170E  90D8               	bcf	status,0,c
  3548  001710  3605               	rlcf	i2___lwdiv@quotient,f,c
  3549  001712  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  3550  001714  5003               	movf	i2___lwdiv@divisor,w,c
  3551  001716  5C01               	subwf	i2___lwdiv@dividend,w,c
  3552  001718  5004               	movf	i2___lwdiv@divisor+1,w,c
  3553  00171A  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  3554  00171C  A0D8               	btfss	status,0,c
  3555  00171E  D005               	goto	i2l1798
  3556  001720  5003               	movf	i2___lwdiv@divisor,w,c
  3557  001722  5E01               	subwf	i2___lwdiv@dividend,f,c
  3558  001724  5004               	movf	i2___lwdiv@divisor+1,w,c
  3559  001726  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  3560  001728  8005               	bsf	i2___lwdiv@quotient,0,c
  3561  00172A                     i2l1798:
  3562  00172A  90D8               	bcf	status,0,c
  3563  00172C  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  3564  00172E  3203               	rrcf	i2___lwdiv@divisor,f,c
  3565  001730  2E07               	decfsz	i2___lwdiv@counter,f,c
  3566  001732  D7ED               	goto	i2l1790
  3567  001734                     i2l731:
  3568  001734  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  3569  001738  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  3570  00173C  0012               	return		;funcret
  3571  00173E                     __end_ofi2___lwdiv:
  3572                           	opt stack 0
  3573                           pclatu	equ	0xFFB
  3574                           pclath	equ	0xFFA
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           intcon2	equ	0xFF1
  3583                           postinc0	equ	0xFEE
  3584                           fsr0h	equ	0xFEA
  3585                           fsr0l	equ	0xFE9
  3586                           wreg	equ	0xFE8
  3587                           fsr1h	equ	0xFE2
  3588                           fsr1l	equ	0xFE1
  3589                           indf2	equ	0xFDF
  3590                           postinc2	equ	0xFDE
  3591                           postdec2	equ	0xFDD
  3592                           fsr2h	equ	0xFDA
  3593                           fsr2l	equ	0xFD9
  3594                           status	equ	0xFD8
  3595                           
  3596 ;; *************** function i2_LCDWriteLine *****************
  3597 ;; Defined at:
  3598 ;;		line 59 in file "LCD.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  str             2   13[COMRAM] PTR const unsigned char 
  3601 ;;		 -> LCDScroll@str(17), line2str(17), line1str(17), 
  3602 ;;  line            1   15[COMRAM] unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;		None               void
  3607 ;; Registers used:
  3608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3614 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;Total ram usage:        4 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    4
  3621 ;; This function calls:
  3622 ;;		i2_LCDSetPos
  3623 ;;		i2_LCDWriteData
  3624 ;; This function is called by:
  3625 ;;		_HighIsr
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text26
  3630  001456                     __ptext26:
  3631                           	opt stack 0
  3632  001456                     i2_LCDWriteLine:
  3633                           	opt stack 20
  3634                           
  3635                           ;LCD.c: 60: if (line >= 2) {
  3636                           
  3637                           ;incstack = 0
  3638  001456  0E01               	movlw	1
  3639  001458  6410               	cpfsgt	i2LCDWriteLine@line,c
  3640  00145A  D001               	goto	i2l2020
  3641  00145C  0012               	return	
  3642  00145E                     i2l2020:
  3643                           
  3644                           ;LCD.c: 62: }
  3645                           ;LCD.c: 63: LCDSetPos(line, 0);
  3646  00145E  C010  F007         	movff	i2LCDWriteLine@line,i2LCDSetPos@row
  3647  001462  6A08               	clrf	i2LCDSetPos@row+1,c
  3648  001464  0E00               	movlw	0
  3649  001466  6E0A               	movwf	i2LCDSetPos@col+1,c
  3650  001468  0E00               	movlw	0
  3651  00146A  6E09               	movwf	i2LCDSetPos@col,c
  3652  00146C  ECC4  F00B         	call	i2_LCDSetPos	;wreg free
  3653                           
  3654                           ;LCD.c: 64: while (*str) {
  3655  001470  D032               	goto	i2l2040
  3656  001472                     i2l2022:
  3657                           
  3658                           ;LCD.c: 65: if (*str == '\n') {
  3659  001472  C00E  FFD9         	movff	i2LCDWriteLine@str,fsr2l
  3660  001476  C00F  FFDA         	movff	i2LCDWriteLine@str+1,fsr2h
  3661  00147A  0E0A               	movlw	10
  3662  00147C  18DE               	xorwf	postinc2,w,c
  3663  00147E  A4D8               	btfss	status,2,c
  3664  001480  D007               	goto	i2l2030
  3665                           
  3666                           ;LCD.c: 66: ++line;
  3667  001482  2A10               	incf	i2LCDWriteLine@line,f,c
  3668                           
  3669                           ;LCD.c: 67: if (line == 2) {
  3670  001484  0E02               	movlw	2
  3671  001486  1810               	xorwf	i2LCDWriteLine@line,w,c
  3672  001488  A4D8               	btfss	status,2,c
  3673  00148A  D002               	goto	i2l2030
  3674                           
  3675                           ;LCD.c: 68: line = 0;
  3676  00148C  0E00               	movlw	0
  3677  00148E  6E10               	movwf	i2LCDWriteLine@line,c
  3678  001490                     i2l2030:
  3679                           
  3680                           ;LCD.c: 69: }
  3681                           ;LCD.c: 70: }
  3682                           ;LCD.c: 71: if (*str == '\r' || *str == '\n') {
  3683  001490  C00E  FFD9         	movff	i2LCDWriteLine@str,fsr2l
  3684  001494  C00F  FFDA         	movff	i2LCDWriteLine@str+1,fsr2h
  3685  001498  0E0D               	movlw	13
  3686  00149A  18DE               	xorwf	postinc2,w,c
  3687  00149C  B4D8               	btfsc	status,2,c
  3688  00149E  D008               	goto	i2l2034
  3689  0014A0  C00E  FFD9         	movff	i2LCDWriteLine@str,fsr2l
  3690  0014A4  C00F  FFDA         	movff	i2LCDWriteLine@str+1,fsr2h
  3691  0014A8  0E0A               	movlw	10
  3692  0014AA  18DE               	xorwf	postinc2,w,c
  3693  0014AC  A4D8               	btfss	status,2,c
  3694  0014AE  D00A               	goto	i2l2036
  3695  0014B0                     i2l2034:
  3696                           
  3697                           ;LCD.c: 72: LCDSetPos(line, 0);
  3698  0014B0  C010  F007         	movff	i2LCDWriteLine@line,i2LCDSetPos@row
  3699  0014B4  6A08               	clrf	i2LCDSetPos@row+1,c
  3700  0014B6  0E00               	movlw	0
  3701  0014B8  6E0A               	movwf	i2LCDSetPos@col+1,c
  3702  0014BA  0E00               	movlw	0
  3703  0014BC  6E09               	movwf	i2LCDSetPos@col,c
  3704  0014BE  ECC4  F00B         	call	i2_LCDSetPos	;wreg free
  3705                           
  3706                           ;LCD.c: 73: } else {
  3707  0014C2  D007               	goto	i2l2038
  3708  0014C4                     i2l2036:
  3709                           
  3710                           ;LCD.c: 74: LCDWriteData(*str);
  3711  0014C4  C00E  FFD9         	movff	i2LCDWriteLine@str,fsr2l
  3712  0014C8  C00F  FFDA         	movff	i2LCDWriteLine@str+1,fsr2h
  3713  0014CC  50DF               	movf	indf2,w,c
  3714  0014CE  EC0B  F00D         	call	i2_LCDWriteData
  3715  0014D2                     i2l2038:
  3716                           
  3717                           ;LCD.c: 75: }
  3718                           ;LCD.c: 76: ++str;
  3719  0014D2  4A0E               	infsnz	i2LCDWriteLine@str,f,c
  3720  0014D4  2A0F               	incf	i2LCDWriteLine@str+1,f,c
  3721  0014D6                     i2l2040:
  3722  0014D6  C00E  FFD9         	movff	i2LCDWriteLine@str,fsr2l
  3723  0014DA  C00F  FFDA         	movff	i2LCDWriteLine@str+1,fsr2h
  3724  0014DE  50DF               	movf	indf2,w,c
  3725  0014E0  B4D8               	btfsc	status,2,c
  3726  0014E2  0012               	return	
  3727  0014E4  D7C6               	goto	i2l2022
  3728  0014E6                     __end_ofi2_LCDWriteLine:
  3729                           	opt stack 0
  3730                           pclatu	equ	0xFFB
  3731                           pclath	equ	0xFFA
  3732                           tblptru	equ	0xFF8
  3733                           tblptrh	equ	0xFF7
  3734                           tblptrl	equ	0xFF6
  3735                           tablat	equ	0xFF5
  3736                           prodh	equ	0xFF4
  3737                           prodl	equ	0xFF3
  3738                           intcon	equ	0xFF2
  3739                           intcon2	equ	0xFF1
  3740                           postinc0	equ	0xFEE
  3741                           fsr0h	equ	0xFEA
  3742                           fsr0l	equ	0xFE9
  3743                           wreg	equ	0xFE8
  3744                           fsr1h	equ	0xFE2
  3745                           fsr1l	equ	0xFE1
  3746                           indf2	equ	0xFDF
  3747                           postinc2	equ	0xFDE
  3748                           postdec2	equ	0xFDD
  3749                           fsr2h	equ	0xFDA
  3750                           fsr2l	equ	0xFD9
  3751                           status	equ	0xFD8
  3752                           
  3753 ;; *************** function i2_LCDClearLine *****************
  3754 ;; Defined at:
  3755 ;;		line 80 in file "LCD.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  line            1    wreg     unsigned char 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  line            1   13[COMRAM] unsigned char 
  3760 ;;  LCDClearLine    1   14[COMRAM] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;		None               void
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;Total ram usage:        2 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    4
  3777 ;; This function calls:
  3778 ;;		i2_LCDSetPos
  3779 ;;		i2_LCDWriteData
  3780 ;; This function is called by:
  3781 ;;		_HighIsr
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text27
  3786  0018C2                     __ptext27:
  3787                           	opt stack 0
  3788  0018C2                     i2_LCDClearLine:
  3789                           	opt stack 20
  3790                           
  3791                           ;incstack = 0
  3792                           ;i2LCDClearLine@line stored from wreg
  3793  0018C2  6E0E               	movwf	i2LCDClearLine@line,c
  3794                           
  3795                           ;LCD.c: 81: char c = 0;
  3796  0018C4  0E00               	movlw	0
  3797  0018C6  6E0F               	movwf	i2LCDClearLine@c,c
  3798                           
  3799                           ;LCD.c: 82: if (line >= 2) {
  3800  0018C8  0E01               	movlw	1
  3801  0018CA  640E               	cpfsgt	i2LCDClearLine@line,c
  3802  0018CC  D001               	goto	i2l2048
  3803  0018CE  0012               	return	
  3804  0018D0                     i2l2048:
  3805                           
  3806                           ;LCD.c: 84: }
  3807                           ;LCD.c: 85: LCDSetPos(line, 0);
  3808  0018D0  C00E  F007         	movff	i2LCDClearLine@line,i2LCDSetPos@row
  3809  0018D4  6A08               	clrf	i2LCDSetPos@row+1,c
  3810  0018D6  0E00               	movlw	0
  3811  0018D8  6E0A               	movwf	i2LCDSetPos@col+1,c
  3812  0018DA  0E00               	movlw	0
  3813  0018DC  6E09               	movwf	i2LCDSetPos@col,c
  3814  0018DE  ECC4  F00B         	call	i2_LCDSetPos	;wreg free
  3815                           
  3816                           ;LCD.c: 86: while (c < 16) {
  3817  0018E2  D004               	goto	i2l2054
  3818  0018E4                     i2l2050:
  3819                           
  3820                           ;LCD.c: 87: LCDWriteData(' ');
  3821  0018E4  0E20               	movlw	32
  3822  0018E6  EC0B  F00D         	call	i2_LCDWriteData
  3823                           
  3824                           ;LCD.c: 88: ++c;
  3825  0018EA  2A0F               	incf	i2LCDClearLine@c,f,c
  3826  0018EC                     i2l2054:
  3827  0018EC  0E0F               	movlw	15
  3828  0018EE  640F               	cpfsgt	i2LCDClearLine@c,c
  3829  0018F0  D7F9               	goto	i2l2050
  3830  0018F2  0012               	return	
  3831  0018F4                     __end_ofi2_LCDClearLine:
  3832                           	opt stack 0
  3833                           pclatu	equ	0xFFB
  3834                           pclath	equ	0xFFA
  3835                           tblptru	equ	0xFF8
  3836                           tblptrh	equ	0xFF7
  3837                           tblptrl	equ	0xFF6
  3838                           tablat	equ	0xFF5
  3839                           prodh	equ	0xFF4
  3840                           prodl	equ	0xFF3
  3841                           intcon	equ	0xFF2
  3842                           intcon2	equ	0xFF1
  3843                           postinc0	equ	0xFEE
  3844                           fsr0h	equ	0xFEA
  3845                           fsr0l	equ	0xFE9
  3846                           wreg	equ	0xFE8
  3847                           fsr1h	equ	0xFE2
  3848                           fsr1l	equ	0xFE1
  3849                           indf2	equ	0xFDF
  3850                           postinc2	equ	0xFDE
  3851                           postdec2	equ	0xFDD
  3852                           fsr2h	equ	0xFDA
  3853                           fsr2l	equ	0xFD9
  3854                           status	equ	0xFD8
  3855                           
  3856 ;; *************** function i2_LCDWriteData *****************
  3857 ;; Defined at:
  3858 ;;		line 197 in file "LCD.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  c               1    wreg     unsigned char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  c               1    5[COMRAM] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;		None               void
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;Total ram usage:        1 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    2
  3879 ;; This function calls:
  3880 ;;		i2_LCDWriteByte
  3881 ;;		i2_shortDelay
  3882 ;;		i2_wait
  3883 ;; This function is called by:
  3884 ;;		i2_LCDWriteLine
  3885 ;;		i2_LCDClearLine
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text28
  3890  001A16                     __ptext28:
  3891                           	opt stack 0
  3892  001A16                     i2_LCDWriteData:
  3893                           	opt stack 21
  3894                           
  3895                           ;incstack = 0
  3896                           ;i2LCDWriteData@c stored from wreg
  3897  001A16  6E06               	movwf	i2LCDWriteData@c,c
  3898                           
  3899                           ;LCD.c: 198: wait();
  3900  001A18  EC5D  F00D         	call	i2_wait	;wreg free
  3901                           
  3902                           ;LCD.c: 199: LCDWriteByte(c, 1);
  3903  001A1C  0E01               	movlw	1
  3904  001A1E  6E03               	movwf	i2LCDWriteByte@rs,c
  3905  001A20  5006               	movf	i2LCDWriteData@c,w,c
  3906  001A22  EC28  F00C         	call	i2_LCDWriteByte
  3907                           
  3908                           ;LCD.c: 200: shortDelay();
  3909  001A26  EC57  F00D         	call	i2_shortDelay	;wreg free
  3910  001A2A  0012               	return		;funcret
  3911  001A2C                     __end_ofi2_LCDWriteData:
  3912                           	opt stack 0
  3913                           pclatu	equ	0xFFB
  3914                           pclath	equ	0xFFA
  3915                           tblptru	equ	0xFF8
  3916                           tblptrh	equ	0xFF7
  3917                           tblptrl	equ	0xFF6
  3918                           tablat	equ	0xFF5
  3919                           prodh	equ	0xFF4
  3920                           prodl	equ	0xFF3
  3921                           intcon	equ	0xFF2
  3922                           intcon2	equ	0xFF1
  3923                           postinc0	equ	0xFEE
  3924                           fsr0h	equ	0xFEA
  3925                           fsr0l	equ	0xFE9
  3926                           wreg	equ	0xFE8
  3927                           fsr1h	equ	0xFE2
  3928                           fsr1l	equ	0xFE1
  3929                           indf2	equ	0xFDF
  3930                           postinc2	equ	0xFDE
  3931                           postdec2	equ	0xFDD
  3932                           fsr2h	equ	0xFDA
  3933                           fsr2l	equ	0xFD9
  3934                           status	equ	0xFD8
  3935                           
  3936 ;; *************** function i2_LCDSetPos *****************
  3937 ;; Defined at:
  3938 ;;		line 96 in file "LCD.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  row             2    6[COMRAM] int 
  3941 ;;  col             2    8[COMRAM] int 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  LCDSetPos       2   11[COMRAM] int 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;		None               void
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;Total ram usage:        7 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    3
  3960 ;; This function calls:
  3961 ;;		i2_LCDCommand
  3962 ;;		i2_calculateBase
  3963 ;; This function is called by:
  3964 ;;		i2_LCDWriteLine
  3965 ;;		i2_LCDClearLine
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text29
  3970  001788                     __ptext29:
  3971                           	opt stack 0
  3972  001788                     i2_LCDSetPos:
  3973                           	opt stack 20
  3974                           
  3975                           ;LCD.c: 97: int pos;
  3976                           ;LCD.c: 98: if (row < 0 || col < 0 || row >= 2 || col >= 16) {
  3977                           
  3978                           ;incstack = 0
  3979  001788  BE08               	btfsc	i2LCDSetPos@row+1,7,c
  3980  00178A  0012               	return	
  3981  00178C  BE0A               	btfsc	i2LCDSetPos@col+1,7,c
  3982  00178E  0012               	return	
  3983  001790  BE08               	btfsc	i2LCDSetPos@row+1,7,c
  3984  001792  D006               	goto	i2l1768
  3985  001794  5008               	movf	i2LCDSetPos@row+1,w,c
  3986  001796  E11A               	bnz	i2l210
  3987  001798  0E02               	movlw	2
  3988  00179A  5C07               	subwf	i2LCDSetPos@row,w,c
  3989  00179C  B0D8               	btfsc	status,0,c
  3990  00179E  0012               	return	
  3991  0017A0                     i2l1768:
  3992  0017A0  BE0A               	btfsc	i2LCDSetPos@col+1,7,c
  3993  0017A2  D006               	goto	i2l1770
  3994  0017A4  500A               	movf	i2LCDSetPos@col+1,w,c
  3995  0017A6  E112               	bnz	i2l210
  3996  0017A8  0E10               	movlw	16
  3997  0017AA  5C09               	subwf	i2LCDSetPos@col,w,c
  3998  0017AC  B0D8               	btfsc	status,0,c
  3999  0017AE  0012               	return	
  4000  0017B0                     i2l1770:
  4001                           
  4002                           ;LCD.c: 100: }
  4003                           ;LCD.c: 101: pos = calculateBase(row) + col;
  4004  0017B0  5007               	movf	i2LCDSetPos@row,w,c
  4005  0017B2  ECE0  F00C         	call	i2_calculateBase
  4006  0017B6  6E0B               	movwf	??i2_LCDSetPos& (0+255),c
  4007  0017B8  500B               	movf	??i2_LCDSetPos,w,c
  4008  0017BA  2409               	addwf	i2LCDSetPos@col,w,c
  4009  0017BC  6E0C               	movwf	i2LCDSetPos@pos,c
  4010  0017BE  0E00               	movlw	0
  4011  0017C0  200A               	addwfc	i2LCDSetPos@col+1,w,c
  4012  0017C2  6E0D               	movwf	i2LCDSetPos@pos+1,c
  4013                           
  4014                           ;LCD.c: 102: LCDCommand(128 + pos);
  4015  0017C4  500C               	movf	i2LCDSetPos@pos,w,c
  4016  0017C6  0F80               	addlw	128
  4017  0017C8  EC16  F00D         	call	i2_LCDCommand
  4018  0017CC                     i2l210:
  4019  0017CC  0012               	return		;funcret
  4020  0017CE                     __end_ofi2_LCDSetPos:
  4021                           	opt stack 0
  4022                           pclatu	equ	0xFFB
  4023                           pclath	equ	0xFFA
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           prodh	equ	0xFF4
  4029                           prodl	equ	0xFF3
  4030                           intcon	equ	0xFF2
  4031                           intcon2	equ	0xFF1
  4032                           postinc0	equ	0xFEE
  4033                           fsr0h	equ	0xFEA
  4034                           fsr0l	equ	0xFE9
  4035                           wreg	equ	0xFE8
  4036                           fsr1h	equ	0xFE2
  4037                           fsr1l	equ	0xFE1
  4038                           indf2	equ	0xFDF
  4039                           postinc2	equ	0xFDE
  4040                           postdec2	equ	0xFDD
  4041                           fsr2h	equ	0xFDA
  4042                           fsr2l	equ	0xFD9
  4043                           status	equ	0xFD8
  4044                           
  4045 ;; *************** function i2_calculateBase *****************
  4046 ;; Defined at:
  4047 ;;		line 225 in file "LCD.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  line            1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  line            1    1[COMRAM] unsigned char 
  4052 ;;  calculateBas    1    0[COMRAM] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      unsigned char 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0, prodl, prodh
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;Total ram usage:        2 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		i2_LCDSetPos
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text30
  4076  0019C0                     __ptext30:
  4077                           	opt stack 0
  4078  0019C0                     i2_calculateBase:
  4079                           	opt stack 22
  4080                           
  4081                           ;incstack = 0
  4082                           ;i2calculateBase@line stored from wreg
  4083  0019C0  6E02               	movwf	i2calculateBase@line,c
  4084                           
  4085                           ;LCD.c: 226: char base;
  4086                           ;LCD.c: 227: if (line % 2 == 0) {
  4087  0019C2  B002               	btfsc	i2calculateBase@line,0,c
  4088  0019C4  D005               	goto	i2l1682
  4089                           
  4090                           ;LCD.c: 228: base = line * 10;
  4091  0019C6  5002               	movf	i2calculateBase@line,w,c
  4092  0019C8  0D0A               	mullw	10
  4093  0019CA  CFF3 F001          	movff	prodl,i2calculateBase@base
  4094                           
  4095                           ;LCD.c: 229: } else {
  4096  0019CE  D005               	goto	i2l1684
  4097  0019D0                     i2l1682:
  4098                           
  4099                           ;LCD.c: 230: base = 54 + line * 10;
  4100  0019D0  5002               	movf	i2calculateBase@line,w,c
  4101  0019D2  0D0A               	mullw	10
  4102  0019D4  50F3               	movf	prodl,w,c
  4103  0019D6  0F36               	addlw	54
  4104  0019D8  6E01               	movwf	i2calculateBase@base,c
  4105  0019DA                     i2l1684:
  4106                           
  4107                           ;LCD.c: 231: }
  4108                           ;LCD.c: 232: return base;
  4109  0019DA  5001               	movf	i2calculateBase@base,w,c
  4110  0019DC  0012               	return	
  4111  0019DE                     __end_ofi2_calculateBase:
  4112                           	opt stack 0
  4113                           pclatu	equ	0xFFB
  4114                           pclath	equ	0xFFA
  4115                           tblptru	equ	0xFF8
  4116                           tblptrh	equ	0xFF7
  4117                           tblptrl	equ	0xFF6
  4118                           tablat	equ	0xFF5
  4119                           prodh	equ	0xFF4
  4120                           prodl	equ	0xFF3
  4121                           intcon	equ	0xFF2
  4122                           intcon2	equ	0xFF1
  4123                           postinc0	equ	0xFEE
  4124                           fsr0h	equ	0xFEA
  4125                           fsr0l	equ	0xFE9
  4126                           wreg	equ	0xFE8
  4127                           fsr1h	equ	0xFE2
  4128                           fsr1l	equ	0xFE1
  4129                           indf2	equ	0xFDF
  4130                           postinc2	equ	0xFDE
  4131                           postdec2	equ	0xFDD
  4132                           fsr2h	equ	0xFDA
  4133                           fsr2l	equ	0xFD9
  4134                           status	equ	0xFD8
  4135                           
  4136 ;; *************** function i2_LCDCommand *****************
  4137 ;; Defined at:
  4138 ;;		line 187 in file "LCD.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  command         1    wreg     unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  command         1    5[COMRAM] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;		None               void
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;Total ram usage:        1 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    2
  4159 ;; This function calls:
  4160 ;;		i2_LCDWriteByte
  4161 ;;		i2_shortDelay
  4162 ;;		i2_wait
  4163 ;; This function is called by:
  4164 ;;		i2_LCDSetPos
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text31
  4169  001A2C                     __ptext31:
  4170                           	opt stack 0
  4171  001A2C                     i2_LCDCommand:
  4172                           	opt stack 20
  4173                           
  4174                           ;incstack = 0
  4175                           ;i2LCDCommand@command stored from wreg
  4176  001A2C  6E06               	movwf	i2LCDCommand@command,c
  4177                           
  4178                           ;LCD.c: 188: wait();
  4179  001A2E  EC5D  F00D         	call	i2_wait	;wreg free
  4180                           
  4181                           ;LCD.c: 189: LCDWriteByte(command, 0);
  4182  001A32  0E00               	movlw	0
  4183  001A34  6E03               	movwf	i2LCDWriteByte@rs,c
  4184  001A36  5006               	movf	i2LCDCommand@command,w,c
  4185  001A38  EC28  F00C         	call	i2_LCDWriteByte
  4186                           
  4187                           ;LCD.c: 190: shortDelay();
  4188  001A3C  EC57  F00D         	call	i2_shortDelay	;wreg free
  4189  001A40  0012               	return		;funcret
  4190  001A42                     __end_ofi2_LCDCommand:
  4191                           	opt stack 0
  4192                           pclatu	equ	0xFFB
  4193                           pclath	equ	0xFFA
  4194                           tblptru	equ	0xFF8
  4195                           tblptrh	equ	0xFF7
  4196                           tblptrl	equ	0xFF6
  4197                           tablat	equ	0xFF5
  4198                           prodh	equ	0xFF4
  4199                           prodl	equ	0xFF3
  4200                           intcon	equ	0xFF2
  4201                           intcon2	equ	0xFF1
  4202                           postinc0	equ	0xFEE
  4203                           fsr0h	equ	0xFEA
  4204                           fsr0l	equ	0xFE9
  4205                           wreg	equ	0xFE8
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           indf2	equ	0xFDF
  4209                           postinc2	equ	0xFDE
  4210                           postdec2	equ	0xFDD
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215 ;; *************** function i2_wait *****************
  4216 ;; Defined at:
  4217 ;;		line 235 in file "LCD.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;		None               void
  4224 ;; Registers used:
  4225 ;;		None
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;Total ram usage:        0 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		i2_LCDCommand
  4241 ;;		i2_LCDWriteData
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text32
  4246  001ABA                     __ptext32:
  4247                           	opt stack 0
  4248  001ABA                     i2_wait:
  4249                           	opt stack 22
  4250                           
  4251                           ;incstack = 0
  4252  001ABA  0012               	return		;funcret
  4253  001ABC                     __end_ofi2_wait:
  4254                           	opt stack 0
  4255                           pclatu	equ	0xFFB
  4256                           pclath	equ	0xFFA
  4257                           tblptru	equ	0xFF8
  4258                           tblptrh	equ	0xFF7
  4259                           tblptrl	equ	0xFF6
  4260                           tablat	equ	0xFF5
  4261                           prodh	equ	0xFF4
  4262                           prodl	equ	0xFF3
  4263                           intcon	equ	0xFF2
  4264                           intcon2	equ	0xFF1
  4265                           postinc0	equ	0xFEE
  4266                           fsr0h	equ	0xFEA
  4267                           fsr0l	equ	0xFE9
  4268                           wreg	equ	0xFE8
  4269                           fsr1h	equ	0xFE2
  4270                           fsr1l	equ	0xFE1
  4271                           indf2	equ	0xFDF
  4272                           postinc2	equ	0xFDE
  4273                           postdec2	equ	0xFDD
  4274                           fsr2h	equ	0xFDA
  4275                           fsr2l	equ	0xFD9
  4276                           status	equ	0xFD8
  4277                           
  4278 ;; *************** function i2_shortDelay *****************
  4279 ;; Defined at:
  4280 ;;		line 247 in file "LCD.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;		None               void
  4287 ;; Registers used:
  4288 ;;		wreg
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;Total ram usage:        0 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		i2_LCDCommand
  4304 ;;		i2_LCDWriteData
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text33
  4309  001AAE                     __ptext33:
  4310                           	opt stack 0
  4311  001AAE                     i2_shortDelay:
  4312                           	opt stack 22
  4313                           
  4314                           ;LCD.c: 249: _delay((unsigned long)((40)*(40000000L/4000000.0)));
  4315                           
  4316                           ;incstack = 0
  4317  001AAE  0E85               	movlw	133
  4318  001AB0                     i2u253_47:
  4319  001AB0  2EE8               	decfsz	wreg,f,c
  4320  001AB2  D7FE               	goto	i2u253_47
  4321  001AB4  F000               	nop	
  4322  001AB6  0012               	return		;funcret
  4323  001AB8                     __end_ofi2_shortDelay:
  4324                           	opt stack 0
  4325                           pclatu	equ	0xFFB
  4326                           pclath	equ	0xFFA
  4327                           tblptru	equ	0xFF8
  4328                           tblptrh	equ	0xFF7
  4329                           tblptrl	equ	0xFF6
  4330                           tablat	equ	0xFF5
  4331                           prodh	equ	0xFF4
  4332                           prodl	equ	0xFF3
  4333                           intcon	equ	0xFF2
  4334                           intcon2	equ	0xFF1
  4335                           postinc0	equ	0xFEE
  4336                           fsr0h	equ	0xFEA
  4337                           fsr0l	equ	0xFE9
  4338                           wreg	equ	0xFE8
  4339                           fsr1h	equ	0xFE2
  4340                           fsr1l	equ	0xFE1
  4341                           indf2	equ	0xFDF
  4342                           postinc2	equ	0xFDE
  4343                           postdec2	equ	0xFDD
  4344                           fsr2h	equ	0xFDA
  4345                           fsr2l	equ	0xFD9
  4346                           status	equ	0xFD8
  4347                           
  4348 ;; *************** function i2_LCDWriteByte *****************
  4349 ;; Defined at:
  4350 ;;		line 260 in file "LCD.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  c               1    wreg     unsigned char 
  4353 ;;  rs              1    2[COMRAM] unsigned char 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  c               1    3[COMRAM] unsigned char 
  4356 ;;  LCDWriteByte    1    4[COMRAM] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;		None               void
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;Total ram usage:        3 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    1
  4373 ;; This function calls:
  4374 ;;		i2_WriteRegister
  4375 ;; This function is called by:
  4376 ;;		i2_LCDCommand
  4377 ;;		i2_LCDWriteData
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text34
  4382  001850                     __ptext34:
  4383                           	opt stack 0
  4384  001850                     i2_LCDWriteByte:
  4385                           	opt stack 21
  4386                           
  4387                           ;incstack = 0
  4388                           ;i2LCDWriteByte@c stored from wreg
  4389  001850  6E04               	movwf	i2LCDWriteByte@c,c
  4390                           
  4391                           ;LCD.c: 261: unsigned char comFlags = 0;
  4392  001852  0E00               	movlw	0
  4393  001854  6E05               	movwf	i2LCDWriteByte@comFlags,c
  4394                           
  4395                           ;LCD.c: 262: if (rs) {
  4396  001856  5003               	movf	i2LCDWriteByte@rs,w,c
  4397  001858  B4D8               	btfsc	status,2,c
  4398  00185A  D002               	goto	i2l1648
  4399                           
  4400                           ;LCD.c: 263: comFlags = 0b10000000;
  4401  00185C  0E80               	movlw	128
  4402  00185E  6E05               	movwf	i2LCDWriteByte@comFlags,c
  4403  001860                     i2l1648:
  4404                           
  4405                           ;LCD.c: 264: }
  4406                           ;LCD.c: 265: WriteRegister(0x12, comFlags);
  4407  001860  C005  F001         	movff	i2LCDWriteByte@comFlags,i2WriteRegister@b
  4408  001864  0E12               	movlw	18
  4409  001866  ECBC  F00C         	call	i2_WriteRegister
  4410                           
  4411                           ;LCD.c: 266: WriteRegister(0x13, c);
  4412  00186A  C004  F001         	movff	i2LCDWriteByte@c,i2WriteRegister@b
  4413  00186E  0E13               	movlw	19
  4414  001870  ECBC  F00C         	call	i2_WriteRegister
  4415                           
  4416                           ;LCD.c: 267: WriteRegister(0x12, comFlags | 0b01000000);
  4417  001874  5005               	movf	i2LCDWriteByte@comFlags,w,c
  4418  001876  0940               	iorlw	64
  4419  001878  6E01               	movwf	i2WriteRegister@b,c
  4420  00187A  0E12               	movlw	18
  4421  00187C  ECBC  F00C         	call	i2_WriteRegister
  4422                           
  4423                           ;LCD.c: 268: WriteRegister(0x12, comFlags);
  4424  001880  C005  F001         	movff	i2LCDWriteByte@comFlags,i2WriteRegister@b
  4425  001884  0E12               	movlw	18
  4426  001886  ECBC  F00C         	call	i2_WriteRegister
  4427  00188A  0012               	return		;funcret
  4428  00188C                     __end_ofi2_LCDWriteByte:
  4429                           	opt stack 0
  4430                           pclatu	equ	0xFFB
  4431                           pclath	equ	0xFFA
  4432                           tblptru	equ	0xFF8
  4433                           tblptrh	equ	0xFF7
  4434                           tblptrl	equ	0xFF6
  4435                           tablat	equ	0xFF5
  4436                           prodh	equ	0xFF4
  4437                           prodl	equ	0xFF3
  4438                           intcon	equ	0xFF2
  4439                           intcon2	equ	0xFF1
  4440                           postinc0	equ	0xFEE
  4441                           fsr0h	equ	0xFEA
  4442                           fsr0l	equ	0xFE9
  4443                           wreg	equ	0xFE8
  4444                           fsr1h	equ	0xFE2
  4445                           fsr1l	equ	0xFE1
  4446                           indf2	equ	0xFDF
  4447                           postinc2	equ	0xFDE
  4448                           postdec2	equ	0xFDD
  4449                           fsr2h	equ	0xFDA
  4450                           fsr2l	equ	0xFD9
  4451                           status	equ	0xFD8
  4452                           
  4453 ;; *************** function i2_WriteRegister *****************
  4454 ;; Defined at:
  4455 ;;		line 320 in file "LCD.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  reg             1    wreg     unsigned char 
  4458 ;;  b               1    0[COMRAM] unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  reg             1    1[COMRAM] unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;		None               void
  4463 ;; Registers used:
  4464 ;;		wreg, status,2
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4470 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;Total ram usage:        2 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		i2_LCDWriteByte
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text35
  4484  001978                     __ptext35:
  4485                           	opt stack 0
  4486  001978                     i2_WriteRegister:
  4487                           	opt stack 21
  4488                           
  4489                           ;incstack = 0
  4490                           ;i2WriteRegister@reg stored from wreg
  4491  001978  6E02               	movwf	i2WriteRegister@reg,c
  4492                           
  4493                           ;LCD.c: 321: LATAbits.LATA2 = 0;
  4494  00197A  9489               	bcf	3977,2,c	;volatile
  4495                           
  4496                           ;LCD.c: 322: SSPBUF = 0x40;
  4497  00197C  0E40               	movlw	64
  4498  00197E  6EC9               	movwf	4041,c	;volatile
  4499  001980                     i2l291:
  4500  001980  A69E               	btfss	3998,3,c	;volatile
  4501  001982  D7FE               	goto	i2l291
  4502                           
  4503                           ;LCD.c: 324: SSPIF = 0;
  4504  001984  969E               	bcf	3998,3,c	;volatile
  4505                           
  4506                           ;LCD.c: 325: SSPBUF = reg;
  4507  001986  C002  FFC9         	movff	i2WriteRegister@reg,4041	;volatile
  4508  00198A                     i2l294:
  4509  00198A  A69E               	btfss	3998,3,c	;volatile
  4510  00198C  D7FE               	goto	i2l294
  4511                           
  4512                           ;LCD.c: 327: SSPIF = 0;
  4513  00198E  969E               	bcf	3998,3,c	;volatile
  4514                           
  4515                           ;LCD.c: 328: SSPBUF = b;
  4516  001990  C001  FFC9         	movff	i2WriteRegister@b,4041	;volatile
  4517  001994                     i2l297:
  4518  001994  A69E               	btfss	3998,3,c	;volatile
  4519  001996  D7FE               	goto	i2l297
  4520                           
  4521                           ;LCD.c: 330: SSPIF = 0;
  4522  001998  969E               	bcf	3998,3,c	;volatile
  4523                           
  4524                           ;LCD.c: 331: LATAbits.LATA2 = 1;
  4525  00199A  8489               	bsf	3977,2,c	;volatile
  4526  00199C  0012               	return		;funcret
  4527  00199E                     __end_ofi2_WriteRegister:
  4528                           	opt stack 0
  4529                           pclatu	equ	0xFFB
  4530                           pclath	equ	0xFFA
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           prodh	equ	0xFF4
  4536                           prodl	equ	0xFF3
  4537                           intcon	equ	0xFF2
  4538                           intcon2	equ	0xFF1
  4539                           postinc0	equ	0xFEE
  4540                           fsr0h	equ	0xFEA
  4541                           fsr0l	equ	0xFE9
  4542                           wreg	equ	0xFE8
  4543                           fsr1h	equ	0xFE2
  4544                           fsr1l	equ	0xFE1
  4545                           indf2	equ	0xFDF
  4546                           postinc2	equ	0xFDE
  4547                           postdec2	equ	0xFDD
  4548                           fsr2h	equ	0xFDA
  4549                           fsr2l	equ	0xFD9
  4550                           status	equ	0xFD8
  4551                           
  4552 ;; *************** function _I2CWriteByte *****************
  4553 ;; Defined at:
  4554 ;;		line 51 in file "I2CMaster.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  byte            1    wreg     unsigned char 
  4557 ;;  choice          1    0[COMRAM] unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  byte            1    2[COMRAM] unsigned char 
  4560 ;;  data            1    1[COMRAM] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;		None               void
  4563 ;; Registers used:
  4564 ;;		wreg, status,2
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4570 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;Total ram usage:        3 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_HighIsr
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text36
  4584  0018F4                     __ptext36:
  4585                           	opt stack 0
  4586  0018F4                     _I2CWriteByte:
  4587                           	opt stack 24
  4588                           
  4589                           ;incstack = 0
  4590                           ;I2CWriteByte@byte stored from wreg
  4591  0018F4  6E03               	movwf	I2CWriteByte@byte,c
  4592                           
  4593                           ;I2CMaster.c: 52: char data;
  4594                           ;I2CMaster.c: 54: SSP2CON2bits.SEN = 1;
  4595  0018F6  806B               	bsf	3947,0,c	;volatile
  4596  0018F8                     i2l61:
  4597  0018F8  B06B               	btfsc	3947,0,c	;volatile
  4598  0018FA  D7FE               	goto	i2l61
  4599                           
  4600                           ;I2CMaster.c: 56: data = SSP2BUF;
  4601  0018FC  CF6F F002          	movff	3951,I2CWriteByte@data	;volatile
  4602                           
  4603                           ;I2CMaster.c: 57: SSP2BUF = 0xCE;
  4604  001900  0ECE               	movlw	206
  4605  001902  6E6F               	movwf	3951,c	;volatile
  4606  001904                     i2l64:
  4607  001904  A06D               	btfss	3949,0,c	;volatile
  4608  001906  B46D               	btfsc	3949,2,c	;volatile
  4609  001908  D7FD               	goto	i2l64
  4610                           
  4611                           ;I2CMaster.c: 62: SSP2BUF = choice;
  4612  00190A  C001  FF6F         	movff	I2CWriteByte@choice,3951	;volatile
  4613  00190E                     i2l67:
  4614  00190E  A06D               	btfss	3949,0,c	;volatile
  4615  001910  B46D               	btfsc	3949,2,c	;volatile
  4616  001912  D7FD               	goto	i2l67
  4617                           
  4618                           ;I2CMaster.c: 65: SSP2BUF = byte;
  4619  001914  C003  FF6F         	movff	I2CWriteByte@byte,3951	;volatile
  4620  001918                     i2l70:
  4621  001918  A06D               	btfss	3949,0,c	;volatile
  4622  00191A  B46D               	btfsc	3949,2,c	;volatile
  4623  00191C  D7FD               	goto	i2l70
  4624                           
  4625                           ;I2CMaster.c: 71: SSP2CON2bits.PEN = 1;
  4626  00191E  846B               	bsf	3947,2,c	;volatile
  4627  001920                     i2l73:
  4628  001920  A46B               	btfss	3947,2,c	;volatile
  4629  001922  0012               	return	
  4630  001924  D7FD               	goto	i2l73
  4631  001926                     __end_of_I2CWriteByte:
  4632                           	opt stack 0
  4633                           pclatu	equ	0xFFB
  4634                           pclath	equ	0xFFA
  4635                           tblptru	equ	0xFF8
  4636                           tblptrh	equ	0xFF7
  4637                           tblptrl	equ	0xFF6
  4638                           tablat	equ	0xFF5
  4639                           prodh	equ	0xFF4
  4640                           prodl	equ	0xFF3
  4641                           intcon	equ	0xFF2
  4642                           intcon2	equ	0xFF1
  4643                           postinc0	equ	0xFEE
  4644                           fsr0h	equ	0xFEA
  4645                           fsr0l	equ	0xFE9
  4646                           wreg	equ	0xFE8
  4647                           fsr1h	equ	0xFE2
  4648                           fsr1l	equ	0xFE1
  4649                           indf2	equ	0xFDF
  4650                           postinc2	equ	0xFDE
  4651                           postdec2	equ	0xFDD
  4652                           fsr2h	equ	0xFDA
  4653                           fsr2l	equ	0xFD9
  4654                           status	equ	0xFD8
  4655                           
  4656 ;; *************** function _I2CReadByte *****************
  4657 ;; Defined at:
  4658 ;;		line 75 in file "I2CMaster.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  rx              1    0[COMRAM] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      unsigned char 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;Total ram usage:        1 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_HighIsr
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text37
  4686  0015C4                     __ptext37:
  4687                           	opt stack 0
  4688  0015C4                     _I2CReadByte:
  4689                           	opt stack 24
  4690                           
  4691                           ;I2CMaster.c: 76: unsigned char rx;
  4692                           ;I2CMaster.c: 78: SSP2CON2bits.SEN = 1;
  4693                           
  4694                           ;incstack = 0
  4695  0015C4  806B               	bsf	3947,0,c	;volatile
  4696  0015C6                     i2l79:
  4697  0015C6  B06B               	btfsc	3947,0,c	;volatile
  4698  0015C8  D7FE               	goto	i2l79
  4699                           
  4700                           ;I2CMaster.c: 80: rx = SSP2BUF;
  4701  0015CA  CF6F F001          	movff	3951,I2CReadByte@rx	;volatile
  4702                           
  4703                           ;I2CMaster.c: 81: SSP2BUF = 0xCF;
  4704  0015CE  0ECF               	movlw	207
  4705  0015D0  6E6F               	movwf	3951,c	;volatile
  4706  0015D2                     i2l82:
  4707  0015D2  A06D               	btfss	3949,0,c	;volatile
  4708  0015D4  B46D               	btfsc	3949,2,c	;volatile
  4709  0015D6  D7FD               	goto	i2l82
  4710                           
  4711                           ;I2CMaster.c: 85: SSP2CON2bits.RCEN = 1;
  4712  0015D8  866B               	bsf	3947,3,c	;volatile
  4713  0015DA                     i2l85:
  4714  0015DA  A06D               	btfss	3949,0,c	;volatile
  4715  0015DC  D7FE               	goto	i2l85
  4716                           
  4717                           ;I2CMaster.c: 87: rx = SSP2BUF;
  4718  0015DE  CF6F F001          	movff	3951,I2CReadByte@rx	;volatile
  4719                           
  4720                           ;I2CMaster.c: 88: SSP2CON2bits.ACKDT = 0;
  4721  0015E2  9A6B               	bcf	3947,5,c	;volatile
  4722                           
  4723                           ;I2CMaster.c: 89: SSP2CON2bits.ACKEN = 1;
  4724  0015E4  886B               	bsf	3947,4,c	;volatile
  4725  0015E6                     i2l88:
  4726  0015E6  B86B               	btfsc	3947,4,c	;volatile
  4727  0015E8  D7FE               	goto	i2l88
  4728                           
  4729                           ;I2CMaster.c: 92: SSP2CON2bits.RCEN = 1;
  4730  0015EA  866B               	bsf	3947,3,c	;volatile
  4731  0015EC                     i2l91:
  4732  0015EC  A06D               	btfss	3949,0,c	;volatile
  4733  0015EE  D7FE               	goto	i2l91
  4734                           
  4735                           ;I2CMaster.c: 94: rx += SSP2BUF;
  4736  0015F0  506F               	movf	3951,w,c	;volatile
  4737  0015F2  2601               	addwf	I2CReadByte@rx,f,c
  4738                           
  4739                           ;I2CMaster.c: 95: SSP2CON2bits.ACKDT = 0;
  4740  0015F4  9A6B               	bcf	3947,5,c	;volatile
  4741                           
  4742                           ;I2CMaster.c: 96: SSP2CON2bits.ACKEN = 1;
  4743  0015F6  886B               	bsf	3947,4,c	;volatile
  4744  0015F8                     i2l94:
  4745  0015F8  B86B               	btfsc	3947,4,c	;volatile
  4746  0015FA  D7FE               	goto	i2l94
  4747                           
  4748                           ;I2CMaster.c: 99: SSP2CON2bits.RCEN = 1;
  4749  0015FC  866B               	bsf	3947,3,c	;volatile
  4750  0015FE                     i2l97:
  4751  0015FE  A06D               	btfss	3949,0,c	;volatile
  4752  001600  D7FE               	goto	i2l97
  4753                           
  4754                           ;I2CMaster.c: 101: rx += SSP2BUF;
  4755  001602  506F               	movf	3951,w,c	;volatile
  4756  001604  2601               	addwf	I2CReadByte@rx,f,c
  4757                           
  4758                           ;I2CMaster.c: 102: SSP2CON2bits.ACKDT = 0;
  4759  001606  9A6B               	bcf	3947,5,c	;volatile
  4760                           
  4761                           ;I2CMaster.c: 103: SSP2CON2bits.ACKEN = 1;
  4762  001608  886B               	bsf	3947,4,c	;volatile
  4763  00160A                     i2l100:
  4764  00160A  B86B               	btfsc	3947,4,c	;volatile
  4765  00160C  D7FE               	goto	i2l100
  4766                           
  4767                           ;I2CMaster.c: 106: SSP2CON2bits.RCEN = 1;
  4768  00160E  866B               	bsf	3947,3,c	;volatile
  4769  001610                     i2l103:
  4770  001610  A06D               	btfss	3949,0,c	;volatile
  4771  001612  D7FE               	goto	i2l103
  4772                           
  4773                           ;I2CMaster.c: 108: rx += SSP2BUF;
  4774  001614  506F               	movf	3951,w,c	;volatile
  4775  001616  2601               	addwf	I2CReadByte@rx,f,c
  4776                           
  4777                           ;I2CMaster.c: 109: SSP2CON2bits.ACKDT = 1;
  4778  001618  8A6B               	bsf	3947,5,c	;volatile
  4779                           
  4780                           ;I2CMaster.c: 110: SSP2CON2bits.ACKEN = 1;
  4781  00161A  886B               	bsf	3947,4,c	;volatile
  4782  00161C                     i2l106:
  4783  00161C  B86B               	btfsc	3947,4,c	;volatile
  4784  00161E  D7FE               	goto	i2l106
  4785                           
  4786                           ;I2CMaster.c: 114: SSP2CON2bits.PEN = 1;
  4787  001620  846B               	bsf	3947,2,c	;volatile
  4788  001622                     i2l109:
  4789  001622  B46B               	btfsc	3947,2,c	;volatile
  4790  001624  D7FE               	goto	i2l109
  4791                           
  4792                           ;I2CMaster.c: 116: return rx;
  4793  001626  5001               	movf	I2CReadByte@rx,w,c
  4794  001628  0012               	return	
  4795  00162A                     __end_of_I2CReadByte:
  4796                           	opt stack 0
  4797                           pclatu	equ	0xFFB
  4798                           pclath	equ	0xFFA
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           prodh	equ	0xFF4
  4804                           prodl	equ	0xFF3
  4805                           intcon	equ	0xFF2
  4806                           intcon2	equ	0xFF1
  4807                           postinc0	equ	0xFEE
  4808                           fsr0h	equ	0xFEA
  4809                           fsr0l	equ	0xFE9
  4810                           wreg	equ	0xFE8
  4811                           fsr1h	equ	0xFE2
  4812                           fsr1l	equ	0xFE1
  4813                           indf2	equ	0xFDF
  4814                           postinc2	equ	0xFDE
  4815                           postdec2	equ	0xFDD
  4816                           fsr2h	equ	0xFDA
  4817                           fsr2l	equ	0xFD9
  4818                           status	equ	0xFD8
  4819                           pclatu	equ	0xFFB
  4820                           pclath	equ	0xFFA
  4821                           tblptru	equ	0xFF8
  4822                           tblptrh	equ	0xFF7
  4823                           tblptrl	equ	0xFF6
  4824                           tablat	equ	0xFF5
  4825                           prodh	equ	0xFF4
  4826                           prodl	equ	0xFF3
  4827                           intcon	equ	0xFF2
  4828                           intcon2	equ	0xFF1
  4829                           postinc0	equ	0xFEE
  4830                           fsr0h	equ	0xFEA
  4831                           fsr0l	equ	0xFE9
  4832                           wreg	equ	0xFE8
  4833                           fsr1h	equ	0xFE2
  4834                           fsr1l	equ	0xFE1
  4835                           indf2	equ	0xFDF
  4836                           postinc2	equ	0xFDE
  4837                           postdec2	equ	0xFDD
  4838                           fsr2h	equ	0xFDA
  4839                           fsr2l	equ	0xFD9
  4840                           status	equ	0xFD8
  4841                           
  4842                           	psect	rparam
  4843  0000                     pclatu	equ	0xFFB
  4844                           pclath	equ	0xFFA
  4845                           tblptru	equ	0xFF8
  4846                           tblptrh	equ	0xFF7
  4847                           tblptrl	equ	0xFF6
  4848                           tablat	equ	0xFF5
  4849                           prodh	equ	0xFF4
  4850                           prodl	equ	0xFF3
  4851                           intcon	equ	0xFF2
  4852                           intcon2	equ	0xFF1
  4853                           postinc0	equ	0xFEE
  4854                           fsr0h	equ	0xFEA
  4855                           fsr0l	equ	0xFE9
  4856                           wreg	equ	0xFE8
  4857                           fsr1h	equ	0xFE2
  4858                           fsr1l	equ	0xFE1
  4859                           indf2	equ	0xFDF
  4860                           postinc2	equ	0xFDE
  4861                           postdec2	equ	0xFDD
  4862                           fsr2h	equ	0xFDA
  4863                           fsr2l	equ	0xFD9
  4864                           status	equ	0xFD8
  4865                           
  4866                           	psect	temp
  4867  00003F                     btemp:
  4868                           	opt stack 0
  4869  00003F                     	ds	1
  4870  0000                     int$flags	set	btemp
  4871                           pclatu	equ	0xFFB
  4872                           pclath	equ	0xFFA
  4873                           tblptru	equ	0xFF8
  4874                           tblptrh	equ	0xFF7
  4875                           tblptrl	equ	0xFF6
  4876                           tablat	equ	0xFF5
  4877                           prodh	equ	0xFF4
  4878                           prodl	equ	0xFF3
  4879                           intcon	equ	0xFF2
  4880                           intcon2	equ	0xFF1
  4881                           postinc0	equ	0xFEE
  4882                           fsr0h	equ	0xFEA
  4883                           fsr0l	equ	0xFE9
  4884                           wreg	equ	0xFE8
  4885                           fsr1h	equ	0xFE2
  4886                           fsr1l	equ	0xFE1
  4887                           indf2	equ	0xFDF
  4888                           postinc2	equ	0xFDE
  4889                           postdec2	equ	0xFDD
  4890                           fsr2h	equ	0xFDA
  4891                           fsr2l	equ	0xFD9
  4892                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    10
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      62
    BANK0           160     30      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 17
		 -> line2str(COMRAM[17]), line1str(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_sprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    LCDWriteLine@str	PTR const unsigned char  size(2) Largest target is 17
		 -> LCDScroll@str(COMRAM[17]), line2str(COMRAM[17]), line1str(BANK0[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighIsr in COMRAM

    _HighIsr->i2_sprintf
    i2_sprintf->i2___lwmod
    i2___lwmod->i2___lwdiv
    i2_LCDWriteLine->i2_LCDSetPos
    i2_LCDClearLine->i2_LCDSetPos
    i2_LCDWriteData->i2_LCDWriteByte
    i2_LCDSetPos->i2_LCDCommand
    i2_LCDCommand->i2_LCDWriteByte
    i2_LCDWriteByte->i2_WriteRegister

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDWriteLine->_LCDSetPos
    _LCDInit->_LCDInitCommand
    _LCDInitPort->_WriteRegister
    _LCDInitCommand->_LCDWriteByte
    _LCDClearLine->_LCDSetPos
    _LCDWriteData->_LCDWriteByte
    _LCDSetPos->_LCDCommand
    _LCDClear->_LCDCommand
    _LCDCommand->_LCDWriteByte
    _LCDWriteByte->_WriteRegister

Critical Paths under _HighIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   11427
                                             26 BANK0      4     4      0
                   _ConfigInterrupts
                       _ConfigPeriph
                           _InitPins
                           _LCDClear
                       _LCDClearLine
                            _LCDInit
                       _LCDWriteLine
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    1715
                                             12 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _LCDWriteLine                                         4     1      3    3848
                                             13 BANK0      4     1      3
                          _LCDSetPos
                       _LCDWriteData
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              2     2      0    1659
                                              6 BANK0      2     2      0
                     _LCDInitCommand
                        _LCDInitPort
 ---------------------------------------------------------------------------------
 (2) _LCDInitPort                                          0     0      0     601
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (2) _LCDInitCommand                                       1     1      0    1024
                                              5 BANK0      1     1      0
                       _LCDWriteByte
 ---------------------------------------------------------------------------------
 (1) _LCDClearLine                                         2     2      0    3113
                                             13 BANK0      2     2      0
                          _LCDSetPos
                       _LCDWriteData
 ---------------------------------------------------------------------------------
 (2) _LCDWriteData                                         1     1      0    1024
                                              5 BANK0      1     1      0
                       _LCDWriteByte
                         _shortDelay
                               _wait
 ---------------------------------------------------------------------------------
 (2) _LCDSetPos                                            7     3      4    1990
                                              6 BANK0      7     3      4
                         _LCDCommand
                      _calculateBase
 ---------------------------------------------------------------------------------
 (3) _calculateBase                                        2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCDClear                                             0     0      0    1024
                         _LCDCommand
                          _longDelay
 ---------------------------------------------------------------------------------
 (2) _longDelay                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCDCommand                                           1     1      0    1024
                                              5 BANK0      1     1      0
                       _LCDWriteByte
                         _shortDelay
                               _wait
 ---------------------------------------------------------------------------------
 (3) _wait                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _shortDelay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCDWriteByte                                         3     2      1     993
                                              2 BANK0      3     2      1
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (4) _WriteRegister                                        2     1      1     601
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _InitPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPeriph                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighIsr                                             15    15      0    3573
                                             28 COMRAM    15    15      0
                        _I2CReadByte
                       _I2CWriteByte
                     i2_LCDClearLine
                     i2_LCDWriteLine
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (7) i2_sprintf                                           25    17      8     954
                                             12 COMRAM    16     8      8
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (8) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i2_LCDWriteLine                                       4     1      3    1322
                                             13 COMRAM     4     1      3
                        i2_LCDSetPos
                     i2_LCDWriteData
 ---------------------------------------------------------------------------------
 (7) i2_LCDClearLine                                       2     2      0    1137
                                             13 COMRAM     2     2      0
                        i2_LCDSetPos
                     i2_LCDWriteData
 ---------------------------------------------------------------------------------
 (8) i2_LCDWriteData                                       1     1      0     334
                                              5 COMRAM     1     1      0
                     i2_LCDWriteByte
                       i2_shortDelay
                             i2_wait
 ---------------------------------------------------------------------------------
 (8) i2_LCDSetPos                                          7     3      4     735
                                              6 COMRAM     7     3      4
                       i2_LCDCommand
                    i2_calculateBase
 ---------------------------------------------------------------------------------
 (9) i2_calculateBase                                      2     2      0      90
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_LCDCommand                                         1     1      0     334
                                              5 COMRAM     1     1      0
                     i2_LCDWriteByte
                       i2_shortDelay
                             i2_wait
 ---------------------------------------------------------------------------------
 (9) i2_wait                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_shortDelay                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_LCDWriteByte                                       3     2      1     312
                                              2 COMRAM     3     2      1
                    i2_WriteRegister
 ---------------------------------------------------------------------------------
 (10) i2_WriteRegister                                     2     1      1     148
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) _I2CWriteByte                                         3     2      1     109
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (7) _I2CReadByte                                          1     1      0      27
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigInterrupts
   _ConfigPeriph
   _InitPins
   _LCDClear
     _LCDCommand
       _LCDWriteByte
         _WriteRegister
       _shortDelay
       _wait
     _longDelay
   _LCDClearLine
     _LCDSetPos
       _LCDCommand
         _LCDWriteByte
           _WriteRegister
         _shortDelay
         _wait
       _calculateBase
     _LCDWriteData
       _LCDWriteByte
         _WriteRegister
       _shortDelay
       _wait
   _LCDInit
     _LCDInitCommand
       _LCDWriteByte
         _WriteRegister
     _LCDInitPort
       _WriteRegister
   _LCDWriteLine
     _LCDSetPos
       _LCDCommand
         _LCDWriteByte
           _WriteRegister
         _shortDelay
         _wait
       _calculateBase
     _LCDWriteData
       _LCDWriteByte
         _WriteRegister
       _shortDelay
       _wait
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _HighIsr (ROOT)
   _I2CReadByte
   _I2CWriteByte
   i2_LCDClearLine
     i2_LCDSetPos
       i2_LCDCommand
         i2_LCDWriteByte
           i2_WriteRegister
         i2_shortDelay
         i2_wait
       i2_calculateBase
     i2_LCDWriteData
       i2_LCDWriteByte
         i2_WriteRegister
       i2_shortDelay
       i2_wait
   i2_LCDWriteLine
     i2_LCDSetPos
       i2_LCDCommand
         i2_LCDWriteByte
           i2_WriteRegister
         i2_shortDelay
         i2_wait
       i2_calculateBase
     i2_LCDWriteData
       i2_LCDWriteByte
         i2_WriteRegister
       i2_shortDelay
       i2_wait
   i2_sprintf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      30       5       30.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      3E       1       66.0%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6E      12        0.0%
DATA                 0      0      6E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Feb 22 18:40:12 2017

             ?_LCDInitPort 0001                _SSPSTATbits 000FC7                         _rx 002C  
       i2___lwdiv@dividend 0001       __size_of_I2CReadByte 0066                        l210 15C2  
                      l291 195A                        l294 1964                        l297 196E  
                      l731 1554                        l741 1682              LCDClearLine@c 006D  
         ??i2_LCDClearLine 000E         i2LCDWriteLine@line 0010            ?_LCDInitCommand 0001  
                      wreg 000FE8             ??_LCDClearLine 006D            __end_of_LCDInit 16EC  
                     l2306 193C                       l2308 194A                       l2500 13BE  
                     l2342 1580                       l2510 13FA                       l2502 13D6  
                     l2430 104A                       l2344 1596                       l2520 1446  
                     l2424 102C                       l2514 141A                       l2354 1504  
                     l2516 1432                       l2356 1510                       l2460 10F0  
                     l2436 107E                       l2286 1758                       l2518 1440  
                     l2366 1546                       l2358 1516                       l2382 1674  
                     l2374 163E                       l2446 10AE                       l2376 164A  
                     l2448 10B4                       l2490 183C                       l2378 1650  
                     l2474 1178                       l2466 1110                       l2570 139E  
                     l2468 1116                       l2476 1184                       l2572 13AE  
                     l2494 1846                       l2478 11A4                       l2566 137C  
                     l2558 132A                       l2488 1824                       STR_1 1019  
                     STR_2 100B                       _LATD 000F8C                       u2507 16E4  
                     u2517 1A72                       u2527 1AA6                       u2467 169E  
                     u2477 16B0                       u2487 16BE                       u2497 16D2  
                     i2l61 18F8                       i2l70 1918                       i2l64 1904  
                     i2l73 1920                       i2l82 15D2                       i2l91 15EC  
                     i2l67 190E                       i2l85 15DA                       i2l94 15F8  
                     i2l79 15C6                       i2l88 15E6                       i2l97 15FE  
     __end_ofi2_shortDelay 1AB8                       _main 130E                       _wait 1AB8  
                     fsr0h 000FEA                       fsr1h 000FE2         i2___lwdiv@quotient 0005  
                     fsr0l 000FE9                       fsr2h 000FDA                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9                       btemp 003F  
                     pclat 000FFA         __size_of_LCDSetPos 0066                       prodh 000FF4  
                     prodl 000FF3                       start 00D2            __end_of_HighIsr 00D2  
             ___param_bank 000010           __end_of_LCDClear 1A98              ?_LCDWriteData 0001  
            ?_LCDWriteByte 0062              ?_LCDWriteLine 006D                      ?_main 0001  
                    ?_wait 0001            __end_of___lwdiv 155E                      i2l100 160A  
                    i2l103 1610            __end_of___lwmod 168C                      i2l106 161C  
                    i2l210 17CC                      i2l109 1622                      i2l125 0096  
                    i2l291 1980                      i2l294 198A                      i2l297 1994  
                    i2l731 1734                      i2l741 1806                      _TRISB 000F93  
                    _TRISD 000F95                      _SSPIF 007CF3     __size_of_WriteRegister 0028  
    __size_of_I2CWriteByte 0032        __size_of_LCDCommand 001C               ?i2_LCDSetPos 0007  
          __end_of_dpowers 100B                      _count 007E                      main@i 007A  
                    tablat 000FF5                      status 000FD8            __end_of_sprintf 11B2  
         ?i2_calculateBase 0001         __size_ofi2___lwdiv 0052         __size_ofi2___lwmod 0042  
         ??i2_LCDWriteData 0006            __initialization 199E           ??i2_LCDWriteByte 0004  
         ??i2_LCDWriteLine 0011       __end_of_ConfigPeriph 1A8C               LCDSetPos@col 0068  
             LCDSetPos@pos 006B               LCDSetPos@row 0066               __end_of_main 13B4  
             __end_of_wait 1ABA             ??_LCDWriteData 0065             ??_LCDWriteByte 0063  
           ??_LCDWriteLine 0070           __end_of_InitPins 1A6A               _I2CWriteByte 18F4  
                   ??_main 007A           i2WriteRegister@b 0001                     ??_wait 0060  
            __activetblptr 000003                 i2sprintf@c 001C                 i2sprintf@f 000F  
        __end_of_LCDSetPos 15C4                  ??_LCDInit 0066         __size_ofi2_sprintf 015C  
 __end_of_ConfigInterrupts 1AA4                     i2l2020 145E                     i2l2100 127E  
                   i2l2030 1490                     i2l2022 1472                     i2l2102 1284  
                   i2l2110 12E4                     i2l2040 14D6                     i2l2112 1300  
                   i2l2050 18E4                     i2l2034 14B0                     i2l2036 14C4  
                   i2l2108 12DC                     i2l2054 18EC                     i2l2038 14D2  
                   i2l2070 1204                     i2l2048 18D0                     i2l2080 122C  
                   i2l2064 11D6                     i2l2082 1230                     i2l2058 11BC  
                   i2l2094 1262                     i2l1810 17E8                     i2l1814 17FC  
                   i2l1806 17DC             __CFG_WDTEN$OFF 000000                     i2l1648 1860  
                   i2l1808 17E4                     i2l1682 19D0                     i2l1770 17B0  
                   i2l1684 19DA                     i2l1790 170E                     i2l1768 17A0  
                   i2l1786 1702                     i2l1788 170A                     i2l1798 172A  
                ??_HighIsr 001D                     _SSPBUF 000FC9                     i2_wait 1ABA  
            _WriteRegister 1950             __CFG_XINST$OFF 000000              ?i2_LCDCommand 0001  
     __end_of_LCDClearLine 1850                  ??___lwdiv 0064                  ??___lwmod 006B  
                   clear_0 19A4                     clear_1 19B0       __size_of_LCDInitPort 0036  
         LCDClearLine@line 006E   __size_ofi2_WriteRegister 0026                     _toggle 002D  
        __end_ofi2___lwdiv 173E               __mediumconst 0000          __end_ofi2___lwmod 1810  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
    __size_ofi2_shortDelay 000A                  ??_sprintf 0072            __CFG_FOSC$HSPLL 000000  
                ?_LCDClear 0001                 __accesstop 0060    __end_of__initialization 19B6  
            i2sprintf@flag 0018             ?_WriteRegister 0060              ___rparam_used 000001  
            i2sprintf@prec 0019          __end_ofi2_sprintf 130E             ??i2_LCDCommand 0006  
             ??_LCDCommand 0065           WriteRegister@reg 0061         i2___lwmod@dividend 0008  
           __pcstackCOMRAM 0001           ??_LCDInitCommand 0065               i2_shortDelay 1AAE  
       __end_of_LCDCommand 1A16       __end_of_LCDWriteData 19FA                 __pbssBANK0 007E  
     __end_of_LCDWriteByte 1788       __end_of_LCDWriteLine 1456                i2sprintf@ap 0016  
     __size_ofi2_LCDSetPos 0046                i2sprintf@sp 000D                 ??_LCDClear 0066  
           WriteRegister@b 0060                  ?_InitPins 0001      __size_of_ConfigPeriph 0010  
                  ?i2_wait 0001         __size_of_longDelay 0012      LCDInitCommand@command 0065  
            ??_I2CReadByte 0001             i2LCDSetPos@col 0009             i2LCDSetPos@pos 000C  
           i2LCDSetPos@row 0007     __size_of_calculateBase 002A                    _LCDInit 168C  
        ??i2_WriteRegister 0002                    _SSP2ADD 000F6E                    _SSP2BUF 000F6F  
             _ConfigPeriph 1A7C                    _SSPCON1 000FC6            ??_WriteRegister 0061  
               ??_InitPins 0060         LCDInit@functionSet 0067                    _HighIsr 0008  
    __size_of_LCDClearLine 0040        i2LCDCommand@command 0006     i2LCDWriteByte@comFlags 0005  
          __size_ofi2_wait 0002                    __Hparam 0000                    __Lparam 0000  
                  ___lwdiv 14E6                    ___lwmod 162A               __psmallconst 1000  
                  __pcinit 199E                    __ramtop 1000                    __ptext0 130E  
                  __ptext1 101E                    __ptext2 162A                    __ptext3 14E6  
                  __ptext4 13B4                    __ptext5 168C                    __ptext6 188C  
                  __ptext7 1A42                    __ptext8 1810                    __ptext9 19DE  
      __end_of_I2CReadByte 162A                    _dpowers 1001       __end_ofi2_LCDCommand 1A42  
        __end_of_longDelay 1A7C          ?_ConfigInterrupts 0001                  _LCDSetPos 155E  
             _LCDClearLine 1810                    _sprintf 101E       end_of_initialization 19B6  
       ??_ConfigInterrupts 0060            i2LCDClearLine@c 000F    __size_ofi2_LCDClearLine 0032  
            LCDWriteData@c 0065              _calculateBase 1926              LCDWriteByte@c 0063  
                  postdec2 000FDD                    postinc0 000FEE                    postinc2 000FDE  
                HighIsr@rx 002B   __size_ofi2_calculateBase 001E                 _shortDelay 1AA4  
    __size_of_LCDWriteData 001C      __size_of_LCDWriteByte 004A      __size_of_LCDWriteLine 00A2  
                _TRISAbits 000F92                  _TRISCbits 000F94                 ?_LCDSetPos 0066  
        i2___lwdiv@divisor 0003                  i2___lwdiv 16EC                  i2___lwmod 17CE  
        i2___lwdiv@counter 0007          i2LCDWriteLine@str 000E             ?_calculateBase 0001  
        __size_of_LCDClear 000C             __end_ofi2_wait 1ABC              ??_LCDInitPort 0062  
              _I2CReadByte 15C4                  i2_sprintf 11B2               _LCDWriteData 19DE  
             _LCDWriteByte 173E               _LCDWriteLine 13B4    __size_ofi2_LCDWriteData 0016  
  __size_ofi2_LCDWriteByte 003C    __size_ofi2_LCDWriteLine 0090        start_initialization 199E  
       i2LCDClearLine@line 000E        i2calculateBase@base 0001        i2calculateBase@line 0002  
               ?i2___lwdiv 0001                 ?i2___lwmod 0008                   ??i2_wait 0001  
        __size_of_InitPins 0014              I2CReadByte@rx 0001                 ?i2_sprintf 000D  
          i2_WriteRegister 1978         i2WriteRegister@reg 0002                ?_shortDelay 0001  
    __size_ofi2_LCDCommand 0016        __end_of_LCDInitPort 18C2                   ?_LCDInit 0001  
              __pbssCOMRAM 002C               i2sprintf@val 001A          ??i2_calculateBase 0001  
            __pcstackBANK0 0060          i2___lwmod@divisor 000A              ??i2_LCDSetPos 000B  
              ??_LCDSetPos 006A          i2___lwmod@counter 000C            ??_calculateBase 0060  
           i2_LCDClearLine 18C2                sprintf@flag 0075                   ?_HighIsr 0001  
              sprintf@prec 0076           ___lwdiv@dividend 0060               i2_LCDCommand 1A2C  
                __pintcode 0008                   ?___lwdiv 0060                   ?___lwmod 0067  
         LCDWriteLine@line 006F              ?_I2CWriteByte 0001                __smallconst 1000  
        LCDCommand@command 0065           ___lwdiv@quotient 0065    __size_of_LCDInitCommand 0014  
                 ?_sprintf 006C     __end_ofi2_LCDClearLine 18F4                ??i2___lwdiv 0005  
              ??i2___lwmod 000C                  _longDelay 1A6A                   _LCDClear 1A8C  
                 _LATAbits 000F89        __end_ofi2_LCDSetPos 17CE        __size_of_shortDelay 000A  
    __end_of_WriteRegister 1978    __end_ofi2_WriteRegister 199E                   i2u253_47 1AB0  
__size_of_ConfigInterrupts 000C                   _RCONbits 000FD0                _LCDInitPort 188C  
              ??i2_sprintf 0015             ??_I2CWriteByte 0002             i2_LCDWriteData 1A16  
         i2LCDWriteByte@rs 0003             i2_LCDWriteByte 1850             i2_LCDWriteLine 1456  
         __size_of_LCDInit 0060                _INTCON2bits 000FF1            ?i2_LCDClearLine 0001  
               ?_longDelay 0001         I2CWriteByte@choice 0001                   _InitPins 1A56  
         __size_of_HighIsr 00CA                   __Hrparam 0000       LCDWriteByte@comFlags 0064  
                 __Lrparam 0000               ?_I2CReadByte 0001     __end_ofi2_LCDWriteData 1A2C  
         __size_of___lwdiv 0078           __size_of___lwmod 0062     __end_ofi2_LCDWriteByte 188C  
   __end_ofi2_LCDWriteLine 14E6              ?i2_shortDelay 0001                 sprintf@val 0077  
          ___lwdiv@divisor 0062            ___lwdiv@counter 0064                   __ptext10 155E  
                 __ptext11 1926                   __ptext20 1A7C                   __ptext12 1A8C  
                 __ptext21 1A98                   __ptext13 1A6A                   __ptext30 19C0  
                 __ptext14 19FA                   __ptext31 1A2C                   __ptext23 11B2  
                 __ptext15 1AB8                   __ptext32 1ABA                   __ptext24 17CE  
                 __ptext16 1AA4                   __ptext33 1AAE                   __ptext25 16EC  
                 __ptext17 173E                   __ptext34 1850                   __ptext26 1456  
                 __ptext18 1950                   __ptext35 1978                   __ptext27 18C2  
                 __ptext19 1A56                   __ptext36 18F4                   __ptext28 1A16  
                 __ptext37 15C4                   __ptext29 1788                i2_LCDSetPos 1788  
          LCDWriteLine@str 006D               _SSP2CON1bits 000F6C               _SSP2CON2bits 000F6B  
         __size_of_sprintf 0194                   _line1str 007F                   _line2str 002E  
            __size_of_main 00A6              __size_of_wait 0002           ?i2_WriteRegister 0001  
               _LCDCommand 19FA          calculateBase@base 0060          calculateBase@line 0061  
          i2LCDWriteData@c 0006                   int$flags 003F            i2_calculateBase 19C0  
          i2LCDWriteByte@c 0004             ??i2_shortDelay 0001            ?i2_LCDWriteData 0001  
             ??_shortDelay 0060            ?i2_LCDWriteByte 0003            ?i2_LCDWriteLine 000E  
             _SSP2STATbits 000F6D                _OSCTUNEbits 000F9B                 _INTCONbits 000FF2  
            ?_ConfigPeriph 0001             _LCDInitCommand 1A42                ??_longDelay 0060  
                 intlevel2 0000                  sprintf@ap 0073                  sprintf@sp 006C  
     __end_of_I2CWriteByte 1926           ___lwmod@dividend 0067             LCDWriteByte@rs 0062  
       __end_of_shortDelay 1AAE           _ConfigInterrupts 1A98           I2CWriteByte@data 0002  
         I2CWriteByte@byte 0003                   sprintf@c 0079                   sprintf@f 006E  
          ___lwmod@divisor 0069     __end_of_LCDInitCommand 1A56            ___lwmod@counter 006B  
           ??_ConfigPeriph 0060              ?_LCDClearLine 0001      __end_of_calculateBase 1950  
  __end_ofi2_calculateBase 19DE                ?_LCDCommand 0001  
