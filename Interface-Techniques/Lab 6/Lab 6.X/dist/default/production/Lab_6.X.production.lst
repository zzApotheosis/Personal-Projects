

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Apr 10 18:19:15 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	dabs	1,0xD00,32,_BDT
    73  0000                     
    74                           	psect	smallconst
    75  000F00                     __psmallconst:
    76                           	opt stack 0
    77  000F00  00                 	db	0
    78  000F01                     _USB_SD_Ptr:
    79                           	opt stack 0
    80  000F01  BD                 	db	low _sd000
    81  000F02  0F                 	db	high _sd000
    82  000F03  09                 	db	low _sd001
    83  000F04  0F                 	db	high _sd001
    84  000F05  91                 	db	low _sd002
    85  000F06  0F                 	db	high _sd002
    86  000F07                     __end_of_USB_SD_Ptr:
    87                           	opt stack 0
    88  000F07                     _USB_CD_Ptr:
    89                           	opt stack 0
    90  000F07  6F                 	db	low _configDescriptor1
    91  000F08  0F                 	db	high _configDescriptor1
    92  000F09                     __end_of_USB_CD_Ptr:
    93                           	opt stack 0
    94  000F09                     _sd001:
    95                           	opt stack 0
    96  000F09  34                 	db	52
    97  000F0A  03                 	db	3
    98  000F0B  004D               	dw	77
    99  000F0D  0069               	dw	105
   100  000F0F  0063               	dw	99
   101  000F11  0072               	dw	114
   102  000F13  006F               	dw	111
   103  000F15  0063               	dw	99
   104  000F17  0068               	dw	104
   105  000F19  0069               	dw	105
   106  000F1B  0070               	dw	112
   107  000F1D  0020               	dw	32
   108  000F1F  0054               	dw	84
   109  000F21  0065               	dw	101
   110  000F23  0063               	dw	99
   111  000F25  0068               	dw	104
   112  000F27  006E               	dw	110
   113  000F29  006F               	dw	111
   114  000F2B  006C               	dw	108
   115  000F2D  006F               	dw	111
   116  000F2F  0067               	dw	103
   117  000F31  0079               	dw	121
   118  000F33  0020               	dw	32
   119  000F35  0049               	dw	73
   120  000F37  006E               	dw	110
   121  000F39  0063               	dw	99
   122  000F3B  002E               	dw	46
   123  000F3D                     __end_of_sd001:
   124                           	opt stack 0
   125  000F3D                     _hid_rpt01:
   126                           	opt stack 0
   127  000F3D  05                 	db	5
   128  000F3E  01                 	db	1
   129  000F3F  09                 	db	9
   130  000F40  02                 	db	2
   131  000F41  A1                 	db	161
   132  000F42  01                 	db	1
   133  000F43  09                 	db	9
   134  000F44  01                 	db	1
   135  000F45  A1                 	db	161
   136  000F46  00                 	db	0
   137  000F47  05                 	db	5
   138  000F48  09                 	db	9
   139  000F49  19                 	db	25
   140  000F4A  01                 	db	1
   141  000F4B  29                 	db	41
   142  000F4C  03                 	db	3
   143  000F4D  15                 	db	21
   144  000F4E  00                 	db	0
   145  000F4F  25                 	db	37
   146  000F50  01                 	db	1
   147  000F51  95                 	db	149
   148  000F52  03                 	db	3
   149  000F53  75                 	db	117
   150  000F54  01                 	db	1
   151  000F55  81                 	db	129
   152  000F56  02                 	db	2
   153  000F57  95                 	db	149
   154  000F58  01                 	db	1
   155  000F59  75                 	db	117
   156  000F5A  05                 	db	5
   157  000F5B  81                 	db	129
   158  000F5C  01                 	db	1
   159  000F5D  05                 	db	5
   160  000F5E  01                 	db	1
   161  000F5F  09                 	db	9
   162  000F60  30                 	db	48
   163  000F61  09                 	db	9
   164  000F62  31                 	db	49
   165  000F63  15                 	db	21
   166  000F64  81                 	db	129
   167  000F65  25                 	db	37
   168  000F66  7F                 	db	127
   169  000F67  75                 	db	117
   170  000F68  08                 	db	8
   171  000F69  95                 	db	149
   172  000F6A  02                 	db	2
   173  000F6B  81                 	db	129
   174  000F6C  06                 	db	6
   175  000F6D  C0                 	db	192
   176  000F6E  C0                 	db	192
   177  000F6F                     __end_of_hid_rpt01:
   178                           	opt stack 0
   179  000F6F                     _configDescriptor1:
   180                           	opt stack 0
   181  000F6F  09                 	db	9
   182  000F70  02                 	db	2
   183  000F71  22                 	db	34
   184  000F72  00                 	db	0
   185  000F73  01                 	db	1
   186  000F74  01                 	db	1
   187  000F75  00                 	db	0
   188  000F76  C0                 	db	192
   189  000F77  32                 	db	50
   190  000F78  09                 	db	9
   191  000F79  04                 	db	4
   192  000F7A  00                 	db	0
   193  000F7B  00                 	db	0
   194  000F7C  01                 	db	1
   195  000F7D  03                 	db	3
   196  000F7E  01                 	db	1
   197  000F7F  02                 	db	2
   198  000F80  00                 	db	0
   199  000F81  09                 	db	9
   200  000F82  21                 	db	33
   201  000F83  11                 	db	17
   202  000F84  01                 	db	1
   203  000F85  00                 	db	0
   204  000F86  01                 	db	1
   205  000F87  22                 	db	34
   206  000F88  32                 	db	50
   207  000F89  00                 	db	0
   208  000F8A  07                 	db	7
   209  000F8B  05                 	db	5
   210  000F8C  81                 	db	129
   211  000F8D  03                 	db	3
   212  000F8E  03                 	db	3
   213  000F8F  00                 	db	0
   214  000F90  01                 	db	1
   215  000F91                     __end_of_configDescriptor1:
   216                           	opt stack 0
   217  000F91                     _sd002:
   218                           	opt stack 0
   219  000F91  1A                 	db	26
   220  000F92  03                 	db	3
   221  000F93  0049               	dw	73
   222  000F95  0020               	dw	32
   223  000F97  0041               	dw	65
   224  000F99  004D               	dw	77
   225  000F9B  0020               	dw	32
   226  000F9D  0054               	dw	84
   227  000F9F  0057               	dw	87
   228  000FA1  004F               	dw	79
   229  000FA3  0047               	dw	71
   230  000FA5  004F               	dw	79
   231  000FA7  004F               	dw	79
   232  000FA9  0044               	dw	68
   233  000FAB                     __end_of_sd002:
   234                           	opt stack 0
   235  000FAB                     _device_dsc:
   236                           	opt stack 0
   237  000FAB  12                 	db	18
   238  000FAC  01                 	db	1
   239  000FAD  0200               	dw	512
   240  000FAF  00                 	db	0
   241  000FB0  00                 	db	0
   242  000FB1  00                 	db	0
   243  000FB2  08                 	db	8
   244  000FB3  04D8               	dw	1240
   245  000FB5  0000               	dw	0
   246  000FB7  0003               	dw	3
   247  000FB9  01                 	db	1
   248  000FBA  02                 	db	2
   249  000FBB  00                 	db	0
   250  000FBC  01                 	db	1
   251  000FBD                     __end_of_device_dsc:
   252                           	opt stack 0
   253  000FBD                     _sd000:
   254                           	opt stack 0
   255  000FBD  04                 	db	4
   256  000FBE  03                 	db	3
   257  000FBF  0409               	dw	1033
   258  000FC1                     __end_of_sd000:
   259                           	opt stack 0
   260  0000                     _PPSCONbits	set	3775
   261  0000                     _RPOR2	set	3778
   262  0000                     _RPOR4	set	3780
   263  0000                     _ANCON0	set	3912
   264  0000                     _ANCON0bits	set	3912
   265  0000                     _ANCON1	set	3913
   266  0000                     _UADDR	set	3896
   267  0000                     _UCFG	set	3897
   268  0000                     _UEIE	set	3895
   269  0000                     _UEP0bits	set	3878
   270  0000                     _UIE	set	3894
   271  0000                     _UIEbits	set	3894
   272  0000                     _UEP0	set	3878
   273  0000                     _UEP1	set	3879
   274  0000                     _ADRES	set	4035
   275  0000                     _ADCON0	set	4034
   276  0000                     _ADCON0bits	set	4034
   277  0000                     _ADCON1	set	4033
   278  0000                     _EECON2	set	4007
   279  0000                     _INTCONbits	set	4082
   280  0000                     _IPR2bits	set	4002
   281  0000                     _LATAbits	set	3977
   282  0000                     _LATBbits	set	3978
   283  0000                     _LATE	set	3981
   284  0000                     _LATEbits	set	3981
   285  0000                     _OSCCONbits	set	4051
   286  0000                     _OSCTUNEbits	set	3995
   287  0000                     _PIE2bits	set	4000
   288  0000                     _PIR2bits	set	4001
   289  0000                     _PORTAbits	set	3968
   290  0000                     _PORTBbits	set	3969
   291  0000                     _RCONbits	set	4048
   292  0000                     _SSP2BUF	set	3957
   293  0000                     _SSP2CON1	set	3954
   294  0000                     _SSP2STATbits	set	3955
   295  0000                     _TRISAbits	set	3986
   296  0000                     _TRISBbits	set	3987
   297  0000                     _TRISCbits	set	3988
   298  0000                     _TRISE	set	3990
   299  0000                     _UCON	set	3941
   300  0000                     _UCONbits	set	3941
   301  0000                     _UEIR	set	3939
   302  0000                     _UIR	set	3938
   303  0000                     _UIRbits	set	3938
   304  0000                     _USTAT	set	3940
   305  0000                     _GODONE	set	32273
   306  0000                     _SSP2IF	set	32039
   307  000FC1                     STR_1:
   308  000FC1  55                 	db	85	;'U'
   309  000FC2  53                 	db	83	;'S'
   310  000FC3  42                 	db	66	;'B'
   311  000FC4  20                 	db	32
   312  000FC5  4D                 	db	77	;'M'
   313  000FC6  6F                 	db	111	;'o'
   314  000FC7  75                 	db	117	;'u'
   315  000FC8  73                 	db	115	;'s'
   316  000FC9  65                 	db	101	;'e'
   317  000FCA  20                 	db	32
   318  000FCB  44                 	db	68	;'D'
   319  000FCC  65                 	db	101	;'e'
   320  000FCD  6D                 	db	109	;'m'
   321  000FCE  6F                 	db	111	;'o'
   322  000FCF  00                 	db	0
   323                           
   324                           ; #config settings
   325  000FD0  00                 	db	0	; dummy byte at the end
   326  0000                     
   327                           	psect	cinit
   328  002BEA                     __pcinit:
   329                           	opt stack 0
   330  002BEA                     start_initialization:
   331                           	opt stack 0
   332  002BEA                     __initialization:
   333                           	opt stack 0
   334                           
   335                           ; Clear objects allocated to BANK0 (55 bytes)
   336  002BEA  EE00  F060         	lfsr	0,__pbssBANK0
   337  002BEE  0E37               	movlw	55
   338  002BF0                     clear_0:
   339  002BF0  6AEE               	clrf	postinc0,c
   340  002BF2  06E8               	decf	wreg,f,c
   341  002BF4  E1FD               	bnz	clear_0
   342                           
   343                           ; Clear objects allocated to COMRAM (28 bytes)
   344  002BF6  EE00  F030         	lfsr	0,__pbssCOMRAM
   345  002BFA  0E1C               	movlw	28
   346  002BFC                     clear_1:
   347  002BFC  6AEE               	clrf	postinc0,c
   348  002BFE  06E8               	decf	wreg,f,c
   349  002C00  E1FD               	bnz	clear_1
   350  002C02                     end_of_initialization:
   351                           	opt stack 0
   352  002C02                     __end_of__initialization:
   353                           	opt stack 0
   354  002C02  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   355  002C04  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   356  002C06  0100               	movlb	0
   357  002C08  EFE3  F015         	goto	_main	;jump to C main() function
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           
   361                           	psect	bssCOMRAM
   362  000030                     __pbssCOMRAM:
   363                           	opt stack 0
   364  000030                     BlinkUSBStatus@led_count:
   365                           	opt stack 0
   366  000030                     	ds	2
   367  000032                     USBCBSendResume@delay_count:
   368                           	opt stack 0
   369  000032                     	ds	2
   370  000034                     _pBDTEntryEP0OutCurrent:
   371                           	opt stack 0
   372  000034                     	ds	2
   373  000036                     _pBDTEntryEP0OutNext:
   374                           	opt stack 0
   375  000036                     	ds	2
   376  000038                     _pDst:
   377                           	opt stack 0
   378  000038                     	ds	2
   379  00003A                     _BothEP0OutUOWNsSet:
   380                           	opt stack 0
   381  00003A                     	ds	1
   382  00003B                     _RemoteWakeup:
   383                           	opt stack 0
   384  00003B                     	ds	1
   385  00003C                     _USBDeferINDataStagePackets:
   386                           	opt stack 0
   387  00003C                     	ds	1
   388  00003D                     _USBDeferOUTDataStagePackets:
   389                           	opt stack 0
   390  00003D                     	ds	1
   391  00003E                     _USBDeferStatusStagePacket:
   392                           	opt stack 0
   393  00003E                     	ds	1
   394  00003F                     _USBStatusStageEnabledFlag1:
   395                           	opt stack 0
   396  00003F                     	ds	1
   397  000040                     _USBStatusStageEnabledFlag2:
   398                           	opt stack 0
   399  000040                     	ds	1
   400  000041                     _USBStatusStageTimeoutCounter:
   401                           	opt stack 0
   402  000041                     	ds	1
   403  000042                     _controlTransferState:
   404                           	opt stack 0
   405  000042                     	ds	1
   406  000043                     _endpoint_number:
   407                           	opt stack 0
   408  000043                     	ds	1
   409  000044                     _old_sw2:
   410                           	opt stack 0
   411  000044                     	ds	1
   412  000045                     _old_sw3:
   413                           	opt stack 0
   414  000045                     	ds	1
   415  000046                     _shortPacketStatus:
   416                           	opt stack 0
   417  000046                     	ds	1
   418  000047                     _USBActiveConfiguration:
   419                           	opt stack 0
   420  000047                     	ds	1
   421  000048                     _USBAlternateInterface:
   422                           	opt stack 0
   423  000048                     	ds	1
   424  000049                     _USTATcopy:
   425                           	opt stack 0
   426  000049                     	ds	1
   427  00004A                     _active_protocol:
   428                           	opt stack 0
   429  00004A                     	ds	1
   430  00004B                     _idle_rate:
   431                           	opt stack 0
   432  00004B                     	ds	1
   433                           postinc0	equ	0xFEE
   434                           wreg	equ	0xFE8
   435                           
   436                           	psect	bssBANK0
   437  000060                     __pbssBANK0:
   438                           	opt stack 0
   439  000060                     _outPipes:
   440                           	opt stack 0
   441  000060                     	ds	9
   442  000069                     _inPipes:
   443                           	opt stack 0
   444  000069                     	ds	6
   445  00006F                     _pBDTEntryIn:
   446                           	opt stack 0
   447  00006F                     	ds	4
   448  000073                     _pBDTEntryOut:
   449                           	opt stack 0
   450  000073                     	ds	4
   451  000077                     _buffer:
   452                           	opt stack 0
   453  000077                     	ds	3
   454  00007A                     _ep_data_in:
   455                           	opt stack 0
   456  00007A                     	ds	2
   457  00007C                     _ep_data_out:
   458                           	opt stack 0
   459  00007C                     	ds	2
   460  00007E                     _lastTransmission:
   461                           	opt stack 0
   462  00007E                     	ds	2
   463  000080                     _state:
   464                           	opt stack 0
   465  000080                     	ds	2
   466  000082                     _USBBusIsSuspended:
   467                           	opt stack 0
   468  000082                     	ds	1
   469  000083                     _USBDeviceState:
   470                           	opt stack 0
   471  000083                     	ds	1
   472  000084                     _CtrlTrfData:
   473                           	opt stack 0
   474  000084                     	ds	8
   475  00008C                     _SetupPkt:
   476                           	opt stack 0
   477  00008C                     	ds	8
   478  000094                     _hid_report_in:
   479                           	opt stack 0
   480  000094                     	ds	3
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           
   484                           	psect	cstackBANK0
   485  000097                     __pcstackBANK0:
   486                           	opt stack 0
   487  000097                     ??_YourHighPriorityISRCode:
   488                           
   489                           ; 0 bytes @ 0x0
   490  000097                     	ds	14
   491  0000A5                     ??_BlinkUSBStatus:
   492  0000A5                     ?_ReadPot:
   493                           	opt stack 0
   494  0000A5                     ?_USBTransferOnePacket:
   495                           	opt stack 0
   496  0000A5                     calculateBase@base:
   497                           	opt stack 0
   498  0000A5                     WriteRegister@b:
   499                           	opt stack 0
   500  0000A5                     USBTransferOnePacket@dir:
   501                           	opt stack 0
   502  0000A5                     memset@p1:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0xE
   506  0000A5                     	ds	1
   507  0000A6                     calculateBase@line:
   508                           	opt stack 0
   509  0000A6                     WriteRegister@reg:
   510                           	opt stack 0
   511  0000A6                     USBTransferOnePacket@data:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0xF
   515  0000A6                     	ds	1
   516  0000A7                     ?___awdiv:
   517                           	opt stack 0
   518  0000A7                     LCDWriteByte@rs:
   519                           	opt stack 0
   520  0000A7                     ___awdiv@dividend:
   521                           	opt stack 0
   522  0000A7                     memset@c:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x10
   526  0000A7                     	ds	1
   527  0000A8                     LCDWriteByte@c:
   528                           	opt stack 0
   529  0000A8                     USBTransferOnePacket@len:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x11
   533  0000A8                     	ds	1
   534  0000A9                     LCDWriteByte@comFlags:
   535                           	opt stack 0
   536  0000A9                     USBTransferOnePacket@ep:
   537                           	opt stack 0
   538  0000A9                     ___awdiv@divisor:
   539                           	opt stack 0
   540  0000A9                     memset@n:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x12
   544  0000A9                     	ds	1
   545  0000AA                     LCDCommand@command:
   546                           	opt stack 0
   547  0000AA                     LCDInitCommand@command:
   548                           	opt stack 0
   549  0000AA                     LCDWriteData@c:
   550                           	opt stack 0
   551  0000AA                     USBTransferOnePacket@handle:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x13
   555  0000AA                     	ds	1
   556  0000AB                     ??_LCDInit:
   557  0000AB                     ___awdiv@counter:
   558                           	opt stack 0
   559  0000AB                     LCDSetPos@row:
   560                           	opt stack 0
   561  0000AB                     memset@p:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x14
   565  0000AB                     	ds	1
   566  0000AC                     LCDInit@functionSet:
   567                           	opt stack 0
   568  0000AC                     ___awdiv@sign:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x15
   572  0000AC                     	ds	1
   573  0000AD                     USBDeviceInit@i:
   574                           	opt stack 0
   575  0000AD                     LCDSetPos@col:
   576                           	opt stack 0
   577  0000AD                     ___awdiv@quotient:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x16
   581  0000AD                     	ds	1
   582  0000AE                     InitializeSystem@pll_startup_counter:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x17
   586  0000AE                     	ds	1
   587  0000AF                     ??_LCDSetPos:
   588  0000AF                     ??_Emulate_Mouse:
   589                           
   590                           ; 0 bytes @ 0x18
   591  0000AF                     	ds	1
   592  0000B0                     LCDSetPos@pos:
   593                           	opt stack 0
   594  0000B0                     _Emulate_Mouse$1481:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x19
   598  0000B0                     	ds	2
   599  0000B2                     LCDWriteLine@str:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x1B
   603  0000B2                     	ds	2
   604  0000B4                     LCDWriteLine@line:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x1D
   608  0000B4                     	ds	1
   609  0000B5                     postinc0	equ	0xFEE
   610                           wreg	equ	0xFE8
   611                           
   612                           ; 0 bytes @ 0x1E
   613                           
   614                           	psect	cstackCOMRAM
   615  000001                     __pcstackCOMRAM:
   616                           	opt stack 0
   617  000001                     ??_YourLowPriorityISRCode:
   618  000001                     
   619                           ; 1 bytes @ 0x0
   620  000001                     	ds	17
   621  000012                     ??_USBCtrlTrfTxService:
   622  000012                     ??_USBCtrlTrfRxService:
   623  000012                     ??_USBStdGetDscHandler:
   624  000012                     ??_USBStdGetStatusHandler:
   625  000012                     USBConfigureEndpoint@direction:
   626                           	opt stack 0
   627  000012                     i2memset@p1:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x11
   631  000012                     	ds	1
   632  000013                     ??_USBConfigureEndpoint:
   633  000013                     USBStdGetStatusHandler@p:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x12
   637  000013                     	ds	1
   638  000014                     USBCtrlTrfTxService@byteToSend:
   639                           	opt stack 0
   640  000014                     USBCtrlTrfRxService@i:
   641                           	opt stack 0
   642  000014                     i2memset@c:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x13
   646  000014                     	ds	1
   647  000015                     USBCtrlTrfRxService@byteToRead:
   648                           	opt stack 0
   649  000015                     USBCtrlTrfInHandler@lastDTS:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x14
   653  000015                     	ds	1
   654  000016                     i2memset@n:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x15
   658  000016                     	ds	1
   659  000017                     USBConfigureEndpoint@EPNum:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x16
   663  000017                     	ds	1
   664  000018                     USBConfigureEndpoint@handle:
   665                           	opt stack 0
   666  000018                     i2memset@p:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x17
   670  000018                     	ds	2
   671  00001A                     USBEnableEndpoint@options:
   672                           	opt stack 0
   673  00001A                     i2USBDeviceInit@i:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x19
   677  00001A                     	ds	1
   678  00001B                     USBEnableEndpoint@p:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x1A
   682  00001B                     	ds	2
   683  00001D                     USBEnableEndpoint@ep:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x1C
   687  00001D                     	ds	1
   688  00001E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x1D
   692  00001E                     	ds	2
   693  000020                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x1F
   697  000020                     	ds	2
   698  000022                     USER_USB_CALLBACK_EVENT_HANDLER@size:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x21
   702  000022                     	ds	2
   703  000024                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
   704                           
   705                           ; 0 bytes @ 0x23
   706  000024                     	ds	2
   707  000026                     ??_USBStdFeatureReqHandler:
   708  000026                     USBStdSetCfgHandler@i:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x25
   712  000026                     	ds	1
   713  000027                     USBStdFeatureReqHandler@pUEP:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x26
   717  000027                     	ds	2
   718  000029                     USBStdFeatureReqHandler@current_ep_data:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x28
   722  000029                     	ds	1
   723  00002A                     USBStdFeatureReqHandler@p:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x29
   727  00002A                     	ds	2
   728  00002C                     ??_USBCtrlEPService:
   729  00002C                     
   730                           ; 0 bytes @ 0x2B
   731  00002C                     	ds	2
   732  00002E                     USBCtrlEPService@setup_cnt:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x2D
   736  00002E                     	ds	1
   737  00002F                     USBDeviceTasks@i:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x2E
   741  00002F                     	ds	1
   742                           postinc0	equ	0xFEE
   743                           wreg	equ	0xFE8
   744                           
   745 ;;
   746 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   747 ;;
   748 ;; *************** function _main *****************
   749 ;; Defined at:
   750 ;;		line 99 in file "../usb_lab/mouse.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;		None               void
   757 ;; Registers used:
   758 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   768 ;;Total ram usage:        0 bytes
   769 ;; Hardware stack levels required when called:   16
   770 ;; This function calls:
   771 ;;		_InitializeSystem
   772 ;;		_LCDWriteLine
   773 ;;		_ProcessIO
   774 ;;		_USBDeviceAttach
   775 ;; This function is called by:
   776 ;;		Startup code after reset
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text0
   781  002BC6                     __ptext0:
   782                           	opt stack 0
   783  002BC6                     _main:
   784                           	opt stack 15
   785                           
   786                           ;mouse.c: 101: InitializeSystem();
   787                           
   788                           ;incstack = 0
   789  002BC6  ECDF  F014         	call	_InitializeSystem	;wreg free
   790                           
   791                           ;mouse.c: 102: LCDWriteLine("USB Mouse Demo", 0);
   792  002BCA  0EC1               	movlw	low STR_1
   793  002BCC  0100               	movlb	0	; () banked
   794  002BCE  6FB2               	movwf	LCDWriteLine@str& (0+255),b
   795  002BD0  0E0F               	movlw	high STR_1
   796  002BD2  0100               	movlb	0	; () banked
   797  002BD4  6FB3               	movwf	(LCDWriteLine@str+1)& (0+255),b
   798  002BD6  0E00               	movlw	0
   799  002BD8  0100               	movlb	0	; () banked
   800  002BDA  6FB4               	movwf	LCDWriteLine@line& (0+255),b
   801  002BDC  EC89  F00C         	call	_LCDWriteLine	;wreg free
   802                           
   803                           ;mouse.c: 104: USBDeviceAttach();
   804  002BE0  EC02  F015         	call	_USBDeviceAttach	;wreg free
   805  002BE4                     l4474:
   806                           
   807                           ;mouse.c: 112: ProcessIO();
   808  002BE4  EC2E  F016         	call	_ProcessIO	;wreg free
   809  002BE8  D7FD               	goto	l4474
   810  002BEA                     __end_of_main:
   811                           	opt stack 0
   812                           postinc0	equ	0xFEE
   813                           wreg	equ	0xFE8
   814                           
   815 ;; *************** function _USBDeviceAttach *****************
   816 ;; Defined at:
   817 ;;		line 1519 in file "../usb_lab/usb_device.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;		None               void
   824 ;; Registers used:
   825 ;;		wreg, status,2
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:   11
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text1
   846  002A04                     __ptext1:
   847                           	opt stack 0
   848  002A04                     _USBDeviceAttach:
   849                           	opt stack 19
   850                           
   851                           ;usb_device.c: 1523: {
   852                           ;usb_device.c: 1524: if(1 == 1)
   853                           
   854                           ;incstack = 0
   855  002A04  0100               	movlb	0	; () banked
   856  002A06  5183               	movf	_USBDeviceState& (0+255),w,b	;volatile
   857  002A08  A4D8               	btfss	status,2,c
   858  002A0A  0012               	return	
   859                           
   860                           ; BSR set to: 0
   861                           ;usb_device.c: 1525: {
   862                           ;usb_device.c: 1527: UCON = 0;
   863  002A0C  0E00               	movlw	0
   864  002A0E  6E65               	movwf	3941,c	;volatile
   865                           
   866                           ;usb_device.c: 1530: UIE = 0;
   867  002A10  0E00               	movlw	0
   868  002A12  010F               	movlb	15	; () banked
   869  002A14  6F36               	movwf	54,b	;volatile
   870                           
   871                           ;usb_device.c: 1534: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
   872  002A16  0E16               	movlw	22
   873  002A18  010F               	movlb	15	; () banked
   874  002A1A  6F39               	movwf	57,b	;volatile
   875  002A1C  0E9F               	movlw	159
   876  002A1E  010F               	movlb	15	; () banked
   877  002A20  6F37               	movwf	55,b	;volatile
   878  002A22  0E7B               	movlw	123
   879  002A24  010F               	movlb	15	; () banked
   880  002A26  6F36               	movwf	54,b	;volatile
   881                           
   882                           ; BSR set to: 15
   883                           ;usb_device.c: 1536: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
   884  002A28  8ED0               	bsf	4048,7,c	;volatile
   885                           
   886                           ; BSR set to: 15
   887  002A2A  88A2               	bsf	4002,4,c	;volatile
   888                           
   889                           ; BSR set to: 15
   890  002A2C  88A0               	bsf	4000,4,c	;volatile
   891                           
   892                           ; BSR set to: 15
   893  002A2E  8EF2               	bsf	intcon,7,c	;volatile
   894                           
   895                           ;usb_device.c: 1539: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
   896  002A30  D001               	goto	l617
   897  002A32                     l618:
   898  002A32  8665               	bsf	3941,3,c	;volatile
   899  002A34                     l617:
   900  002A34  A665               	btfss	3941,3,c	;volatile
   901  002A36  D7FD               	goto	l618
   902                           
   903                           ;usb_device.c: 1542: USBDeviceState = ATTACHED_STATE;
   904  002A38  0E01               	movlw	1
   905  002A3A  0100               	movlb	0	; () banked
   906  002A3C  6F83               	movwf	_USBDeviceState& (0+255),b	;volatile
   907                           
   908                           ; BSR set to: 0
   909  002A3E  0012               	return	
   910  002A40                     __end_of_USBDeviceAttach:
   911                           	opt stack 0
   912                           intcon	equ	0xFF2
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           status	equ	0xFD8
   916                           
   917 ;; *************** function _ProcessIO *****************
   918 ;; Defined at:
   919 ;;		line 213 in file "../usb_lab/mouse.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:   13
   940 ;; This function calls:
   941 ;;		_BlinkUSBStatus
   942 ;;		_Emulate_Mouse
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text2
   949  002C5C                     __ptext2:
   950                           	opt stack 0
   951  002C5C                     _ProcessIO:
   952                           	opt stack 17
   953                           
   954                           ;mouse.c: 215: BlinkUSBStatus();
   955                           
   956                           ; BSR set to: 0
   957                           ;incstack = 0
   958  002C5C  EC95  F00E         	call	_BlinkUSBStatus	;wreg free
   959                           
   960                           ;mouse.c: 217: if ((USBDeviceState < CONFIGURED_STATE) || (UCONbits.SUSPND == 1)) return
      +                          ;
   961  002C60  0E1F               	movlw	31
   962  002C62  0100               	movlb	0	; () banked
   963  002C64  6583               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
   964  002C66  0012               	return	
   965                           
   966                           ; BSR set to: 0
   967  002C68  B265               	btfsc	3941,1,c	;volatile
   968  002C6A  0012               	return	
   969                           
   970                           ; BSR set to: 0
   971                           ;mouse.c: 219: Emulate_Mouse();
   972                           
   973                           ; BSR set to: 0
   974                           
   975                           ; BSR set to: 0
   976  002C6C  EC26  F009         	call	_Emulate_Mouse	;wreg free
   977  002C70  0012               	return		;funcret
   978  002C72                     __end_of_ProcessIO:
   979                           	opt stack 0
   980                           intcon	equ	0xFF2
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           status	equ	0xFD8
   984                           
   985 ;; *************** function _Emulate_Mouse *****************
   986 ;; Defined at:
   987 ;;		line 247 in file "../usb_lab/mouse.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;		None               void
   994 ;; Registers used:
   995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1002 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1003 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;Total ram usage:        3 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:   12
  1008 ;; This function calls:
  1009 ;;		_ReadPot
  1010 ;;		_USBTransferOnePacket
  1011 ;;		___awdiv
  1012 ;; This function is called by:
  1013 ;;		_ProcessIO
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text3
  1018  00124C                     __ptext3:
  1019                           	opt stack 0
  1020  00124C                     _Emulate_Mouse:
  1021                           	opt stack 17
  1022                           
  1023                           ;mouse.c: 248: buffer[0] = 0;
  1024                           
  1025                           ;incstack = 0
  1026  00124C  0E00               	movlw	0
  1027  00124E  0100               	movlb	0	; () banked
  1028  001250  6F77               	movwf	_buffer& (0+255),b
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;mouse.c: 259: if (!PORTBbits.RB0 && state == 0) {
  1032  001252  B081               	btfsc	3969,0,c	;volatile
  1033  001254  D00B               	goto	l3958
  1034                           
  1035                           ; BSR set to: 0
  1036  001256  0100               	movlb	0	; () banked
  1037  001258  5180               	movf	_state& (0+255),w,b
  1038  00125A  0100               	movlb	0	; () banked
  1039  00125C  1181               	iorwf	(_state+1)& (0+255),w,b
  1040  00125E  A4D8               	btfss	status,2,c
  1041  001260  D005               	goto	l3958
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;mouse.c: 260: state = 1;
  1045  001262  0E00               	movlw	0
  1046  001264  0100               	movlb	0	; () banked
  1047  001266  6F81               	movwf	(_state+1)& (0+255),b
  1048  001268  0E01               	movlw	1
  1049  00126A  6F80               	movwf	_state& (0+255),b
  1050  00126C                     l3958:
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;mouse.c: 261: }
  1054                           ;mouse.c: 262: if (PORTBbits.RB0 && state == 1) {
  1055  00126C  A081               	btfss	3969,0,c	;volatile
  1056  00126E  D00B               	goto	l3964
  1057                           
  1058                           ; BSR set to: 0
  1059  001270  0100               	movlb	0	; () banked
  1060  001272  0580               	decf	_state& (0+255),w,b
  1061  001274  0100               	movlb	0	; () banked
  1062  001276  1181               	iorwf	(_state+1)& (0+255),w,b
  1063  001278  A4D8               	btfss	status,2,c
  1064  00127A  D005               	goto	l3964
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;mouse.c: 263: state = 2;
  1068  00127C  0E00               	movlw	0
  1069  00127E  0100               	movlb	0	; () banked
  1070  001280  6F81               	movwf	(_state+1)& (0+255),b
  1071  001282  0E02               	movlw	2
  1072  001284  6F80               	movwf	_state& (0+255),b
  1073  001286                     l3964:
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;mouse.c: 264: }
  1077                           ;mouse.c: 265: if (!PORTBbits.RB0 && state == 2) {
  1078  001286  B081               	btfsc	3969,0,c	;volatile
  1079  001288  D00C               	goto	l3970
  1080                           
  1081                           ; BSR set to: 0
  1082  00128A  0E02               	movlw	2
  1083  00128C  0100               	movlb	0	; () banked
  1084  00128E  1980               	xorwf	_state& (0+255),w,b
  1085  001290  0100               	movlb	0	; () banked
  1086  001292  1181               	iorwf	(_state+1)& (0+255),w,b
  1087  001294  A4D8               	btfss	status,2,c
  1088  001296  D005               	goto	l3970
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;mouse.c: 266: state = 3;
  1092  001298  0E00               	movlw	0
  1093  00129A  0100               	movlb	0	; () banked
  1094  00129C  6F81               	movwf	(_state+1)& (0+255),b
  1095  00129E  0E03               	movlw	3
  1096  0012A0  6F80               	movwf	_state& (0+255),b
  1097  0012A2                     l3970:
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;mouse.c: 267: }
  1101                           ;mouse.c: 268: if (PORTBbits.RB0 && state == 3) {
  1102  0012A2  A081               	btfss	3969,0,c	;volatile
  1103  0012A4  D00C               	goto	l3976
  1104                           
  1105                           ; BSR set to: 0
  1106  0012A6  0E03               	movlw	3
  1107  0012A8  0100               	movlb	0	; () banked
  1108  0012AA  1980               	xorwf	_state& (0+255),w,b
  1109  0012AC  0100               	movlb	0	; () banked
  1110  0012AE  1181               	iorwf	(_state+1)& (0+255),w,b
  1111  0012B0  A4D8               	btfss	status,2,c
  1112  0012B2  D005               	goto	l3976
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;mouse.c: 269: state = 0;
  1116  0012B4  0E00               	movlw	0
  1117  0012B6  0100               	movlb	0	; () banked
  1118  0012B8  6F81               	movwf	(_state+1)& (0+255),b
  1119  0012BA  0E00               	movlw	0
  1120  0012BC  6F80               	movwf	_state& (0+255),b
  1121  0012BE                     l3976:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;mouse.c: 270: }
  1125                           ;mouse.c: 272: if (PORTBbits.RB2 == 0) {
  1126  0012BE  B481               	btfsc	3969,2,c	;volatile
  1127  0012C0  D002               	goto	l3980
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;mouse.c: 273: buffer[0] |= 0b00000001;
  1131  0012C2  0100               	movlb	0	; () banked
  1132  0012C4  8177               	bsf	_buffer& (0+255),0,b
  1133  0012C6                     l3980:
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;mouse.c: 274: }
  1137                           ;mouse.c: 276: if (PORTAbits.RA5 == 0) {
  1138  0012C6  BA80               	btfsc	3968,5,c	;volatile
  1139  0012C8  D002               	goto	l3984
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;mouse.c: 277: buffer[0] |= 0b00000010;
  1143  0012CA  0100               	movlb	0	; () banked
  1144  0012CC  8377               	bsf	_buffer& (0+255),1,b
  1145  0012CE                     l3984:
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;mouse.c: 278: }
  1149                           ;mouse.c: 280: if (state == 0 || state == 1) {
  1150  0012CE  0100               	movlb	0	; () banked
  1151  0012D0  5180               	movf	_state& (0+255),w,b
  1152  0012D2  0100               	movlb	0	; () banked
  1153  0012D4  1181               	iorwf	(_state+1)& (0+255),w,b
  1154  0012D6  B4D8               	btfsc	status,2,c
  1155  0012D8  D006               	goto	l3988
  1156                           
  1157                           ; BSR set to: 0
  1158  0012DA  0100               	movlb	0	; () banked
  1159  0012DC  0580               	decf	_state& (0+255),w,b
  1160  0012DE  0100               	movlb	0	; () banked
  1161  0012E0  1181               	iorwf	(_state+1)& (0+255),w,b
  1162  0012E2  A4D8               	btfss	status,2,c
  1163  0012E4  D019               	goto	l3992
  1164  0012E6                     l3988:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;mouse.c: 281: buffer[1] = (ReadPot() - 512) / 128;
  1168  0012E6  EC22  F016         	call	_ReadPot	;wreg free
  1169  0012EA  0E00               	movlw	0
  1170  0012EC  0100               	movlb	0	; () banked
  1171  0012EE  25A5               	addwf	?_ReadPot& (0+255),w,b
  1172  0012F0  0100               	movlb	0	; () banked
  1173  0012F2  6FA7               	movwf	___awdiv@dividend& (0+255),b
  1174  0012F4  0EFE               	movlw	254
  1175  0012F6  0100               	movlb	0	; () banked
  1176  0012F8  21A6               	addwfc	(?_ReadPot+1)& (0+255),w,b
  1177  0012FA  0100               	movlb	0	; () banked
  1178  0012FC  6FA8               	movwf	(___awdiv@dividend+1)& (0+255),b
  1179  0012FE  0E00               	movlw	0
  1180  001300  0100               	movlb	0	; () banked
  1181  001302  6FAA               	movwf	(___awdiv@divisor+1)& (0+255),b
  1182  001304  0E80               	movlw	128
  1183  001306  6FA9               	movwf	___awdiv@divisor& (0+255),b
  1184  001308  EC2E  F011         	call	___awdiv	;wreg free
  1185  00130C  0100               	movlb	0	; () banked
  1186  00130E  51A7               	movf	?___awdiv& (0+255),w,b
  1187  001310  0100               	movlb	0	; () banked
  1188  001312  6F78               	movwf	(_buffer+1)& (0+255),b
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;mouse.c: 282: buffer[2] = 0;
  1192  001314  0E00               	movlw	0
  1193  001316  D026               	goto	L1
  1194  001318                     l3992:
  1195                           
  1196                           ; BSR set to: 0
  1197  001318  0E02               	movlw	2
  1198  00131A  0100               	movlb	0	; () banked
  1199  00131C  1980               	xorwf	_state& (0+255),w,b
  1200  00131E  0100               	movlb	0	; () banked
  1201  001320  1181               	iorwf	(_state+1)& (0+255),w,b
  1202  001322  B4D8               	btfsc	status,2,c
  1203  001324  D007               	goto	l3996
  1204                           
  1205                           ; BSR set to: 0
  1206  001326  0E03               	movlw	3
  1207  001328  0100               	movlb	0	; () banked
  1208  00132A  1980               	xorwf	_state& (0+255),w,b
  1209  00132C  0100               	movlb	0	; () banked
  1210  00132E  1181               	iorwf	(_state+1)& (0+255),w,b
  1211  001330  A4D8               	btfss	status,2,c
  1212  001332  D01A               	goto	l4000
  1213  001334                     l3996:
  1214                           
  1215                           ; BSR set to: 0
  1216                           ;mouse.c: 284: buffer[1] = 0;
  1217  001334  0E00               	movlw	0
  1218  001336  0100               	movlb	0	; () banked
  1219  001338  6F78               	movwf	(_buffer+1)& (0+255),b
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;mouse.c: 285: buffer[2] = (ReadPot() - 512) / 128;
  1223  00133A  EC22  F016         	call	_ReadPot	;wreg free
  1224  00133E  0E00               	movlw	0
  1225  001340  0100               	movlb	0	; () banked
  1226  001342  25A5               	addwf	?_ReadPot& (0+255),w,b
  1227  001344  0100               	movlb	0	; () banked
  1228  001346  6FA7               	movwf	___awdiv@dividend& (0+255),b
  1229  001348  0EFE               	movlw	254
  1230  00134A  0100               	movlb	0	; () banked
  1231  00134C  21A6               	addwfc	(?_ReadPot+1)& (0+255),w,b
  1232  00134E  0100               	movlb	0	; () banked
  1233  001350  6FA8               	movwf	(___awdiv@dividend+1)& (0+255),b
  1234  001352  0E00               	movlw	0
  1235  001354  0100               	movlb	0	; () banked
  1236  001356  6FAA               	movwf	(___awdiv@divisor+1)& (0+255),b
  1237  001358  0E80               	movlw	128
  1238  00135A  6FA9               	movwf	___awdiv@divisor& (0+255),b
  1239  00135C  EC2E  F011         	call	___awdiv	;wreg free
  1240  001360  0100               	movlb	0	; () banked
  1241  001362  51A7               	movf	?___awdiv& (0+255),w,b
  1242  001364                     L1:
  1243  001364  0100               	movlb	0	; () banked
  1244  001366  6F79               	movwf	(_buffer+2)& (0+255),b
  1245  001368                     l4000:
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;mouse.c: 286: }
  1249                           ;mouse.c: 288: if ((lastTransmission==0?0:((volatile BDT_ENTRY*)lastTransmission)->STAT.
      +                          UOWN) == 0) {
  1250  001368  0100               	movlb	0	; () banked
  1251  00136A  517E               	movf	_lastTransmission& (0+255),w,b
  1252  00136C  0100               	movlb	0	; () banked
  1253  00136E  117F               	iorwf	(_lastTransmission+1)& (0+255),w,b
  1254  001370  B4D8               	btfsc	status,2,c
  1255  001372  D013               	goto	l4004
  1256                           
  1257                           ; BSR set to: 0
  1258  001374  C07E  FFD9         	movff	_lastTransmission,fsr2l
  1259  001378  C07F  FFDA         	movff	_lastTransmission+1,fsr2h
  1260  00137C  0100               	movlb	0	; () banked
  1261  00137E  AEDF               	btfss	indf2,7,c
  1262  001380  D004               	goto	u3510
  1263  001382  0100               	movlb	0	; () banked
  1264  001384  6BAF               	clrf	??_Emulate_Mouse& (0+255),b
  1265  001386  2BAF               	incf	??_Emulate_Mouse& (0+255),f,b
  1266  001388  D002               	goto	u3518
  1267  00138A                     u3510:
  1268  00138A  0100               	movlb	0	; () banked
  1269  00138C  6BAF               	clrf	??_Emulate_Mouse& (0+255),b
  1270  00138E                     u3518:
  1271  00138E  0100               	movlb	0	; () banked
  1272  001390  51AF               	movf	??_Emulate_Mouse& (0+255),w,b
  1273  001392  0100               	movlb	0	; () banked
  1274  001394  6FB0               	movwf	_Emulate_Mouse$1481& (0+255),b
  1275  001396  6BB1               	clrf	(_Emulate_Mouse$1481+1)& (0+255),b
  1276  001398  D005               	goto	l4006
  1277  00139A                     l4004:
  1278                           
  1279                           ; BSR set to: 0
  1280  00139A  0E00               	movlw	0
  1281  00139C  0100               	movlb	0	; () banked
  1282  00139E  6FB1               	movwf	(_Emulate_Mouse$1481+1)& (0+255),b
  1283  0013A0  0E00               	movlw	0
  1284  0013A2  6FB0               	movwf	_Emulate_Mouse$1481& (0+255),b
  1285  0013A4                     l4006:
  1286                           
  1287                           ; BSR set to: 0
  1288  0013A4  0100               	movlb	0	; () banked
  1289  0013A6  51B0               	movf	_Emulate_Mouse$1481& (0+255),w,b
  1290  0013A8  0100               	movlb	0	; () banked
  1291  0013AA  11B1               	iorwf	(_Emulate_Mouse$1481+1)& (0+255),w,b
  1292  0013AC  A4D8               	btfss	status,2,c
  1293  0013AE  0012               	return	
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;mouse.c: 290: hid_report_in[0] = buffer[0];
  1297  0013B0  C077  F094         	movff	_buffer,_hid_report_in
  1298                           
  1299                           ;mouse.c: 291: hid_report_in[1] = buffer[1];
  1300  0013B4  C078  F095         	movff	_buffer+1,_hid_report_in+1
  1301                           
  1302                           ;mouse.c: 292: hid_report_in[2] = buffer[2];
  1303  0013B8  C079  F096         	movff	_buffer+2,_hid_report_in+2
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;mouse.c: 293: lastTransmission = USBTransferOnePacket(1,1,(BYTE*) hid_report_in,0x03);
  1307  0013BC  0E01               	movlw	1
  1308  0013BE  0100               	movlb	0	; () banked
  1309  0013C0  6FA5               	movwf	USBTransferOnePacket@dir& (0+255),b
  1310  0013C2  0E94               	movlw	low _hid_report_in
  1311  0013C4  0100               	movlb	0	; () banked
  1312  0013C6  6FA6               	movwf	USBTransferOnePacket@data& (0+255),b
  1313  0013C8  0E00               	movlw	high _hid_report_in
  1314  0013CA  0100               	movlb	0	; () banked
  1315  0013CC  6FA7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  1316  0013CE  0E03               	movlw	3
  1317  0013D0  0100               	movlb	0	; () banked
  1318  0013D2  6FA8               	movwf	USBTransferOnePacket@len& (0+255),b
  1319  0013D4  0E01               	movlw	1
  1320  0013D6  ECC8  F010         	call	_USBTransferOnePacket
  1321  0013DA  C0A5  F07E         	movff	?_USBTransferOnePacket,_lastTransmission
  1322  0013DE  C0A6  F07F         	movff	?_USBTransferOnePacket+1,_lastTransmission+1
  1323  0013E2  0012               	return	
  1324  0013E4                     __end_of_Emulate_Mouse:
  1325                           	opt stack 0
  1326                           intcon	equ	0xFF2
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           indf2	equ	0xFDF
  1330                           fsr2h	equ	0xFDA
  1331                           fsr2l	equ	0xFD9
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function ___awdiv *****************
  1335 ;; Defined at:
  1336 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  dividend        2   16[BANK0 ] int 
  1339 ;;  divisor         2   18[BANK0 ] int 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  quotient        2   22[BANK0 ] int 
  1342 ;;  sign            1   21[BANK0 ] unsigned char 
  1343 ;;  counter         1   20[BANK0 ] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2   16[BANK0 ] int 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1354 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1356 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1357 ;;Total ram usage:        8 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:   11
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_Emulate_Mouse
  1364 ;;		_LCDGetPos
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text4
  1369  00225C                     __ptext4:
  1370                           	opt stack 0
  1371  00225C                     ___awdiv:
  1372                           	opt stack 17
  1373                           
  1374                           ;incstack = 0
  1375  00225C  0E00               	movlw	0
  1376  00225E  0100               	movlb	0	; () banked
  1377  002260  6FAC               	movwf	___awdiv@sign& (0+255),b
  1378                           
  1379                           ; BSR set to: 0
  1380  002262  0100               	movlb	0	; () banked
  1381  002264  AFAA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1382  002266  D008               	goto	l3734
  1383                           
  1384                           ; BSR set to: 0
  1385  002268  0100               	movlb	0	; () banked
  1386  00226A  6DA9               	negf	___awdiv@divisor& (0+255),b
  1387  00226C  1FAA               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1388  00226E  B0D8               	btfsc	status,0,c
  1389  002270  2BAA               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1390                           
  1391                           ; BSR set to: 0
  1392  002272  0E01               	movlw	1
  1393  002274  0100               	movlb	0	; () banked
  1394  002276  6FAC               	movwf	___awdiv@sign& (0+255),b
  1395  002278                     l3734:
  1396                           
  1397                           ; BSR set to: 0
  1398  002278  0100               	movlb	0	; () banked
  1399  00227A  AFA8               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1400  00227C  D008               	goto	l3740
  1401                           
  1402                           ; BSR set to: 0
  1403  00227E  0100               	movlb	0	; () banked
  1404  002280  6DA7               	negf	___awdiv@dividend& (0+255),b
  1405  002282  1FA8               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1406  002284  B0D8               	btfsc	status,0,c
  1407  002286  2BA8               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1408                           
  1409                           ; BSR set to: 0
  1410  002288  0E01               	movlw	1
  1411  00228A  0100               	movlb	0	; () banked
  1412  00228C  1BAC               	xorwf	___awdiv@sign& (0+255),f,b
  1413  00228E                     l3740:
  1414                           
  1415                           ; BSR set to: 0
  1416  00228E  0E00               	movlw	0
  1417  002290  0100               	movlb	0	; () banked
  1418  002292  6FAE               	movwf	(___awdiv@quotient+1)& (0+255),b
  1419  002294  0E00               	movlw	0
  1420  002296  6FAD               	movwf	___awdiv@quotient& (0+255),b
  1421                           
  1422                           ; BSR set to: 0
  1423  002298  0100               	movlb	0	; () banked
  1424  00229A  51A9               	movf	___awdiv@divisor& (0+255),w,b
  1425  00229C  0100               	movlb	0	; () banked
  1426  00229E  11AA               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1427  0022A0  B4D8               	btfsc	status,2,c
  1428  0022A2  D02C               	goto	l3762
  1429                           
  1430                           ; BSR set to: 0
  1431  0022A4  0E01               	movlw	1
  1432  0022A6  0100               	movlb	0	; () banked
  1433  0022A8  6FAB               	movwf	___awdiv@counter& (0+255),b
  1434  0022AA  D006               	goto	l3748
  1435  0022AC                     l3746:
  1436                           
  1437                           ; BSR set to: 0
  1438  0022AC  0100               	movlb	0	; () banked
  1439  0022AE  90D8               	bcf	status,0,c
  1440  0022B0  37A9               	rlcf	___awdiv@divisor& (0+255),f,b
  1441  0022B2  37AA               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1442  0022B4  0100               	movlb	0	; () banked
  1443  0022B6  2BAB               	incf	___awdiv@counter& (0+255),f,b
  1444  0022B8                     l3748:
  1445                           
  1446                           ; BSR set to: 0
  1447  0022B8  0100               	movlb	0	; () banked
  1448  0022BA  AFAA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1449  0022BC  D7F7               	goto	l3746
  1450  0022BE                     l3750:
  1451                           
  1452                           ; BSR set to: 0
  1453  0022BE  0100               	movlb	0	; () banked
  1454  0022C0  90D8               	bcf	status,0,c
  1455  0022C2  37AD               	rlcf	___awdiv@quotient& (0+255),f,b
  1456  0022C4  37AE               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1457                           
  1458                           ; BSR set to: 0
  1459  0022C6  0100               	movlb	0	; () banked
  1460  0022C8  51A9               	movf	___awdiv@divisor& (0+255),w,b
  1461  0022CA  0100               	movlb	0	; () banked
  1462  0022CC  5DA7               	subwf	___awdiv@dividend& (0+255),w,b
  1463  0022CE  0100               	movlb	0	; () banked
  1464  0022D0  51AA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1465  0022D2  0100               	movlb	0	; () banked
  1466  0022D4  59A8               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1467  0022D6  A0D8               	btfss	status,0,c
  1468  0022D8  D00A               	goto	l3758
  1469                           
  1470                           ; BSR set to: 0
  1471  0022DA  0100               	movlb	0	; () banked
  1472  0022DC  51A9               	movf	___awdiv@divisor& (0+255),w,b
  1473  0022DE  0100               	movlb	0	; () banked
  1474  0022E0  5FA7               	subwf	___awdiv@dividend& (0+255),f,b
  1475  0022E2  0100               	movlb	0	; () banked
  1476  0022E4  51AA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1477  0022E6  0100               	movlb	0	; () banked
  1478  0022E8  5BA8               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1479                           
  1480                           ; BSR set to: 0
  1481  0022EA  0100               	movlb	0	; () banked
  1482  0022EC  81AD               	bsf	___awdiv@quotient& (0+255),0,b
  1483  0022EE                     l3758:
  1484                           
  1485                           ; BSR set to: 0
  1486  0022EE  0100               	movlb	0	; () banked
  1487  0022F0  90D8               	bcf	status,0,c
  1488  0022F2  33AA               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1489  0022F4  33A9               	rrcf	___awdiv@divisor& (0+255),f,b
  1490                           
  1491                           ; BSR set to: 0
  1492  0022F6  0100               	movlb	0	; () banked
  1493  0022F8  2FAB               	decfsz	___awdiv@counter& (0+255),f,b
  1494  0022FA  D7E1               	goto	l3750
  1495  0022FC                     l3762:
  1496                           
  1497                           ; BSR set to: 0
  1498  0022FC  0100               	movlb	0	; () banked
  1499  0022FE  51AC               	movf	___awdiv@sign& (0+255),w,b
  1500  002300  0100               	movlb	0	; () banked
  1501  002302  B4D8               	btfsc	status,2,c
  1502  002304  D005               	goto	l3766
  1503                           
  1504                           ; BSR set to: 0
  1505  002306  0100               	movlb	0	; () banked
  1506  002308  6DAD               	negf	___awdiv@quotient& (0+255),b
  1507  00230A  1FAE               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1508  00230C  B0D8               	btfsc	status,0,c
  1509  00230E  2BAE               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1510  002310                     l3766:
  1511                           
  1512                           ; BSR set to: 0
  1513  002310  C0AD  F0A7         	movff	___awdiv@quotient,?___awdiv
  1514  002314  C0AE  F0A8         	movff	___awdiv@quotient+1,?___awdiv+1
  1515  002318  0012               	return	
  1516  00231A                     __end_of___awdiv:
  1517                           	opt stack 0
  1518                           intcon	equ	0xFF2
  1519                           postinc0	equ	0xFEE
  1520                           wreg	equ	0xFE8
  1521                           indf2	equ	0xFDF
  1522                           fsr2h	equ	0xFDA
  1523                           fsr2l	equ	0xFD9
  1524                           status	equ	0xFD8
  1525                           
  1526 ;; *************** function _USBTransferOnePacket *****************
  1527 ;; Defined at:
  1528 ;;		line 1166 in file "../usb_lab/usb_device.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  ep              1    wreg     unsigned char 
  1531 ;;  dir             1   14[BANK0 ] unsigned char 
  1532 ;;  data            2   15[BANK0 ] PTR unsigned char 
  1533 ;;		 -> hid_report_in(3), 
  1534 ;;  len             1   17[BANK0 ] unsigned char 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  ep              1   18[BANK0 ] unsigned char 
  1537 ;;  handle          2   19[BANK0 ] PTR volatile struct __BD
  1538 ;;		 -> BDT(32), NULL(0), 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  2   14[BANK0 ] PTR void 
  1541 ;; Registers used:
  1542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1551 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1552 ;;Total ram usage:        7 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:   11
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_Emulate_Mouse
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text5
  1563  002190                     __ptext5:
  1564                           	opt stack 0
  1565  002190                     _USBTransferOnePacket:
  1566                           	opt stack 17
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;incstack = 0
  1570                           ;USBTransferOnePacket@ep stored from wreg
  1571  002190  0100               	movlb	0	; () banked
  1572  002192  6FA9               	movwf	USBTransferOnePacket@ep& (0+255),b
  1573                           
  1574                           ;usb_device.c: 1168: volatile BDT_ENTRY* handle;
  1575                           ;usb_device.c: 1171: if(dir != 0)
  1576  002194  0100               	movlb	0	; () banked
  1577  002196  51A5               	movf	USBTransferOnePacket@dir& (0+255),w,b
  1578  002198  0100               	movlb	0	; () banked
  1579  00219A  B4D8               	btfsc	status,2,c
  1580  00219C  D008               	goto	l3622
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;usb_device.c: 1172: {
  1584                           ;usb_device.c: 1174: handle = pBDTEntryIn[ep];
  1585  00219E  0100               	movlb	0	; () banked
  1586  0021A0  51A9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  1587  0021A2  0D02               	mullw	2
  1588  0021A4  0E6F               	movlw	low _pBDTEntryIn
  1589  0021A6  24F3               	addwf	prodl,w,c
  1590  0021A8  6ED9               	movwf	fsr2l,c
  1591  0021AA  0E00               	movlw	high _pBDTEntryIn
  1592  0021AC  D007               	goto	L2
  1593  0021AE                     l3622:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;usb_device.c: 1176: else
  1597                           ;usb_device.c: 1177: {
  1598                           ;usb_device.c: 1179: handle = pBDTEntryOut[ep];
  1599  0021AE  0100               	movlb	0	; () banked
  1600  0021B0  51A9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  1601  0021B2  0D02               	mullw	2
  1602  0021B4  0E73               	movlw	low _pBDTEntryOut
  1603  0021B6  24F3               	addwf	prodl,w,c
  1604  0021B8  6ED9               	movwf	fsr2l,c
  1605  0021BA  0E00               	movlw	high _pBDTEntryOut
  1606  0021BC                     L2:
  1607  0021BC  20F4               	addwfc	prodh,w,c
  1608  0021BE  6EDA               	movwf	fsr2h,c
  1609  0021C0  CFDE F0AA          	movff	postinc2,USBTransferOnePacket@handle
  1610  0021C4  CFDD F0AB          	movff	postdec2,USBTransferOnePacket@handle+1
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;usb_device.c: 1180: }
  1614                           ;usb_device.c: 1184: if(handle == 0)
  1615                           
  1616                           ; BSR set to: 0
  1617  0021C8  0100               	movlb	0	; () banked
  1618  0021CA  51AA               	movf	USBTransferOnePacket@handle& (0+255),w,b
  1619  0021CC  0100               	movlb	0	; () banked
  1620  0021CE  11AB               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  1621  0021D0  A4D8               	btfss	status,2,c
  1622  0021D2  D007               	goto	l3630
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;usb_device.c: 1185: {
  1626                           ;usb_device.c: 1186: return 0;
  1627  0021D4  0E00               	movlw	0
  1628  0021D6  0100               	movlb	0	; () banked
  1629  0021D8  6FA5               	movwf	?_USBTransferOnePacket& (0+255),b
  1630  0021DA  0E00               	movlw	0
  1631  0021DC  0100               	movlb	0	; () banked
  1632  0021DE  6FA6               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  1633                           
  1634                           ; BSR set to: 0
  1635  0021E0  0012               	return	
  1636  0021E2                     l3630:
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;usb_device.c: 1187: }
  1640                           ;usb_device.c: 1200: handle->ADR = ((WORD)(data));
  1641  0021E2  0100               	movlb	0	; () banked
  1642  0021E4  EE20 F002          	lfsr	2,2
  1643  0021E8  51AA               	movf	USBTransferOnePacket@handle& (0+255),w,b
  1644  0021EA  26D9               	addwf	fsr2l,f,c
  1645  0021EC  51AB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  1646  0021EE  22DA               	addwfc	fsr2h,f,c
  1647  0021F0  C0A6  FFDE         	movff	USBTransferOnePacket@data,postinc2
  1648  0021F4  C0A7  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  1649                           
  1650                           ;usb_device.c: 1201: handle->CNT = len;
  1651  0021F8  0100               	movlb	0	; () banked
  1652  0021FA  EE20 F001          	lfsr	2,1
  1653  0021FE  51AA               	movf	USBTransferOnePacket@handle& (0+255),w,b
  1654  002200  26D9               	addwf	fsr2l,f,c
  1655  002202  51AB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  1656  002204  22DA               	addwfc	fsr2h,f,c
  1657  002206  C0A8  FFDF         	movff	USBTransferOnePacket@len,indf2
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;usb_device.c: 1202: handle->STAT.Val &= 0x40;
  1661  00220A  C0AA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  1662  00220E  C0AB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  1663  002212  0E40               	movlw	64
  1664  002214  16DF               	andwf	indf2,f,c
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;usb_device.c: 1203: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
  1668  002216  C0AA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  1669  00221A  C0AB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  1670  00221E  0E88               	movlw	136
  1671  002220  12DF               	iorwf	indf2,f,c
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;usb_device.c: 1206: if(dir != 0)
  1675  002222  0100               	movlb	0	; () banked
  1676  002224  51A5               	movf	USBTransferOnePacket@dir& (0+255),w,b
  1677  002226  0100               	movlb	0	; () banked
  1678  002228  B4D8               	btfsc	status,2,c
  1679  00222A  D008               	goto	l3640
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;usb_device.c: 1207: {
  1683                           ;usb_device.c: 1209: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
  1684  00222C  0100               	movlb	0	; () banked
  1685  00222E  51A9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  1686  002230  0D02               	mullw	2
  1687  002232  0E6F               	movlw	low _pBDTEntryIn
  1688  002234  24F3               	addwf	prodl,w,c
  1689  002236  6ED9               	movwf	fsr2l,c
  1690  002238  0E00               	movlw	high _pBDTEntryIn
  1691  00223A  D007               	goto	L3
  1692  00223C                     l3640:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;usb_device.c: 1211: else
  1696                           ;usb_device.c: 1212: {
  1697                           ;usb_device.c: 1214: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
  1698  00223C  0100               	movlb	0	; () banked
  1699  00223E  51A9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  1700  002240  0D02               	mullw	2
  1701  002242  0E73               	movlw	low _pBDTEntryOut
  1702  002244  24F3               	addwf	prodl,w,c
  1703  002246  6ED9               	movwf	fsr2l,c
  1704  002248  0E00               	movlw	high _pBDTEntryOut
  1705  00224A                     L3:
  1706  00224A  20F4               	addwfc	prodh,w,c
  1707  00224C  6EDA               	movwf	fsr2h,c
  1708  00224E  0E04               	movlw	4
  1709  002250  1ADF               	xorwf	indf2,f,c
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;usb_device.c: 1215: }
  1713                           ;usb_device.c: 1216: return (void*)handle;
  1714                           
  1715                           ; BSR set to: 0
  1716  002252  C0AA  F0A5         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  1717  002256  C0AB  F0A6         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  1718  00225A  0012               	return	
  1719  00225C                     __end_of_USBTransferOnePacket:
  1720                           	opt stack 0
  1721                           prodh	equ	0xFF4
  1722                           prodl	equ	0xFF3
  1723                           intcon	equ	0xFF2
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           indf2	equ	0xFDF
  1727                           postinc2	equ	0xFDE
  1728                           postdec2	equ	0xFDD
  1729                           fsr2h	equ	0xFDA
  1730                           fsr2l	equ	0xFD9
  1731                           status	equ	0xFD8
  1732                           
  1733 ;; *************** function _ReadPot *****************
  1734 ;; Defined at:
  1735 ;;		line 297 in file "../usb_lab/mouse.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  2   14[BANK0 ] int 
  1742 ;; Registers used:
  1743 ;;		None
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1749 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;Total ram usage:        2 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:   11
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_Emulate_Mouse
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text6
  1764  002C44                     __ptext6:
  1765                           	opt stack 0
  1766  002C44                     _ReadPot:
  1767                           	opt stack 17
  1768                           
  1769                           ;mouse.c: 298: ADCON0bits.CHS = 0;
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;incstack = 0
  1773  002C44  94C2               	bcf	4034,2,c	;volatile
  1774  002C46  96C2               	bcf	4034,3,c	;volatile
  1775  002C48  98C2               	bcf	4034,4,c	;volatile
  1776  002C4A  9AC2               	bcf	4034,5,c	;volatile
  1777                           
  1778                           ;mouse.c: 299: GODONE = 1;
  1779  002C4C  82C2               	bsf	4034,1,c	;volatile
  1780  002C4E                     l322:
  1781  002C4E  B2C2               	btfsc	4034,1,c	;volatile
  1782  002C50  D7FE               	goto	l322
  1783                           
  1784                           ;mouse.c: 301: return ADRES;
  1785  002C52  CFC3 F0A5          	movff	4035,?_ReadPot	;volatile
  1786  002C56  CFC4 F0A6          	movff	4036,?_ReadPot+1	;volatile
  1787  002C5A  0012               	return		;funcret
  1788  002C5C                     __end_of_ReadPot:
  1789                           	opt stack 0
  1790                           prodh	equ	0xFF4
  1791                           prodl	equ	0xFF3
  1792                           intcon	equ	0xFF2
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           indf2	equ	0xFDF
  1796                           postinc2	equ	0xFDE
  1797                           postdec2	equ	0xFDD
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _BlinkUSBStatus *****************
  1803 ;; Defined at:
  1804 ;;		line 372 in file "../usb_lab/mouse.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;		None               void
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1820 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;Total ram usage:        1 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:   11
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_ProcessIO
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text7
  1833  001D2A                     __ptext7:
  1834                           	opt stack 0
  1835  001D2A                     _BlinkUSBStatus:
  1836                           	opt stack 18
  1837                           
  1838                           ;mouse.c: 373: static WORD led_count = 0;
  1839                           ;mouse.c: 375: if (led_count == 0)led_count = 10000U;
  1840                           
  1841                           ;incstack = 0
  1842  001D2A  5030               	movf	BlinkUSBStatus@led_count,w,c
  1843  001D2C  1031               	iorwf	BlinkUSBStatus@led_count+1,w,c
  1844  001D2E  A4D8               	btfss	status,2,c
  1845  001D30  D004               	goto	l3904
  1846  001D32  0E27               	movlw	39
  1847  001D34  6E31               	movwf	BlinkUSBStatus@led_count+1,c
  1848  001D36  0E10               	movlw	16
  1849  001D38  6E30               	movwf	BlinkUSBStatus@led_count,c
  1850  001D3A                     l3904:
  1851                           
  1852                           ;mouse.c: 376: led_count--;
  1853  001D3A  0630               	decf	BlinkUSBStatus@led_count,f,c
  1854  001D3C  A0D8               	btfss	status,0,c
  1855  001D3E  0631               	decf	BlinkUSBStatus@led_count+1,f,c
  1856                           
  1857                           ;mouse.c: 383: if (UCONbits.SUSPND == 1) {
  1858  001D40  A265               	btfss	3941,1,c	;volatile
  1859  001D42  D018               	goto	l3916
  1860                           
  1861                           ;mouse.c: 384: if (led_count == 0) {
  1862  001D44  5030               	movf	BlinkUSBStatus@led_count,w,c
  1863  001D46  1031               	iorwf	BlinkUSBStatus@led_count+1,w,c
  1864  001D48  A4D8               	btfss	status,2,c
  1865  001D4A  0012               	return	
  1866                           
  1867                           ;mouse.c: 385: LATEbits.LATE0 = !LATEbits.LATE0;;
  1868  001D4C  B08D               	btfsc	3981,0,c	;volatile
  1869  001D4E  D004               	goto	u3200
  1870  001D50  0100               	movlb	0	; () banked
  1871  001D52  6BA5               	clrf	??_BlinkUSBStatus& (0+255),b
  1872  001D54  2BA5               	incf	??_BlinkUSBStatus& (0+255),f,b
  1873  001D56  D002               	goto	u3218
  1874  001D58                     u3200:
  1875  001D58  0100               	movlb	0	; () banked
  1876  001D5A  6BA5               	clrf	??_BlinkUSBStatus& (0+255),b
  1877  001D5C                     u3218:
  1878  001D5C  508D               	movf	3981,w,c	;volatile
  1879  001D5E  0100               	movlb	0	; () banked
  1880  001D60  19A5               	xorwf	??_BlinkUSBStatus& (0+255),w,b
  1881  001D62  0BFE               	andlw	-2
  1882  001D64  19A5               	xorwf	??_BlinkUSBStatus& (0+255),w,b
  1883  001D66  6E8D               	movwf	3981,c	;volatile
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;mouse.c: 386: if (LATEbits.LATE0) {
  1887  001D68  A08D               	btfss	3981,0,c	;volatile
  1888  001D6A  D002               	goto	l343
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;mouse.c: 387: LATEbits.LATE1 = 1;;
  1892  001D6C  828D               	bsf	3981,1,c	;volatile
  1893                           
  1894                           ;mouse.c: 388: } else {
  1895  001D6E  0012               	return	
  1896  001D70                     l343:
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;mouse.c: 389: LATEbits.LATE1 = 0;;
  1900  001D70  928D               	bcf	3981,1,c	;volatile
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;mouse.c: 390: }
  1904                           ;mouse.c: 391: }
  1905                           ;mouse.c: 392: } else {
  1906                           
  1907                           ; BSR set to: 0
  1908  001D72  0012               	return	
  1909  001D74                     l3916:
  1910                           
  1911                           ;mouse.c: 393: if (USBDeviceState == DETACHED_STATE) {
  1912  001D74  0100               	movlb	0	; () banked
  1913  001D76  5183               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1914  001D78  A4D8               	btfss	status,2,c
  1915  001D7A  D003               	goto	l3920
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;mouse.c: 394: {LATEbits.LATE0 = 0;;LATEbits.LATE1 = 0;;};
  1919  001D7C  908D               	bcf	3981,0,c	;volatile
  1920  001D7E  928D               	bcf	3981,1,c	;volatile
  1921                           
  1922                           ;mouse.c: 395: } else if (USBDeviceState == ATTACHED_STATE) {
  1923  001D80  0012               	return	
  1924  001D82                     l3920:
  1925                           
  1926                           ; BSR set to: 0
  1927  001D82  0100               	movlb	0	; () banked
  1928  001D84  0583               	decf	_USBDeviceState& (0+255),w,b	;volatile
  1929  001D86  A4D8               	btfss	status,2,c
  1930  001D88  D003               	goto	l3924
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;mouse.c: 396: {LATEbits.LATE0 = 1;;LATEbits.LATE1 = 1;;};
  1934  001D8A  808D               	bsf	3981,0,c	;volatile
  1935  001D8C  828D               	bsf	3981,1,c	;volatile
  1936                           
  1937                           ;mouse.c: 397: } else if (USBDeviceState == POWERED_STATE) {
  1938  001D8E  0012               	return	
  1939  001D90                     l3924:
  1940                           
  1941                           ; BSR set to: 0
  1942  001D90  0E02               	movlw	2
  1943  001D92  0100               	movlb	0	; () banked
  1944  001D94  1983               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  1945  001D96  A4D8               	btfss	status,2,c
  1946  001D98  D003               	goto	l3928
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;mouse.c: 398: {LATEbits.LATE0 = 1;;LATEbits.LATE1 = 0;;};
  1950  001D9A  808D               	bsf	3981,0,c	;volatile
  1951  001D9C  928D               	bcf	3981,1,c	;volatile
  1952                           
  1953                           ;mouse.c: 399: } else if (USBDeviceState == DEFAULT_STATE) {
  1954  001D9E  0012               	return	
  1955  001DA0                     l3928:
  1956                           
  1957                           ; BSR set to: 0
  1958  001DA0  0E04               	movlw	4
  1959  001DA2  0100               	movlb	0	; () banked
  1960  001DA4  1983               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  1961  001DA6  A4D8               	btfss	status,2,c
  1962  001DA8  D003               	goto	l3932
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;mouse.c: 400: {LATEbits.LATE0 = 0;;LATEbits.LATE1 = 1;;};
  1966  001DAA  908D               	bcf	3981,0,c	;volatile
  1967  001DAC  828D               	bsf	3981,1,c	;volatile
  1968                           
  1969                           ;mouse.c: 401: } else if (USBDeviceState == ADDRESS_STATE) {
  1970  001DAE  0012               	return	
  1971  001DB0                     l3932:
  1972                           
  1973                           ; BSR set to: 0
  1974  001DB0  0E10               	movlw	16
  1975  001DB2  0100               	movlb	0	; () banked
  1976  001DB4  1983               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  1977  001DB6  A4D8               	btfss	status,2,c
  1978  001DB8  D014               	goto	l3940
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;mouse.c: 402: if (led_count == 0) {
  1982  001DBA  5030               	movf	BlinkUSBStatus@led_count,w,c
  1983  001DBC  1031               	iorwf	BlinkUSBStatus@led_count+1,w,c
  1984  001DBE  A4D8               	btfss	status,2,c
  1985  001DC0  0012               	return	
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;mouse.c: 403: LATEbits.LATE0 = !LATEbits.LATE0;;
  1989  001DC2  B08D               	btfsc	3981,0,c	;volatile
  1990  001DC4  D004               	goto	u3290
  1991  001DC6  0100               	movlb	0	; () banked
  1992  001DC8  6BA5               	clrf	??_BlinkUSBStatus& (0+255),b
  1993  001DCA  2BA5               	incf	??_BlinkUSBStatus& (0+255),f,b
  1994  001DCC  D002               	goto	u3308
  1995  001DCE                     u3290:
  1996  001DCE  0100               	movlb	0	; () banked
  1997  001DD0  6BA5               	clrf	??_BlinkUSBStatus& (0+255),b
  1998  001DD2                     u3308:
  1999  001DD2  508D               	movf	3981,w,c	;volatile
  2000  001DD4  0100               	movlb	0	; () banked
  2001  001DD6  19A5               	xorwf	??_BlinkUSBStatus& (0+255),w,b
  2002  001DD8  0BFE               	andlw	-2
  2003  001DDA  19A5               	xorwf	??_BlinkUSBStatus& (0+255),w,b
  2004  001DDC  6E8D               	movwf	3981,c	;volatile
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;mouse.c: 404: LATEbits.LATE1 = 0;;
  2008  001DDE  928D               	bcf	3981,1,c	;volatile
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;mouse.c: 405: }
  2012                           ;mouse.c: 406: } else if (USBDeviceState == CONFIGURED_STATE) {
  2013  001DE0  0012               	return	
  2014  001DE2                     l3940:
  2015                           
  2016                           ; BSR set to: 0
  2017  001DE2  0E20               	movlw	32
  2018  001DE4  0100               	movlb	0	; () banked
  2019  001DE6  1983               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  2020  001DE8  A4D8               	btfss	status,2,c
  2021  001DEA  0012               	return	
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;mouse.c: 407: if (led_count == 0) {
  2025  001DEC  5030               	movf	BlinkUSBStatus@led_count,w,c
  2026  001DEE  1031               	iorwf	BlinkUSBStatus@led_count+1,w,c
  2027  001DF0  A4D8               	btfss	status,2,c
  2028  001DF2  0012               	return	
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;mouse.c: 408: LATEbits.LATE0 = !LATEbits.LATE0;;
  2032  001DF4  B08D               	btfsc	3981,0,c	;volatile
  2033  001DF6  D004               	goto	u3330
  2034  001DF8  0100               	movlb	0	; () banked
  2035  001DFA  6BA5               	clrf	??_BlinkUSBStatus& (0+255),b
  2036  001DFC  2BA5               	incf	??_BlinkUSBStatus& (0+255),f,b
  2037  001DFE  D002               	goto	u3348
  2038  001E00                     u3330:
  2039  001E00  0100               	movlb	0	; () banked
  2040  001E02  6BA5               	clrf	??_BlinkUSBStatus& (0+255),b
  2041  001E04                     u3348:
  2042  001E04  508D               	movf	3981,w,c	;volatile
  2043  001E06  0100               	movlb	0	; () banked
  2044  001E08  19A5               	xorwf	??_BlinkUSBStatus& (0+255),w,b
  2045  001E0A  0BFE               	andlw	-2
  2046  001E0C  19A5               	xorwf	??_BlinkUSBStatus& (0+255),w,b
  2047  001E0E  6E8D               	movwf	3981,c	;volatile
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;mouse.c: 409: if (LATEbits.LATE0) {
  2051  001E10  A08D               	btfss	3981,0,c	;volatile
  2052  001E12  D002               	goto	l359
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;mouse.c: 410: LATEbits.LATE1 = 0;;
  2056  001E14  928D               	bcf	3981,1,c	;volatile
  2057                           
  2058                           ;mouse.c: 411: } else {
  2059  001E16  0012               	return	
  2060  001E18                     l359:
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;mouse.c: 412: LATEbits.LATE1 = 1;;
  2064  001E18  828D               	bsf	3981,1,c	;volatile
  2065                           
  2066                           ; BSR set to: 0
  2067                           
  2068                           ; BSR set to: 0
  2069                           
  2070                           ; BSR set to: 0
  2071                           
  2072                           ; BSR set to: 0
  2073                           
  2074                           ; BSR set to: 0
  2075                           
  2076                           ; BSR set to: 0
  2077                           
  2078                           ; BSR set to: 0
  2079                           
  2080                           ; BSR set to: 0
  2081  001E1A  0012               	return	
  2082  001E1C                     __end_of_BlinkUSBStatus:
  2083                           	opt stack 0
  2084                           prodh	equ	0xFF4
  2085                           prodl	equ	0xFF3
  2086                           intcon	equ	0xFF2
  2087                           postinc0	equ	0xFEE
  2088                           wreg	equ	0xFE8
  2089                           indf2	equ	0xFDF
  2090                           postinc2	equ	0xFDE
  2091                           postdec2	equ	0xFDD
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function _LCDWriteLine *****************
  2097 ;; Defined at:
  2098 ;;		line 59 in file "../usb_lab/LCD.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  str             2   27[BANK0 ] PTR const unsigned char 
  2101 ;;		 -> STR_1(15), LCDScroll@str(17), 
  2102 ;;  line            1   29[BANK0 ] unsigned char 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;		None               void
  2107 ;; Registers used:
  2108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2114 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;Total ram usage:        3 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:   15
  2121 ;; This function calls:
  2122 ;;		_LCDSetPos
  2123 ;;		_LCDWriteData
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;;		_LCDScroll
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text8
  2131  001912                     __ptext8:
  2132                           	opt stack 0
  2133  001912                     _LCDWriteLine:
  2134                           	opt stack 15
  2135                           
  2136                           ;LCD.c: 60: if (line >= 2) {
  2137                           
  2138                           ;incstack = 0
  2139  001912  0E01               	movlw	1
  2140  001914  0100               	movlb	0	; () banked
  2141  001916  65B4               	cpfsgt	LCDWriteLine@line& (0+255),b
  2142  001918  D001               	goto	l4152
  2143  00191A  0012               	return	
  2144  00191C                     l4152:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;LCD.c: 62: }
  2148                           ;LCD.c: 63: LCDSetPos(line, 0);
  2149  00191C  C0B4  F0AB         	movff	LCDWriteLine@line,LCDSetPos@row
  2150  001920  0100               	movlb	0	; () banked
  2151  001922  6BAC               	clrf	(LCDSetPos@row+1)& (0+255),b
  2152  001924  0E00               	movlw	0
  2153  001926  0100               	movlb	0	; () banked
  2154  001928  6FAE               	movwf	(LCDSetPos@col+1)& (0+255),b
  2155  00192A  0E00               	movlw	0
  2156  00192C  6FAD               	movwf	LCDSetPos@col& (0+255),b
  2157  00192E  ECDE  F013         	call	_LCDSetPos	;wreg free
  2158                           
  2159                           ;LCD.c: 64: while (*str) {
  2160  001932  D068               	goto	l4172
  2161  001934                     l4154:
  2162                           
  2163                           ;LCD.c: 65: if (*str == '\n') {
  2164  001934  C0B2  FFF6         	movff	LCDWriteLine@str,tblptrl
  2165  001938  C0B3  FFF7         	movff	LCDWriteLine@str+1,tblptrh
  2166  00193C  0E00               	movlw	low (__smallconst shr (0+16))
  2167  00193E  6EF8               	movwf	tblptru,c
  2168  001940  0E0E               	movlw	(high __ramtop+-1)
  2169  001942  64F7               	cpfsgt	tblptrh,c
  2170  001944  D003               	bra	u3687
  2171  001946  0008               	tblrd		*
  2172  001948  50F5               	movf	tablat,w,c
  2173  00194A  D005               	bra	u3680
  2174  00194C                     u3687:
  2175  00194C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2176  001950  CFF7 FFEA          	movff	tblptrh,fsr0h
  2177  001954  50EF               	movf	indf0,w,c
  2178  001956                     u3680:
  2179  001956  0A0A               	xorlw	10
  2180  001958  A4D8               	btfss	status,2,c
  2181  00195A  D00A               	goto	l4162
  2182                           
  2183                           ;LCD.c: 66: ++line;
  2184  00195C  0100               	movlb	0	; () banked
  2185  00195E  2BB4               	incf	LCDWriteLine@line& (0+255),f,b
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;LCD.c: 67: if (line == 2) {
  2189  001960  0E02               	movlw	2
  2190  001962  0100               	movlb	0	; () banked
  2191  001964  19B4               	xorwf	LCDWriteLine@line& (0+255),w,b
  2192  001966  A4D8               	btfss	status,2,c
  2193  001968  D003               	goto	l4162
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;LCD.c: 68: line = 0;
  2197  00196A  0E00               	movlw	0
  2198  00196C  0100               	movlb	0	; () banked
  2199  00196E  6FB4               	movwf	LCDWriteLine@line& (0+255),b
  2200  001970                     l4162:
  2201                           
  2202                           ;LCD.c: 69: }
  2203                           ;LCD.c: 70: }
  2204                           ;LCD.c: 71: if (*str == '\r' || *str == '\n') {
  2205  001970  C0B2  FFF6         	movff	LCDWriteLine@str,tblptrl
  2206  001974  C0B3  FFF7         	movff	LCDWriteLine@str+1,tblptrh
  2207  001978  0E00               	movlw	low (__smallconst shr (0+16))
  2208  00197A  6EF8               	movwf	tblptru,c
  2209  00197C  0E0E               	movlw	(high __ramtop+-1)
  2210  00197E  64F7               	cpfsgt	tblptrh,c
  2211  001980  D003               	bra	u3717
  2212  001982  0008               	tblrd		*
  2213  001984  50F5               	movf	tablat,w,c
  2214  001986  D005               	bra	u3710
  2215  001988                     u3717:
  2216  001988  CFF6 FFE9          	movff	tblptrl,fsr0l
  2217  00198C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2218  001990  50EF               	movf	indf0,w,c
  2219  001992                     u3710:
  2220  001992  0A0D               	xorlw	13
  2221  001994  B4D8               	btfsc	status,2,c
  2222  001996  D014               	goto	l4166
  2223  001998  C0B2  FFF6         	movff	LCDWriteLine@str,tblptrl
  2224  00199C  C0B3  FFF7         	movff	LCDWriteLine@str+1,tblptrh
  2225  0019A0  0E00               	movlw	low (__smallconst shr (0+16))
  2226  0019A2  6EF8               	movwf	tblptru,c
  2227  0019A4  0E0E               	movlw	(high __ramtop+-1)
  2228  0019A6  64F7               	cpfsgt	tblptrh,c
  2229  0019A8  D003               	bra	u3737
  2230  0019AA  0008               	tblrd		*
  2231  0019AC  50F5               	movf	tablat,w,c
  2232  0019AE  D005               	bra	u3730
  2233  0019B0                     u3737:
  2234  0019B0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2235  0019B4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2236  0019B8  50EF               	movf	indf0,w,c
  2237  0019BA                     u3730:
  2238  0019BA  0A0A               	xorlw	10
  2239  0019BC  A4D8               	btfss	status,2,c
  2240  0019BE  D00C               	goto	l4168
  2241  0019C0                     l4166:
  2242                           
  2243                           ;LCD.c: 72: LCDSetPos(line, 0);
  2244  0019C0  C0B4  F0AB         	movff	LCDWriteLine@line,LCDSetPos@row
  2245  0019C4  0100               	movlb	0	; () banked
  2246  0019C6  6BAC               	clrf	(LCDSetPos@row+1)& (0+255),b
  2247  0019C8  0E00               	movlw	0
  2248  0019CA  0100               	movlb	0	; () banked
  2249  0019CC  6FAE               	movwf	(LCDSetPos@col+1)& (0+255),b
  2250  0019CE  0E00               	movlw	0
  2251  0019D0  6FAD               	movwf	LCDSetPos@col& (0+255),b
  2252  0019D2  ECDE  F013         	call	_LCDSetPos	;wreg free
  2253                           
  2254                           ;LCD.c: 73: } else {
  2255  0019D6  D013               	goto	l4170
  2256  0019D8                     l4168:
  2257                           
  2258                           ;LCD.c: 74: LCDWriteData(*str);
  2259  0019D8  C0B2  FFF6         	movff	LCDWriteLine@str,tblptrl
  2260  0019DC  C0B3  FFF7         	movff	LCDWriteLine@str+1,tblptrh
  2261  0019E0  0E00               	movlw	low (__smallconst shr (0+16))
  2262  0019E2  6EF8               	movwf	tblptru,c
  2263  0019E4  0E0E               	movlw	(high __ramtop+-1)
  2264  0019E6  64F7               	cpfsgt	tblptrh,c
  2265  0019E8  D003               	bra	u3757
  2266  0019EA  0008               	tblrd		*
  2267  0019EC  50F5               	movf	tablat,w,c
  2268  0019EE  D005               	bra	u3750
  2269  0019F0                     u3757:
  2270  0019F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2271  0019F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2272  0019F8  50EF               	movf	indf0,w,c
  2273  0019FA                     u3750:
  2274  0019FA  EC06  F016         	call	_LCDWriteData
  2275  0019FE                     l4170:
  2276                           
  2277                           ;LCD.c: 75: }
  2278                           ;LCD.c: 76: ++str;
  2279  0019FE  0100               	movlb	0	; () banked
  2280  001A00  4BB2               	infsnz	LCDWriteLine@str& (0+255),f,b
  2281  001A02  2BB3               	incf	(LCDWriteLine@str+1)& (0+255),f,b
  2282  001A04                     l4172:
  2283  001A04  C0B2  FFF6         	movff	LCDWriteLine@str,tblptrl
  2284  001A08  C0B3  FFF7         	movff	LCDWriteLine@str+1,tblptrh
  2285  001A0C  0E00               	movlw	low (__smallconst shr (0+16))
  2286  001A0E  6EF8               	movwf	tblptru,c
  2287  001A10  0E0E               	movlw	(high __ramtop+-1)
  2288  001A12  64F7               	cpfsgt	tblptrh,c
  2289  001A14  D003               	bra	u3767
  2290  001A16  0008               	tblrd		*
  2291  001A18  50F5               	movf	tablat,w,c
  2292  001A1A  D005               	bra	u3760
  2293  001A1C                     u3767:
  2294  001A1C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2295  001A20  CFF7 FFEA          	movff	tblptrh,fsr0h
  2296  001A24  50EF               	movf	indf0,w,c
  2297  001A26                     u3760:
  2298  001A26  0900               	iorlw	0
  2299  001A28  B4D8               	btfsc	status,2,c
  2300  001A2A  0012               	return	
  2301  001A2C  D783               	goto	l4154
  2302  001A2E                     __end_of_LCDWriteLine:
  2303                           	opt stack 0
  2304                           tblptru	equ	0xFF8
  2305                           tblptrh	equ	0xFF7
  2306                           tblptrl	equ	0xFF6
  2307                           tablat	equ	0xFF5
  2308                           prodh	equ	0xFF4
  2309                           prodl	equ	0xFF3
  2310                           intcon	equ	0xFF2
  2311                           indf0	equ	0xFEF
  2312                           postinc0	equ	0xFEE
  2313                           fsr0h	equ	0xFEA
  2314                           fsr0l	equ	0xFE9
  2315                           wreg	equ	0xFE8
  2316                           indf2	equ	0xFDF
  2317                           postinc2	equ	0xFDE
  2318                           postdec2	equ	0xFDD
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function _LCDWriteData *****************
  2324 ;; Defined at:
  2325 ;;		line 197 in file "../usb_lab/LCD.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  c               1    wreg     unsigned char 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  c               1   19[BANK0 ] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;		None               void
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2342 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2343 ;;Total ram usage:        1 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:   13
  2346 ;; This function calls:
  2347 ;;		_LCDWriteByte
  2348 ;;		_shortDelay
  2349 ;;		_wait
  2350 ;; This function is called by:
  2351 ;;		_LCDWriteLine
  2352 ;;		_LCDPutStr
  2353 ;;		_LCDClearLine
  2354 ;;		_LCDPutChar
  2355 ;;		_LCDLoadCustomChar
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text9
  2360  002C0C                     __ptext9:
  2361                           	opt stack 0
  2362  002C0C                     _LCDWriteData:
  2363                           	opt stack 16
  2364                           
  2365                           ;incstack = 0
  2366                           ;LCDWriteData@c stored from wreg
  2367  002C0C  0100               	movlb	0	; () banked
  2368  002C0E  6FAA               	movwf	LCDWriteData@c& (0+255),b
  2369                           
  2370                           ;LCD.c: 198: wait();
  2371  002C10  EC50  F016         	call	_wait	;wreg free
  2372                           
  2373                           ;LCD.c: 199: LCDWriteByte(c, 1);
  2374  002C14  0E01               	movlw	1
  2375  002C16  0100               	movlb	0	; () banked
  2376  002C18  6FA7               	movwf	LCDWriteByte@rs& (0+255),b
  2377  002C1A  0100               	movlb	0	; () banked
  2378  002C1C  51AA               	movf	LCDWriteData@c& (0+255),w,b
  2379  002C1E  EC96  F014         	call	_LCDWriteByte
  2380                           
  2381                           ;LCD.c: 200: shortDelay();
  2382  002C22  EC49  F016         	call	_shortDelay	;wreg free
  2383  002C26  0012               	return		;funcret
  2384  002C28                     __end_of_LCDWriteData:
  2385                           	opt stack 0
  2386                           tblptru	equ	0xFF8
  2387                           tblptrh	equ	0xFF7
  2388                           tblptrl	equ	0xFF6
  2389                           tablat	equ	0xFF5
  2390                           prodh	equ	0xFF4
  2391                           prodl	equ	0xFF3
  2392                           intcon	equ	0xFF2
  2393                           indf0	equ	0xFEF
  2394                           postinc0	equ	0xFEE
  2395                           fsr0h	equ	0xFEA
  2396                           fsr0l	equ	0xFE9
  2397                           wreg	equ	0xFE8
  2398                           indf2	equ	0xFDF
  2399                           postinc2	equ	0xFDE
  2400                           postdec2	equ	0xFDD
  2401                           fsr2h	equ	0xFDA
  2402                           fsr2l	equ	0xFD9
  2403                           status	equ	0xFD8
  2404                           
  2405 ;; *************** function _LCDSetPos *****************
  2406 ;; Defined at:
  2407 ;;		line 96 in file "../usb_lab/LCD.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  row             2   20[BANK0 ] int 
  2410 ;;  col             2   22[BANK0 ] int 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  pos             2   25[BANK0 ] int 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;		None               void
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2422 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2425 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;Total ram usage:        7 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:   14
  2429 ;; This function calls:
  2430 ;;		_LCDCommand
  2431 ;;		_calculateBase
  2432 ;; This function is called by:
  2433 ;;		_LCDWriteLine
  2434 ;;		_LCDClearLine
  2435 ;;		_LCDReadLine
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text10
  2440  0027BC                     __ptext10:
  2441                           	opt stack 0
  2442  0027BC                     _LCDSetPos:
  2443                           	opt stack 15
  2444                           
  2445                           ;LCD.c: 97: int pos;
  2446                           ;LCD.c: 98: if (row < 0 || col < 0 || row >= 2 || col >= 16) {
  2447                           
  2448                           ;incstack = 0
  2449  0027BC  0100               	movlb	0	; () banked
  2450  0027BE  BFAC               	btfsc	(LCDSetPos@row+1)& (0+255),7,b
  2451  0027C0  0012               	return	
  2452                           
  2453                           ; BSR set to: 0
  2454  0027C2  0100               	movlb	0	; () banked
  2455  0027C4  BFAE               	btfsc	(LCDSetPos@col+1)& (0+255),7,b
  2456  0027C6  0012               	return	
  2457                           
  2458                           ; BSR set to: 0
  2459  0027C8  0100               	movlb	0	; () banked
  2460  0027CA  BFAC               	btfsc	(LCDSetPos@row+1)& (0+255),7,b
  2461  0027CC  D008               	goto	l3804
  2462  0027CE  0100               	movlb	0	; () banked
  2463  0027D0  51AC               	movf	(LCDSetPos@row+1)& (0+255),w,b
  2464  0027D2  E126               	bnz	l95
  2465  0027D4  0E02               	movlw	2
  2466  0027D6  0100               	movlb	0	; () banked
  2467  0027D8  5DAB               	subwf	LCDSetPos@row& (0+255),w,b
  2468  0027DA  B0D8               	btfsc	status,0,c
  2469  0027DC  0012               	return	
  2470  0027DE                     l3804:
  2471                           
  2472                           ; BSR set to: 0
  2473  0027DE  0100               	movlb	0	; () banked
  2474  0027E0  BFAE               	btfsc	(LCDSetPos@col+1)& (0+255),7,b
  2475  0027E2  D008               	goto	l3806
  2476  0027E4  0100               	movlb	0	; () banked
  2477  0027E6  51AE               	movf	(LCDSetPos@col+1)& (0+255),w,b
  2478  0027E8  E11B               	bnz	l95
  2479  0027EA  0E10               	movlw	16
  2480  0027EC  0100               	movlb	0	; () banked
  2481  0027EE  5DAD               	subwf	LCDSetPos@col& (0+255),w,b
  2482  0027F0  B0D8               	btfsc	status,0,c
  2483  0027F2  0012               	return	
  2484  0027F4                     l3806:
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;LCD.c: 100: }
  2488                           ;LCD.c: 101: pos = calculateBase(row) + col;
  2489  0027F4  0100               	movlb	0	; () banked
  2490  0027F6  51AB               	movf	LCDSetPos@row& (0+255),w,b
  2491  0027F8  ECBA  F015         	call	_calculateBase
  2492  0027FC  0100               	movlb	0	; () banked
  2493  0027FE  6FAF               	movwf	??_LCDSetPos& (0+255),b
  2494  002800  0100               	movlb	0	; () banked
  2495  002802  51AF               	movf	??_LCDSetPos& (0+255),w,b
  2496  002804  0100               	movlb	0	; () banked
  2497  002806  25AD               	addwf	LCDSetPos@col& (0+255),w,b
  2498  002808  0100               	movlb	0	; () banked
  2499  00280A  6FB0               	movwf	LCDSetPos@pos& (0+255),b
  2500  00280C  0E00               	movlw	0
  2501  00280E  0100               	movlb	0	; () banked
  2502  002810  21AE               	addwfc	(LCDSetPos@col+1)& (0+255),w,b
  2503  002812  0100               	movlb	0	; () banked
  2504  002814  6FB1               	movwf	(LCDSetPos@pos+1)& (0+255),b
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;LCD.c: 102: LCDCommand(128 + pos);
  2508  002816  0100               	movlb	0	; () banked
  2509  002818  51B0               	movf	LCDSetPos@pos& (0+255),w,b
  2510  00281A  0F80               	addlw	128
  2511  00281C  EC14  F016         	call	_LCDCommand
  2512  002820                     l95:
  2513  002820  0012               	return		;funcret
  2514  002822                     __end_of_LCDSetPos:
  2515                           	opt stack 0
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           prodh	equ	0xFF4
  2521                           prodl	equ	0xFF3
  2522                           intcon	equ	0xFF2
  2523                           indf0	equ	0xFEF
  2524                           postinc0	equ	0xFEE
  2525                           fsr0h	equ	0xFEA
  2526                           fsr0l	equ	0xFE9
  2527                           wreg	equ	0xFE8
  2528                           indf2	equ	0xFDF
  2529                           postinc2	equ	0xFDE
  2530                           postdec2	equ	0xFDD
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           status	equ	0xFD8
  2534                           
  2535 ;; *************** function _calculateBase *****************
  2536 ;; Defined at:
  2537 ;;		line 225 in file "../usb_lab/LCD.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  line            1    wreg     unsigned char 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  line            1   15[BANK0 ] unsigned char 
  2542 ;;  base            1   14[BANK0 ] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      unsigned char 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0, prodl, prodh
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2553 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2556 ;;Total ram usage:        2 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:   11
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_LCDSetPos
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text11
  2567  002B74                     __ptext11:
  2568                           	opt stack 0
  2569  002B74                     _calculateBase:
  2570                           	opt stack 17
  2571                           
  2572                           ;incstack = 0
  2573                           ;calculateBase@line stored from wreg
  2574  002B74  0100               	movlb	0	; () banked
  2575  002B76  6FA6               	movwf	calculateBase@line& (0+255),b
  2576                           
  2577                           ;LCD.c: 226: char base;
  2578                           ;LCD.c: 227: if (line % 2 == 0) {
  2579  002B78  0100               	movlb	0	; () banked
  2580  002B7A  B1A6               	btfsc	calculateBase@line& (0+255),0,b
  2581  002B7C  D006               	goto	l3610
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;LCD.c: 228: base = line * 10;
  2585  002B7E  0100               	movlb	0	; () banked
  2586  002B80  51A6               	movf	calculateBase@line& (0+255),w,b
  2587  002B82  0D0A               	mullw	10
  2588  002B84  CFF3 F0A5          	movff	prodl,calculateBase@base
  2589                           
  2590                           ;LCD.c: 229: } else {
  2591  002B88  D007               	goto	l3612
  2592  002B8A                     l3610:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;LCD.c: 230: base = 54 + line * 10;
  2596  002B8A  0100               	movlb	0	; () banked
  2597  002B8C  51A6               	movf	calculateBase@line& (0+255),w,b
  2598  002B8E  0D0A               	mullw	10
  2599  002B90  50F3               	movf	prodl,w,c
  2600  002B92  0F36               	addlw	54
  2601  002B94  0100               	movlb	0	; () banked
  2602  002B96  6FA5               	movwf	calculateBase@base& (0+255),b
  2603  002B98                     l3612:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;LCD.c: 231: }
  2607                           ;LCD.c: 232: return base;
  2608  002B98  0100               	movlb	0	; () banked
  2609  002B9A  51A5               	movf	calculateBase@base& (0+255),w,b
  2610  002B9C  0012               	return	
  2611  002B9E                     __end_of_calculateBase:
  2612                           	opt stack 0
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           prodh	equ	0xFF4
  2618                           prodl	equ	0xFF3
  2619                           intcon	equ	0xFF2
  2620                           indf0	equ	0xFEF
  2621                           postinc0	equ	0xFEE
  2622                           fsr0h	equ	0xFEA
  2623                           fsr0l	equ	0xFE9
  2624                           wreg	equ	0xFE8
  2625                           indf2	equ	0xFDF
  2626                           postinc2	equ	0xFDE
  2627                           postdec2	equ	0xFDD
  2628                           fsr2h	equ	0xFDA
  2629                           fsr2l	equ	0xFD9
  2630                           status	equ	0xFD8
  2631                           
  2632 ;; *************** function _LCDCommand *****************
  2633 ;; Defined at:
  2634 ;;		line 187 in file "../usb_lab/LCD.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  command         1    wreg     unsigned char 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  command         1   19[BANK0 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;		None               void
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2652 ;;Total ram usage:        1 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:   13
  2655 ;; This function calls:
  2656 ;;		_LCDWriteByte
  2657 ;;		_shortDelay
  2658 ;;		_wait
  2659 ;; This function is called by:
  2660 ;;		_LCDSetPos
  2661 ;;		_LCDClear
  2662 ;;		_LCDLoadCustomChar
  2663 ;;		_LCDScroll
  2664 ;;		_LCDDisplay
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text12
  2669  002C28                     __ptext12:
  2670                           	opt stack 0
  2671  002C28                     _LCDCommand:
  2672                           	opt stack 15
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;incstack = 0
  2676                           ;LCDCommand@command stored from wreg
  2677  002C28  0100               	movlb	0	; () banked
  2678  002C2A  6FAA               	movwf	LCDCommand@command& (0+255),b
  2679                           
  2680                           ;LCD.c: 188: wait();
  2681  002C2C  EC50  F016         	call	_wait	;wreg free
  2682                           
  2683                           ;LCD.c: 189: LCDWriteByte(command, 0);
  2684  002C30  0E00               	movlw	0
  2685  002C32  0100               	movlb	0	; () banked
  2686  002C34  6FA7               	movwf	LCDWriteByte@rs& (0+255),b
  2687  002C36  0100               	movlb	0	; () banked
  2688  002C38  51AA               	movf	LCDCommand@command& (0+255),w,b
  2689  002C3A  EC96  F014         	call	_LCDWriteByte
  2690                           
  2691                           ;LCD.c: 190: shortDelay();
  2692  002C3E  EC49  F016         	call	_shortDelay	;wreg free
  2693  002C42  0012               	return		;funcret
  2694  002C44                     __end_of_LCDCommand:
  2695                           	opt stack 0
  2696                           tblptru	equ	0xFF8
  2697                           tblptrh	equ	0xFF7
  2698                           tblptrl	equ	0xFF6
  2699                           tablat	equ	0xFF5
  2700                           prodh	equ	0xFF4
  2701                           prodl	equ	0xFF3
  2702                           intcon	equ	0xFF2
  2703                           indf0	equ	0xFEF
  2704                           postinc0	equ	0xFEE
  2705                           fsr0h	equ	0xFEA
  2706                           fsr0l	equ	0xFE9
  2707                           wreg	equ	0xFE8
  2708                           indf2	equ	0xFDF
  2709                           postinc2	equ	0xFDE
  2710                           postdec2	equ	0xFDD
  2711                           fsr2h	equ	0xFDA
  2712                           fsr2l	equ	0xFD9
  2713                           status	equ	0xFD8
  2714                           
  2715 ;; *************** function _wait *****************
  2716 ;; Defined at:
  2717 ;;		line 235 in file "../usb_lab/LCD.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;		None               void
  2724 ;; Registers used:
  2725 ;;		None
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;Total ram usage:        0 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:   11
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_LCDCommand
  2742 ;;		_LCDWriteData
  2743 ;;		_LCDReadData
  2744 ;;		_LCDGetAC
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text13
  2749  002CA0                     __ptext13:
  2750                           	opt stack 0
  2751  002CA0                     _wait:
  2752                           	opt stack 17
  2753                           
  2754                           ;incstack = 0
  2755  002CA0  0012               	return		;funcret
  2756  002CA2                     __end_of_wait:
  2757                           	opt stack 0
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon	equ	0xFF2
  2765                           indf0	equ	0xFEF
  2766                           postinc0	equ	0xFEE
  2767                           fsr0h	equ	0xFEA
  2768                           fsr0l	equ	0xFE9
  2769                           wreg	equ	0xFE8
  2770                           indf2	equ	0xFDF
  2771                           postinc2	equ	0xFDE
  2772                           postdec2	equ	0xFDD
  2773                           fsr2h	equ	0xFDA
  2774                           fsr2l	equ	0xFD9
  2775                           status	equ	0xFD8
  2776                           
  2777 ;; *************** function _shortDelay *****************
  2778 ;; Defined at:
  2779 ;;		line 247 in file "../usb_lab/LCD.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;		None               void
  2786 ;; Registers used:
  2787 ;;		wreg
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2797 ;;Total ram usage:        0 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:   11
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_LCDCommand
  2804 ;;		_LCDWriteData
  2805 ;;		_LCDReadData
  2806 ;;		_LCDGetAC
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text14
  2811  002C92                     __ptext14:
  2812                           	opt stack 0
  2813  002C92                     _shortDelay:
  2814                           	opt stack 17
  2815                           
  2816                           ;LCD.c: 249: _delay((unsigned long)((40)*(48000000L/4000000.0)));
  2817                           
  2818                           ;incstack = 0
  2819  002C92  0EA0               	movlw	160
  2820  002C94                     u4297:
  2821  002C94  2EE8               	decfsz	wreg,f,c
  2822  002C96  D7FE               	goto	u4297
  2823  002C98  0012               	return		;funcret
  2824  002C9A                     __end_of_shortDelay:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           prodh	equ	0xFF4
  2831                           prodl	equ	0xFF3
  2832                           intcon	equ	0xFF2
  2833                           indf0	equ	0xFEF
  2834                           postinc0	equ	0xFEE
  2835                           fsr0h	equ	0xFEA
  2836                           fsr0l	equ	0xFE9
  2837                           wreg	equ	0xFE8
  2838                           indf2	equ	0xFDF
  2839                           postinc2	equ	0xFDE
  2840                           postdec2	equ	0xFDD
  2841                           fsr2h	equ	0xFDA
  2842                           fsr2l	equ	0xFD9
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function _InitializeSystem *****************
  2846 ;; Defined at:
  2847 ;;		line 136 in file "../usb_lab/mouse.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  pll_startup_    2   23[BANK0 ] unsigned int 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;		None               void
  2854 ;; Registers used:
  2855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2862 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2864 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2865 ;;Total ram usage:        2 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:   15
  2868 ;; This function calls:
  2869 ;;		_LCDInit
  2870 ;;		_USBDeviceInit
  2871 ;;		_UserInit
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text15
  2878  0029BE                     __ptext15:
  2879                           	opt stack 0
  2880  0029BE                     _InitializeSystem:
  2881                           	opt stack 15
  2882                           
  2883                           ;mouse.c: 137: ADCON1 |= 0x0F;
  2884                           
  2885                           ;incstack = 0
  2886  0029BE  0E0F               	movlw	15
  2887  0029C0  12C1               	iorwf	4033,f,c	;volatile
  2888                           
  2889                           ;mouse.c: 138: OSCCONbits.IRCF = 0b111;
  2890  0029C2  88D3               	bsf	4051,4,c	;volatile
  2891  0029C4  8AD3               	bsf	4051,5,c	;volatile
  2892  0029C6  8CD3               	bsf	4051,6,c	;volatile
  2893                           
  2894                           ;mouse.c: 139: unsigned int pll_startup_counter = 600;
  2895  0029C8  0E02               	movlw	2
  2896  0029CA  0100               	movlb	0	; () banked
  2897  0029CC  6FAF               	movwf	(InitializeSystem@pll_startup_counter+1)& (0+255),b
  2898  0029CE  0E58               	movlw	88
  2899  0029D0  6FAE               	movwf	InitializeSystem@pll_startup_counter& (0+255),b
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;mouse.c: 140: OSCTUNEbits.PLLEN = 1;
  2903  0029D2  8C9B               	bsf	3995,6,c	;volatile
  2904  0029D4                     l4320:
  2905                           
  2906                           ; BSR set to: 0
  2907  0029D4  0100               	movlb	0	; () banked
  2908  0029D6  07AE               	decf	InitializeSystem@pll_startup_counter& (0+255),f,b
  2909  0029D8  A0D8               	btfss	status,0,c
  2910  0029DA  07AF               	decf	(InitializeSystem@pll_startup_counter+1)& (0+255),f,b
  2911  0029DC  0100               	movlb	0	; () banked
  2912  0029DE  29AE               	incf	InitializeSystem@pll_startup_counter& (0+255),w,b
  2913  0029E0  E1F9               	bnz	l4320
  2914  0029E2  0100               	movlb	0	; () banked
  2915  0029E4  29AF               	incf	(InitializeSystem@pll_startup_counter+1)& (0+255),w,b
  2916  0029E6  A4D8               	btfss	status,2,c
  2917  0029E8  D7F5               	goto	l4320
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;mouse.c: 142: ANCON0 = 0xFF;
  2921  0029EA  010F               	movlb	15	; () banked
  2922  0029EC  6948               	setf	72,b	;volatile
  2923                           
  2924                           ;mouse.c: 143: ANCON1 = 0xFF;
  2925  0029EE  010F               	movlb	15	; () banked
  2926  0029F0  6949               	setf	73,b	;volatile
  2927                           
  2928                           ;mouse.c: 145: TRISCbits.TRISC2 = 1;
  2929  0029F2  8494               	bsf	3988,2,c	;volatile
  2930                           
  2931                           ;mouse.c: 148: TRISCbits.TRISC2 = 1;
  2932  0029F4  8494               	bsf	3988,2,c	;volatile
  2933                           
  2934                           ; BSR set to: 15
  2935                           ;mouse.c: 150: UserInit();
  2936  0029F6  ECBB  F014         	call	_UserInit	;wreg free
  2937                           
  2938                           ;mouse.c: 151: LCDInit();
  2939  0029FA  EC40  F014         	call	_LCDInit	;wreg free
  2940                           
  2941                           ;mouse.c: 152: USBDeviceInit();
  2942  0029FE  ECF2  F009         	call	_USBDeviceInit	;wreg free
  2943  002A02  0012               	return		;funcret
  2944  002A04                     __end_of_InitializeSystem:
  2945                           	opt stack 0
  2946                           tblptru	equ	0xFF8
  2947                           tblptrh	equ	0xFF7
  2948                           tblptrl	equ	0xFF6
  2949                           tablat	equ	0xFF5
  2950                           prodh	equ	0xFF4
  2951                           prodl	equ	0xFF3
  2952                           intcon	equ	0xFF2
  2953                           indf0	equ	0xFEF
  2954                           postinc0	equ	0xFEE
  2955                           fsr0h	equ	0xFEA
  2956                           fsr0l	equ	0xFE9
  2957                           wreg	equ	0xFE8
  2958                           indf2	equ	0xFDF
  2959                           postinc2	equ	0xFDE
  2960                           postdec2	equ	0xFDD
  2961                           fsr2h	equ	0xFDA
  2962                           fsr2l	equ	0xFD9
  2963                           status	equ	0xFD8
  2964                           
  2965 ;; *************** function _UserInit *****************
  2966 ;; Defined at:
  2967 ;;		line 173 in file "../usb_lab/mouse.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;		None
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;		None               void
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;Total ram usage:        0 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:   11
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_InitializeSystem
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text16
  2996  002976                     __ptext16:
  2997                           	opt stack 0
  2998  002976                     _UserInit:
  2999                           	opt stack 18
  3000                           
  3001                           ;mouse.c: 175: LATE &= 0xFC; TRISE &= 0xFC;;
  3002                           
  3003                           ;incstack = 0
  3004  002976  0EFC               	movlw	252
  3005  002978  168D               	andwf	3981,f,c	;volatile
  3006  00297A  0EFC               	movlw	252
  3007  00297C  1696               	andwf	3990,f,c	;volatile
  3008                           
  3009                           ;mouse.c: 178: {TRISBbits.TRISB0=1;;TRISBbits.TRISB2=1;;};
  3010  00297E  8093               	bsf	3987,0,c	;volatile
  3011  002980  8493               	bsf	3987,2,c	;volatile
  3012                           
  3013                           ;mouse.c: 179: old_sw2 = PORTBbits.RB0;
  3014  002982  0E00               	movlw	0
  3015  002984  B081               	btfsc	3969,0,c	;volatile
  3016  002986  0E01               	movlw	1
  3017  002988  6E44               	movwf	_old_sw2,c
  3018                           
  3019                           ;mouse.c: 180: old_sw3 = PORTBbits.RB2;
  3020  00298A  0E00               	movlw	0
  3021  00298C  B481               	btfsc	3969,2,c	;volatile
  3022  00298E  0E01               	movlw	1
  3023  002990  6E45               	movwf	_old_sw3,c
  3024                           
  3025                           ;mouse.c: 183: {TRISAbits.TRISA0=1; ANCON0bits.PCFG0 = 1; ADCON0=0x01; ADCON1=0x9E;};
  3026  002992  8092               	bsf	3986,0,c	;volatile
  3027  002994  010F               	movlb	15	; () banked
  3028  002996  8148               	bsf	72,0,b	;volatile
  3029                           
  3030                           ; BSR set to: 15
  3031  002998  0E01               	movlw	1
  3032  00299A  6EC2               	movwf	4034,c	;volatile
  3033                           
  3034                           ; BSR set to: 15
  3035  00299C  0E9E               	movlw	158
  3036  00299E  6EC1               	movwf	4033,c	;volatile
  3037                           
  3038                           ; BSR set to: 15
  3039                           ;mouse.c: 186: buffer[0] = buffer[1] = buffer[2] = 0;
  3040  0029A0  0E00               	movlw	0
  3041  0029A2  0100               	movlb	0	; () banked
  3042  0029A4  6F79               	movwf	(_buffer+2)& (0+255),b
  3043  0029A6  C079  F078         	movff	_buffer+2,_buffer+1
  3044  0029AA  C078  F077         	movff	_buffer+1,_buffer
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;mouse.c: 190: lastTransmission = 0;
  3048  0029AE  0E00               	movlw	0
  3049  0029B0  0100               	movlb	0	; () banked
  3050  0029B2  6F7E               	movwf	_lastTransmission& (0+255),b
  3051  0029B4  0E00               	movlw	0
  3052  0029B6  0100               	movlb	0	; () banked
  3053  0029B8  6F7F               	movwf	(_lastTransmission+1)& (0+255),b
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;mouse.c: 193: TRISAbits.TRISA5 = 1;
  3057  0029BA  8A92               	bsf	3986,5,c	;volatile
  3058                           
  3059                           ; BSR set to: 0
  3060  0029BC  0012               	return		;funcret
  3061  0029BE                     __end_of_UserInit:
  3062                           	opt stack 0
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           prodh	equ	0xFF4
  3068                           prodl	equ	0xFF3
  3069                           intcon	equ	0xFF2
  3070                           indf0	equ	0xFEF
  3071                           postinc0	equ	0xFEE
  3072                           fsr0h	equ	0xFEA
  3073                           fsr0l	equ	0xFE9
  3074                           wreg	equ	0xFE8
  3075                           indf2	equ	0xFDF
  3076                           postinc2	equ	0xFDE
  3077                           postdec2	equ	0xFDD
  3078                           fsr2h	equ	0xFDA
  3079                           fsr2l	equ	0xFD9
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function _USBDeviceInit *****************
  3083 ;; Defined at:
  3084 ;;		line 460 in file "../usb_lab/usb_device.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  i               1   22[BANK0 ] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;		None               void
  3091 ;; Registers used:
  3092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3099 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3102 ;;Total ram usage:        1 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:   12
  3105 ;; This function calls:
  3106 ;;		_memset
  3107 ;; This function is called by:
  3108 ;;		_InitializeSystem
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text17
  3113  0013E4                     __ptext17:
  3114                           	opt stack 0
  3115  0013E4                     _USBDeviceInit:
  3116                           	opt stack 17
  3117                           
  3118                           ;usb_device.c: 462: BYTE i;
  3119                           ;usb_device.c: 464: {PIE2bits.USBIE = 0;};
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;incstack = 0
  3123  0013E4  98A0               	bcf	4000,4,c	;volatile
  3124                           
  3125                           ;usb_device.c: 467: UEIR = 0;;
  3126  0013E6  0E00               	movlw	0
  3127  0013E8  6E63               	movwf	3939,c	;volatile
  3128                           
  3129                           ;usb_device.c: 470: UIR = 0;;
  3130  0013EA  0E00               	movlw	0
  3131  0013EC  6E62               	movwf	3938,c	;volatile
  3132                           
  3133                           ;usb_device.c: 473: UEP0 = 0;
  3134  0013EE  0E00               	movlw	0
  3135  0013F0  010F               	movlb	15	; () banked
  3136  0013F2  6F26               	movwf	38,b	;volatile
  3137                           
  3138                           ; BSR set to: 15
  3139                           ;usb_device.c: 475: memset((void*)&UEP1,0x00,(1));;
  3140  0013F4  0E27               	movlw	39
  3141  0013F6  0100               	movlb	0	; () banked
  3142  0013F8  6FA5               	movwf	memset@p1& (0+255),b
  3143  0013FA  0E0F               	movlw	15
  3144  0013FC  0100               	movlb	0	; () banked
  3145  0013FE  6FA6               	movwf	(memset@p1+1)& (0+255),b
  3146  001400  0E00               	movlw	0
  3147  001402  0100               	movlb	0	; () banked
  3148  001404  6FA8               	movwf	(memset@c+1)& (0+255),b
  3149  001406  0E00               	movlw	0
  3150  001408  6FA7               	movwf	memset@c& (0+255),b
  3151  00140A  0E00               	movlw	0
  3152  00140C  0100               	movlb	0	; () banked
  3153  00140E  6FAA               	movwf	(memset@n+1)& (0+255),b
  3154  001410  0E01               	movlw	1
  3155  001412  6FA9               	movwf	memset@n& (0+255),b
  3156  001414  EC5B  F015         	call	_memset	;wreg free
  3157                           
  3158                           ;usb_device.c: 477: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3159  001418  0E16               	movlw	22
  3160  00141A  010F               	movlb	15	; () banked
  3161  00141C  6F39               	movwf	57,b	;volatile
  3162                           
  3163                           ; BSR set to: 15
  3164  00141E  0E9F               	movlw	159
  3165  001420  010F               	movlb	15	; () banked
  3166  001422  6F37               	movwf	55,b	;volatile
  3167                           
  3168                           ; BSR set to: 15
  3169  001424  0E7B               	movlw	123
  3170  001426  010F               	movlb	15	; () banked
  3171  001428  6F36               	movwf	54,b	;volatile
  3172                           
  3173                           ; BSR set to: 15
  3174                           ;usb_device.c: 480: ;
  3175                           ;usb_device.c: 483: ;
  3176                           ;usb_device.c: 486: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  3177  00142A  0E00               	movlw	0
  3178  00142C  0100               	movlb	0	; () banked
  3179  00142E  6FAD               	movwf	USBDeviceInit@i& (0+255),b
  3180  001430                     l3848:
  3181                           
  3182                           ; BSR set to: 0
  3183  001430  0E07               	movlw	7
  3184  001432  0100               	movlb	0	; () banked
  3185  001434  65AD               	cpfsgt	USBDeviceInit@i& (0+255),b
  3186  001436  D001               	goto	l3852
  3187  001438  D010               	goto	l556
  3188  00143A                     l3852:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;usb_device.c: 487: {
  3192                           ;usb_device.c: 488: BDT[i].Val = 0x00;
  3193  00143A  0100               	movlb	0	; () banked
  3194  00143C  51AD               	movf	USBDeviceInit@i& (0+255),w,b
  3195  00143E  0D04               	mullw	4
  3196  001440  0E00               	movlw	0
  3197  001442  24F3               	addwf	prodl,w,c
  3198  001444  6ED9               	movwf	fsr2l,c
  3199  001446  0E0D               	movlw	13
  3200  001448  20F4               	addwfc	prodh,w,c
  3201  00144A  6EDA               	movwf	fsr2h,c
  3202  00144C  6ADE               	clrf	postinc2,c
  3203  00144E  6ADE               	clrf	postinc2,c
  3204  001450  6ADE               	clrf	postinc2,c
  3205  001452  6ADD               	clrf	postdec2,c
  3206                           
  3207                           ; BSR set to: 0
  3208  001454  0100               	movlb	0	; () banked
  3209  001456  2BAD               	incf	USBDeviceInit@i& (0+255),f,b
  3210  001458  D7EB               	goto	l3848
  3211  00145A                     l556:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;usb_device.c: 489: }
  3215                           ;usb_device.c: 492: UCONbits.PPBRST = 1;
  3216  00145A  8C65               	bsf	3941,6,c	;volatile
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;usb_device.c: 495: UADDR = 0x00;
  3220  00145C  0E00               	movlw	0
  3221  00145E  010F               	movlb	15	; () banked
  3222  001460  6F38               	movwf	56,b	;volatile
  3223                           
  3224                           ; BSR set to: 15
  3225                           ;usb_device.c: 498: UCONbits.PKTDIS = 0;
  3226  001462  9865               	bcf	3941,4,c	;volatile
  3227                           
  3228                           ; BSR set to: 15
  3229                           ;usb_device.c: 501: UCONbits.PPBRST = 0;
  3230  001464  9C65               	bcf	3941,6,c	;volatile
  3231                           
  3232                           ;usb_device.c: 504: while(UIRbits.TRNIF == 1)
  3233  001466  D00C               	goto	l3872
  3234  001468                     l3864:
  3235                           
  3236                           ;usb_device.c: 505: {
  3237                           ;usb_device.c: 506: (UIR &= 0xF7);
  3238  001468  9662               	bcf	3938,3,c	;volatile
  3239                           
  3240                           ;usb_device.c: 508: inPipes[0].info.Val = 0;
  3241  00146A  0E00               	movlw	0
  3242  00146C  0100               	movlb	0	; () banked
  3243  00146E  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;usb_device.c: 509: outPipes[0].info.Val = 0;
  3247  001470  0E00               	movlw	0
  3248  001472  0100               	movlb	0	; () banked
  3249  001474  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;usb_device.c: 510: outPipes[0].wCount.Val = 0;
  3253  001476  0E00               	movlw	0
  3254  001478  0100               	movlb	0	; () banked
  3255  00147A  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
  3256  00147C  0E00               	movlw	0
  3257  00147E  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
  3258  001480                     l3872:
  3259  001480  B662               	btfsc	3938,3,c	;volatile
  3260  001482  D7F2               	goto	l3864
  3261                           
  3262                           ;usb_device.c: 511: }
  3263                           ;usb_device.c: 515: USBStatusStageEnabledFlag1 = TRUE;
  3264  001484  0E01               	movlw	1
  3265  001486  6E3F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  3266                           
  3267                           ;usb_device.c: 516: USBStatusStageEnabledFlag2 = TRUE;
  3268  001488  0E01               	movlw	1
  3269  00148A  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  3270                           
  3271                           ;usb_device.c: 518: USBDeferINDataStagePackets = FALSE;
  3272  00148C  0E00               	movlw	0
  3273  00148E  6E3C               	movwf	_USBDeferINDataStagePackets,c	;volatile
  3274                           
  3275                           ;usb_device.c: 519: USBDeferOUTDataStagePackets = FALSE;
  3276  001490  0E00               	movlw	0
  3277  001492  6E3D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  3278                           
  3279                           ;usb_device.c: 520: USBBusIsSuspended = FALSE;
  3280  001494  0E00               	movlw	0
  3281  001496  0100               	movlb	0	; () banked
  3282  001498  6F82               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  3283                           
  3284                           ;usb_device.c: 524: for(i = 0; i < (BYTE)(1+1u); i++)
  3285  00149A  0E00               	movlw	0
  3286  00149C  0100               	movlb	0	; () banked
  3287  00149E  6FAD               	movwf	USBDeviceInit@i& (0+255),b
  3288  0014A0                     l3876:
  3289                           
  3290                           ; BSR set to: 0
  3291  0014A0  0E01               	movlw	1
  3292  0014A2  0100               	movlb	0	; () banked
  3293  0014A4  65AD               	cpfsgt	USBDeviceInit@i& (0+255),b
  3294  0014A6  D001               	goto	l3880
  3295  0014A8  D033               	goto	l3886
  3296  0014AA                     l3880:
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;usb_device.c: 525: {
  3300                           ;usb_device.c: 526: pBDTEntryIn[i] = 0u;
  3301  0014AA  0100               	movlb	0	; () banked
  3302  0014AC  51AD               	movf	USBDeviceInit@i& (0+255),w,b
  3303  0014AE  0D02               	mullw	2
  3304  0014B0  0E6F               	movlw	low _pBDTEntryIn
  3305  0014B2  24F3               	addwf	prodl,w,c
  3306  0014B4  6ED9               	movwf	fsr2l,c
  3307  0014B6  0E00               	movlw	high _pBDTEntryIn
  3308  0014B8  20F4               	addwfc	prodh,w,c
  3309  0014BA  6EDA               	movwf	fsr2h,c
  3310  0014BC  0E00               	movlw	0
  3311  0014BE  6EDE               	movwf	postinc2,c
  3312  0014C0  0E00               	movlw	0
  3313  0014C2  6EDD               	movwf	postdec2,c
  3314                           
  3315                           ;usb_device.c: 527: pBDTEntryOut[i] = 0u;
  3316  0014C4  0100               	movlb	0	; () banked
  3317  0014C6  51AD               	movf	USBDeviceInit@i& (0+255),w,b
  3318  0014C8  0D02               	mullw	2
  3319  0014CA  0E73               	movlw	low _pBDTEntryOut
  3320  0014CC  24F3               	addwf	prodl,w,c
  3321  0014CE  6ED9               	movwf	fsr2l,c
  3322  0014D0  0E00               	movlw	high _pBDTEntryOut
  3323  0014D2  20F4               	addwfc	prodh,w,c
  3324  0014D4  6EDA               	movwf	fsr2h,c
  3325  0014D6  0E00               	movlw	0
  3326  0014D8  6EDE               	movwf	postinc2,c
  3327  0014DA  0E00               	movlw	0
  3328  0014DC  6EDD               	movwf	postdec2,c
  3329                           
  3330                           ;usb_device.c: 528: ep_data_in[i].Val = 0u;
  3331  0014DE  0100               	movlb	0	; () banked
  3332  0014E0  51AD               	movf	USBDeviceInit@i& (0+255),w,b
  3333  0014E2  0D01               	mullw	1
  3334  0014E4  0E7A               	movlw	low _ep_data_in
  3335  0014E6  24F3               	addwf	prodl,w,c
  3336  0014E8  6ED9               	movwf	fsr2l,c
  3337  0014EA  0E00               	movlw	high _ep_data_in
  3338  0014EC  20F4               	addwfc	prodh,w,c
  3339  0014EE  6EDA               	movwf	fsr2h,c
  3340  0014F0  0E00               	movlw	0
  3341  0014F2  6EDF               	movwf	indf2,c
  3342                           
  3343                           ;usb_device.c: 529: ep_data_out[i].Val = 0u;
  3344  0014F4  0100               	movlb	0	; () banked
  3345  0014F6  51AD               	movf	USBDeviceInit@i& (0+255),w,b
  3346  0014F8  0D01               	mullw	1
  3347  0014FA  0E7C               	movlw	low _ep_data_out
  3348  0014FC  24F3               	addwf	prodl,w,c
  3349  0014FE  6ED9               	movwf	fsr2l,c
  3350  001500  0E00               	movlw	high _ep_data_out
  3351  001502  20F4               	addwfc	prodh,w,c
  3352  001504  6EDA               	movwf	fsr2h,c
  3353  001506  0E00               	movlw	0
  3354  001508  6EDF               	movwf	indf2,c
  3355                           
  3356                           ; BSR set to: 0
  3357  00150A  0100               	movlb	0	; () banked
  3358  00150C  2BAD               	incf	USBDeviceInit@i& (0+255),f,b
  3359  00150E  D7C8               	goto	l3876
  3360  001510                     l3886:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;usb_device.c: 530: }
  3364                           ;usb_device.c: 533: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3365  001510  0E08               	movlw	8
  3366  001512  0100               	movlb	0	; () banked
  3367  001514  6F6F               	movwf	_pBDTEntryIn& (0+255),b
  3368  001516  0E0D               	movlw	13
  3369  001518  0100               	movlb	0	; () banked
  3370  00151A  6F70               	movwf	(_pBDTEntryIn+1)& (0+255),b
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;usb_device.c: 535: UEP0 = 0x06|0x10;
  3374  00151C  0E16               	movlw	22
  3375  00151E  010F               	movlb	15	; () banked
  3376  001520  6F26               	movwf	38,b	;volatile
  3377                           
  3378                           ; BSR set to: 15
  3379                           ;usb_device.c: 537: BDT[0].ADR = ((WORD)(&SetupPkt));
  3380  001522  0E00               	movlw	high _SetupPkt
  3381  001524  010D               	movlb	13	; () banked
  3382  001526  6F03               	movwf	3,b	;volatile
  3383  001528  0E8C               	movlw	low _SetupPkt
  3384  00152A  6F02               	movwf	2,b	;volatile
  3385                           
  3386                           ; BSR set to: 13
  3387                           ;usb_device.c: 538: BDT[0].CNT = 8;
  3388  00152C  0E08               	movlw	8
  3389  00152E  010D               	movlb	13	; () banked
  3390  001530  6F01               	movwf	1,b	;volatile
  3391                           
  3392                           ; BSR set to: 13
  3393                           ;usb_device.c: 539: BDT[0].STAT.Val = 0x80|0x00|0x04;
  3394  001532  0E84               	movlw	132
  3395  001534  010D               	movlb	13	; () banked
  3396  001536  6F00               	movwf	0,b	;volatile
  3397                           
  3398                           ; BSR set to: 13
  3399                           ;usb_device.c: 542: USBActiveConfiguration = 0;
  3400  001538  0E00               	movlw	0
  3401  00153A  6E47               	movwf	_USBActiveConfiguration,c	;volatile
  3402                           
  3403                           ; BSR set to: 13
  3404                           ;usb_device.c: 545: USBDeviceState = DETACHED_STATE;
  3405  00153C  0E00               	movlw	0
  3406  00153E  0100               	movlb	0	; () banked
  3407  001540  6F83               	movwf	_USBDeviceState& (0+255),b	;volatile
  3408                           
  3409                           ; BSR set to: 0
  3410  001542  0012               	return		;funcret
  3411  001544                     __end_of_USBDeviceInit:
  3412                           	opt stack 0
  3413                           tblptru	equ	0xFF8
  3414                           tblptrh	equ	0xFF7
  3415                           tblptrl	equ	0xFF6
  3416                           tablat	equ	0xFF5
  3417                           prodh	equ	0xFF4
  3418                           prodl	equ	0xFF3
  3419                           intcon	equ	0xFF2
  3420                           indf0	equ	0xFEF
  3421                           postinc0	equ	0xFEE
  3422                           fsr0h	equ	0xFEA
  3423                           fsr0l	equ	0xFE9
  3424                           wreg	equ	0xFE8
  3425                           indf2	equ	0xFDF
  3426                           postinc2	equ	0xFDE
  3427                           postdec2	equ	0xFDD
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _memset *****************
  3433 ;; Defined at:
  3434 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  p1              2   14[BANK0 ] PTR void 
  3437 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
  3438 ;;  c               2   16[BANK0 ] int 
  3439 ;;  n               2   18[BANK0 ] unsigned int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  p               2   20[BANK0 ] PTR unsigned char 
  3442 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2   14[BANK0 ] PTR void 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3452 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;Total ram usage:        8 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:   11
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_USBDeviceInit
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text18
  3467  002AB6                     __ptext18:
  3468                           	opt stack 0
  3469  002AB6                     _memset:
  3470                           	opt stack 17
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;incstack = 0
  3474  002AB6  C0A5  F0AB         	movff	memset@p1,memset@p
  3475  002ABA  C0A6  F0AC         	movff	memset@p1+1,memset@p+1
  3476  002ABE  D009               	goto	l3652
  3477  002AC0                     l3648:
  3478  002AC0  C0AB  FFD9         	movff	memset@p,fsr2l
  3479  002AC4  C0AC  FFDA         	movff	memset@p+1,fsr2h
  3480  002AC8  C0A7  FFDF         	movff	memset@c,indf2
  3481  002ACC  0100               	movlb	0	; () banked
  3482  002ACE  4BAB               	infsnz	memset@p& (0+255),f,b
  3483  002AD0  2BAC               	incf	(memset@p+1)& (0+255),f,b
  3484  002AD2                     l3652:
  3485  002AD2  0100               	movlb	0	; () banked
  3486  002AD4  07A9               	decf	memset@n& (0+255),f,b
  3487  002AD6  A0D8               	btfss	status,0,c
  3488  002AD8  07AA               	decf	(memset@n+1)& (0+255),f,b
  3489  002ADA  0100               	movlb	0	; () banked
  3490  002ADC  29A9               	incf	memset@n& (0+255),w,b
  3491  002ADE  E1F0               	bnz	l3648
  3492  002AE0  0100               	movlb	0	; () banked
  3493  002AE2  29AA               	incf	(memset@n+1)& (0+255),w,b
  3494  002AE4  B4D8               	btfsc	status,2,c
  3495  002AE6  0012               	return	
  3496  002AE8  D7EB               	goto	l3648
  3497  002AEA                     __end_of_memset:
  3498                           	opt stack 0
  3499                           tblptru	equ	0xFF8
  3500                           tblptrh	equ	0xFF7
  3501                           tblptrl	equ	0xFF6
  3502                           tablat	equ	0xFF5
  3503                           prodh	equ	0xFF4
  3504                           prodl	equ	0xFF3
  3505                           intcon	equ	0xFF2
  3506                           indf0	equ	0xFEF
  3507                           postinc0	equ	0xFEE
  3508                           fsr0h	equ	0xFEA
  3509                           fsr0l	equ	0xFE9
  3510                           wreg	equ	0xFE8
  3511                           indf2	equ	0xFDF
  3512                           postinc2	equ	0xFDE
  3513                           postdec2	equ	0xFDD
  3514                           fsr2h	equ	0xFDA
  3515                           fsr2l	equ	0xFD9
  3516                           status	equ	0xFD8
  3517                           
  3518 ;; *************** function _LCDInit *****************
  3519 ;; Defined at:
  3520 ;;		line 24 in file "../usb_lab/LCD.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  functionSet     1   21[BANK0 ] unsigned char 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;		None               void
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3535 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3536 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3537 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3538 ;;Total ram usage:        2 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:   14
  3541 ;; This function calls:
  3542 ;;		_LCDInitCommand
  3543 ;;		_LCDInitPort
  3544 ;; This function is called by:
  3545 ;;		_InitializeSystem
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text19
  3550  002880                     __ptext19:
  3551                           	opt stack 0
  3552  002880                     _LCDInit:
  3553                           	opt stack 15
  3554                           
  3555                           ;LCD.c: 25: char functionSet = 0b00111000;
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;incstack = 0
  3559  002880  0E38               	movlw	56
  3560  002882  0100               	movlb	0	; () banked
  3561  002884  6FAC               	movwf	LCDInit@functionSet& (0+255),b
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;LCD.c: 26: LCDInitPort();
  3565  002886  EC11  F014         	call	_LCDInitPort	;wreg free
  3566                           
  3567                           ;LCD.c: 27: _delay((unsigned long)((10)*(48000000L/4000.0)));
  3568  00288A  0E9C               	movlw	156
  3569  00288C  0100               	movlb	0	; () banked
  3570  00288E  6FAB               	movwf	??_LCDInit& (0+255),b
  3571  002890  0ED7               	movlw	215
  3572  002892                     u4307:
  3573  002892  2EE8               	decfsz	wreg,f,c
  3574  002894  D7FE               	goto	u4307
  3575  002896  2FAB               	decfsz	??_LCDInit& (0+255),f,b
  3576  002898  D7FC               	goto	u4307
  3577  00289A  F000               	nop	
  3578                           
  3579                           ;LCD.c: 37: LCDInitCommand(functionSet);
  3580  00289C  0100               	movlb	0	; () banked
  3581  00289E  51AC               	movf	LCDInit@functionSet& (0+255),w,b
  3582  0028A0  EC39  F016         	call	_LCDInitCommand
  3583                           
  3584                           ;LCD.c: 38: _delay((unsigned long)((40)*(48000000L/4000000.0)));
  3585  0028A4  0EA0               	movlw	160
  3586  0028A6                     u4317:
  3587  0028A6  2EE8               	decfsz	wreg,f,c
  3588  0028A8  D7FE               	goto	u4317
  3589                           
  3590                           ;LCD.c: 39: LCDInitCommand(0b00001100);
  3591  0028AA  0E0C               	movlw	12
  3592  0028AC  EC39  F016         	call	_LCDInitCommand
  3593                           
  3594                           ;LCD.c: 40: _delay((unsigned long)((40)*(48000000L/4000000.0)));
  3595  0028B0  0EA0               	movlw	160
  3596  0028B2                     u4327:
  3597  0028B2  2EE8               	decfsz	wreg,f,c
  3598  0028B4  D7FE               	goto	u4327
  3599                           
  3600                           ;LCD.c: 41: LCDInitCommand(0b00000001);
  3601  0028B6  0E01               	movlw	1
  3602  0028B8  EC39  F016         	call	_LCDInitCommand
  3603                           
  3604                           ;LCD.c: 42: _delay((unsigned long)((1700)*(48000000L/4000000.0)));
  3605  0028BC  0E1B               	movlw	27
  3606  0028BE  0100               	movlb	0	; () banked
  3607  0028C0  6FAB               	movwf	??_LCDInit& (0+255),b
  3608  0028C2  0E7D               	movlw	125
  3609  0028C4                     u4337:
  3610  0028C4  2EE8               	decfsz	wreg,f,c
  3611  0028C6  D7FE               	goto	u4337
  3612  0028C8  2FAB               	decfsz	??_LCDInit& (0+255),f,b
  3613  0028CA  D7FC               	goto	u4337
  3614  0028CC  F000               	nop	
  3615                           
  3616                           ;LCD.c: 43: LCDInitCommand(0b00000110);
  3617  0028CE  0E06               	movlw	6
  3618  0028D0  EC39  F016         	call	_LCDInitCommand
  3619                           
  3620                           ;LCD.c: 44: _delay((unsigned long)((40)*(48000000L/4000000.0)));
  3621  0028D4  0EA0               	movlw	160
  3622  0028D6                     u4347:
  3623  0028D6  2EE8               	decfsz	wreg,f,c
  3624  0028D8  D7FE               	goto	u4347
  3625  0028DA  0012               	return		;funcret
  3626  0028DC                     __end_of_LCDInit:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           prodh	equ	0xFF4
  3633                           prodl	equ	0xFF3
  3634                           intcon	equ	0xFF2
  3635                           indf0	equ	0xFEF
  3636                           postinc0	equ	0xFEE
  3637                           fsr0h	equ	0xFEA
  3638                           fsr0l	equ	0xFE9
  3639                           wreg	equ	0xFE8
  3640                           indf2	equ	0xFDF
  3641                           postinc2	equ	0xFDE
  3642                           postdec2	equ	0xFDD
  3643                           fsr2h	equ	0xFDA
  3644                           fsr2l	equ	0xFD9
  3645                           status	equ	0xFD8
  3646                           
  3647 ;; *************** function _LCDInitPort *****************
  3648 ;; Defined at:
  3649 ;;		line 287 in file "../usb_lab/LCD.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;		None               void
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3667 ;;Total ram usage:        0 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:   12
  3670 ;; This function calls:
  3671 ;;		_WriteRegister
  3672 ;; This function is called by:
  3673 ;;		_LCDInit
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text20
  3678  002822                     __ptext20:
  3679                           	opt stack 0
  3680  002822                     _LCDInitPort:
  3681                           	opt stack 16
  3682                           
  3683                           ;LCD.c: 288: TRISAbits.TRISA2 = 0;
  3684                           
  3685                           ;incstack = 0
  3686  002822  9492               	bcf	3986,2,c	;volatile
  3687                           
  3688                           ;LCD.c: 289: LATAbits.LATA2 = 1;
  3689  002824  8489               	bsf	3977,2,c	;volatile
  3690                           
  3691                           ;LCD.c: 291: EECON2 = 0x55;
  3692  002826  0E55               	movlw	85
  3693  002828  6EA7               	movwf	4007,c	;volatile
  3694                           
  3695                           ;LCD.c: 292: EECON2 = 0xAA;
  3696  00282A  0EAA               	movlw	170
  3697  00282C  6EA7               	movwf	4007,c	;volatile
  3698                           
  3699                           ;LCD.c: 293: PPSCONbits.IOLOCK = 0;
  3700  00282E  010E               	movlb	14	; () banked
  3701  002830  91BF               	bcf	191,0,b	;volatile
  3702                           
  3703                           ;LCD.c: 294: RPOR2 = 10;
  3704  002832  0E0A               	movlw	10
  3705  002834  010E               	movlb	14	; () banked
  3706  002836  6FC2               	movwf	194,b	;volatile
  3707                           
  3708                           ;LCD.c: 295: RPOR4 = 11;
  3709  002838  0E0B               	movlw	11
  3710  00283A  010E               	movlb	14	; () banked
  3711  00283C  6FC4               	movwf	196,b	;volatile
  3712                           
  3713                           ;LCD.c: 296: EECON2 = 0x55;
  3714  00283E  0E55               	movlw	85
  3715  002840  6EA7               	movwf	4007,c	;volatile
  3716                           
  3717                           ;LCD.c: 297: EECON2 = 0xAA;
  3718  002842  0EAA               	movlw	170
  3719  002844  6EA7               	movwf	4007,c	;volatile
  3720                           
  3721                           ; BSR set to: 14
  3722                           ;LCD.c: 298: PPSCONbits.IOLOCK = 1;
  3723  002846  010E               	movlb	14	; () banked
  3724  002848  81BF               	bsf	191,0,b	;volatile
  3725                           
  3726                           ; BSR set to: 14
  3727                           ;LCD.c: 299: TRISBbits.TRISB1 = 0;
  3728  00284A  9293               	bcf	3987,1,c	;volatile
  3729                           
  3730                           ; BSR set to: 14
  3731                           ;LCD.c: 300: TRISAbits.TRISA5 = 0;
  3732  00284C  9A92               	bcf	3986,5,c	;volatile
  3733                           
  3734                           ; BSR set to: 14
  3735                           ;LCD.c: 301: LATAbits.LATA5 = 0;
  3736  00284E  9A89               	bcf	3977,5,c	;volatile
  3737                           
  3738                           ; BSR set to: 14
  3739                           ;LCD.c: 302: LATBbits.LATB1 = 0;
  3740  002850  928A               	bcf	3978,1,c	;volatile
  3741                           
  3742                           ;LCD.c: 307: SSP2CON1 = 0x21;
  3743  002852  0E21               	movlw	33
  3744  002854  6E72               	movwf	3954,c	;volatile
  3745                           
  3746                           ; BSR set to: 14
  3747                           ;LCD.c: 308: SSP2STATbits.CKE = 1;
  3748  002856  8C73               	bsf	3955,6,c	;volatile
  3749                           
  3750                           ; BSR set to: 14
  3751                           ;LCD.c: 309: SSP2IF = 0;
  3752  002858  9EA4               	bcf	4004,7,c	;volatile
  3753                           
  3754                           ; BSR set to: 14
  3755                           ;LCD.c: 310: WriteRegister(0, 0);
  3756  00285A  0E00               	movlw	0
  3757  00285C  0100               	movlb	0	; () banked
  3758  00285E  6FA5               	movwf	WriteRegister@b& (0+255),b
  3759  002860  0E00               	movlw	0
  3760  002862  ECCF  F015         	call	_WriteRegister
  3761                           
  3762                           ;LCD.c: 311: WriteRegister(1, 0);
  3763  002866  0E00               	movlw	0
  3764  002868  0100               	movlb	0	; () banked
  3765  00286A  6FA5               	movwf	WriteRegister@b& (0+255),b
  3766  00286C  0E01               	movlw	1
  3767  00286E  ECCF  F015         	call	_WriteRegister
  3768                           
  3769                           ;LCD.c: 312: WriteRegister(0x12, 0);
  3770  002872  0E00               	movlw	0
  3771  002874  0100               	movlb	0	; () banked
  3772  002876  6FA5               	movwf	WriteRegister@b& (0+255),b
  3773  002878  0E12               	movlw	18
  3774  00287A  ECCF  F015         	call	_WriteRegister
  3775  00287E  0012               	return		;funcret
  3776  002880                     __end_of_LCDInitPort:
  3777                           	opt stack 0
  3778                           tblptru	equ	0xFF8
  3779                           tblptrh	equ	0xFF7
  3780                           tblptrl	equ	0xFF6
  3781                           tablat	equ	0xFF5
  3782                           prodh	equ	0xFF4
  3783                           prodl	equ	0xFF3
  3784                           intcon	equ	0xFF2
  3785                           indf0	equ	0xFEF
  3786                           postinc0	equ	0xFEE
  3787                           fsr0h	equ	0xFEA
  3788                           fsr0l	equ	0xFE9
  3789                           wreg	equ	0xFE8
  3790                           indf2	equ	0xFDF
  3791                           postinc2	equ	0xFDE
  3792                           postdec2	equ	0xFDD
  3793                           fsr2h	equ	0xFDA
  3794                           fsr2l	equ	0xFD9
  3795                           status	equ	0xFD8
  3796                           
  3797 ;; *************** function _LCDInitCommand *****************
  3798 ;; Defined at:
  3799 ;;		line 193 in file "../usb_lab/LCD.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  command         1    wreg     unsigned char 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  command         1   19[BANK0 ] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;		None               void
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3816 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3817 ;;Total ram usage:        1 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:   13
  3820 ;; This function calls:
  3821 ;;		_LCDWriteByte
  3822 ;; This function is called by:
  3823 ;;		_LCDInit
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text21
  3828  002C72                     __ptext21:
  3829                           	opt stack 0
  3830  002C72                     _LCDInitCommand:
  3831                           	opt stack 15
  3832                           
  3833                           ;incstack = 0
  3834                           ;LCDInitCommand@command stored from wreg
  3835  002C72  0100               	movlb	0	; () banked
  3836  002C74  6FAA               	movwf	LCDInitCommand@command& (0+255),b
  3837                           
  3838                           ;LCD.c: 194: LCDWriteByte(command, 0);
  3839  002C76  0E00               	movlw	0
  3840  002C78  0100               	movlb	0	; () banked
  3841  002C7A  6FA7               	movwf	LCDWriteByte@rs& (0+255),b
  3842  002C7C  0100               	movlb	0	; () banked
  3843  002C7E  51AA               	movf	LCDInitCommand@command& (0+255),w,b
  3844  002C80  EC96  F014         	call	_LCDWriteByte
  3845  002C84  0012               	return		;funcret
  3846  002C86                     __end_of_LCDInitCommand:
  3847                           	opt stack 0
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           intcon	equ	0xFF2
  3855                           indf0	equ	0xFEF
  3856                           postinc0	equ	0xFEE
  3857                           fsr0h	equ	0xFEA
  3858                           fsr0l	equ	0xFE9
  3859                           wreg	equ	0xFE8
  3860                           indf2	equ	0xFDF
  3861                           postinc2	equ	0xFDE
  3862                           postdec2	equ	0xFDD
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8
  3866                           
  3867 ;; *************** function _LCDWriteByte *****************
  3868 ;; Defined at:
  3869 ;;		line 260 in file "../usb_lab/LCD.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  c               1    wreg     unsigned char 
  3872 ;;  rs              1   16[BANK0 ] unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  c               1   17[BANK0 ] unsigned char 
  3875 ;;  comFlags        1   18[BANK0 ] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;		None               void
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3885 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3888 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3889 ;;Total ram usage:        3 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:   12
  3892 ;; This function calls:
  3893 ;;		_WriteRegister
  3894 ;; This function is called by:
  3895 ;;		_LCDCommand
  3896 ;;		_LCDInitCommand
  3897 ;;		_LCDWriteData
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text22
  3902  00292C                     __ptext22:
  3903                           	opt stack 0
  3904  00292C                     _LCDWriteByte:
  3905                           	opt stack 16
  3906                           
  3907                           ;incstack = 0
  3908                           ;LCDWriteByte@c stored from wreg
  3909  00292C  0100               	movlb	0	; () banked
  3910  00292E  6FA8               	movwf	LCDWriteByte@c& (0+255),b
  3911                           
  3912                           ;LCD.c: 261: unsigned char comFlags = 0;
  3913  002930  0E00               	movlw	0
  3914  002932  0100               	movlb	0	; () banked
  3915  002934  6FA9               	movwf	LCDWriteByte@comFlags& (0+255),b
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;LCD.c: 262: if (rs) {
  3919  002936  0100               	movlb	0	; () banked
  3920  002938  51A7               	movf	LCDWriteByte@rs& (0+255),w,b
  3921  00293A  0100               	movlb	0	; () banked
  3922  00293C  B4D8               	btfsc	status,2,c
  3923  00293E  D003               	goto	l3440
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;LCD.c: 263: comFlags = 0b10000000;
  3927  002940  0E80               	movlw	128
  3928  002942  0100               	movlb	0	; () banked
  3929  002944  6FA9               	movwf	LCDWriteByte@comFlags& (0+255),b
  3930  002946                     l3440:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;LCD.c: 264: }
  3934                           ;LCD.c: 265: WriteRegister(0x12, comFlags);
  3935  002946  C0A9  F0A5         	movff	LCDWriteByte@comFlags,WriteRegister@b
  3936  00294A  0E12               	movlw	18
  3937  00294C  ECCF  F015         	call	_WriteRegister
  3938                           
  3939                           ;LCD.c: 266: WriteRegister(0x13, c);
  3940  002950  C0A8  F0A5         	movff	LCDWriteByte@c,WriteRegister@b
  3941  002954  0E13               	movlw	19
  3942  002956  ECCF  F015         	call	_WriteRegister
  3943                           
  3944                           ;LCD.c: 267: WriteRegister(0x12, comFlags | 0b01000000);
  3945  00295A  0100               	movlb	0	; () banked
  3946  00295C  51A9               	movf	LCDWriteByte@comFlags& (0+255),w,b
  3947  00295E  0940               	iorlw	64
  3948  002960  0100               	movlb	0	; () banked
  3949  002962  6FA5               	movwf	WriteRegister@b& (0+255),b
  3950  002964  0E12               	movlw	18
  3951  002966  ECCF  F015         	call	_WriteRegister
  3952                           
  3953                           ;LCD.c: 268: WriteRegister(0x12, comFlags);
  3954  00296A  C0A9  F0A5         	movff	LCDWriteByte@comFlags,WriteRegister@b
  3955  00296E  0E12               	movlw	18
  3956  002970  ECCF  F015         	call	_WriteRegister
  3957  002974  0012               	return		;funcret
  3958  002976                     __end_of_LCDWriteByte:
  3959                           	opt stack 0
  3960                           tblptru	equ	0xFF8
  3961                           tblptrh	equ	0xFF7
  3962                           tblptrl	equ	0xFF6
  3963                           tablat	equ	0xFF5
  3964                           prodh	equ	0xFF4
  3965                           prodl	equ	0xFF3
  3966                           intcon	equ	0xFF2
  3967                           indf0	equ	0xFEF
  3968                           postinc0	equ	0xFEE
  3969                           fsr0h	equ	0xFEA
  3970                           fsr0l	equ	0xFE9
  3971                           wreg	equ	0xFE8
  3972                           indf2	equ	0xFDF
  3973                           postinc2	equ	0xFDE
  3974                           postdec2	equ	0xFDD
  3975                           fsr2h	equ	0xFDA
  3976                           fsr2l	equ	0xFD9
  3977                           status	equ	0xFD8
  3978                           
  3979 ;; *************** function _WriteRegister *****************
  3980 ;; Defined at:
  3981 ;;		line 320 in file "../usb_lab/LCD.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  reg             1    wreg     unsigned char 
  3984 ;;  b               1   14[BANK0 ] unsigned char 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  reg             1   15[BANK0 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;		None               void
  3989 ;; Registers used:
  3990 ;;		wreg, status,2
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3996 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3997 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4000 ;;Total ram usage:        2 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:   11
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_LCDWriteByte
  4007 ;;		_LCDInitPort
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text23
  4012  002B9E                     __ptext23:
  4013                           	opt stack 0
  4014  002B9E                     _WriteRegister:
  4015                           	opt stack 16
  4016                           
  4017                           ;incstack = 0
  4018                           ;WriteRegister@reg stored from wreg
  4019  002B9E  0100               	movlb	0	; () banked
  4020  002BA0  6FA6               	movwf	WriteRegister@reg& (0+255),b
  4021                           
  4022                           ;LCD.c: 321: LATAbits.LATA2 = 0;
  4023  002BA2  9489               	bcf	3977,2,c	;volatile
  4024                           
  4025                           ;LCD.c: 322: SSP2BUF = 0x40;
  4026  002BA4  0E40               	movlw	64
  4027  002BA6  6E75               	movwf	3957,c	;volatile
  4028  002BA8                     l176:
  4029  002BA8  AEA4               	btfss	4004,7,c	;volatile
  4030  002BAA  D7FE               	goto	l176
  4031                           
  4032                           ;LCD.c: 324: SSP2IF = 0;
  4033  002BAC  9EA4               	bcf	4004,7,c	;volatile
  4034                           
  4035                           ;LCD.c: 325: SSP2BUF = reg;
  4036  002BAE  C0A6  FF75         	movff	WriteRegister@reg,3957	;volatile
  4037  002BB2                     l179:
  4038  002BB2  AEA4               	btfss	4004,7,c	;volatile
  4039  002BB4  D7FE               	goto	l179
  4040                           
  4041                           ;LCD.c: 327: SSP2IF = 0;
  4042  002BB6  9EA4               	bcf	4004,7,c	;volatile
  4043                           
  4044                           ;LCD.c: 328: SSP2BUF = b;
  4045  002BB8  C0A5  FF75         	movff	WriteRegister@b,3957	;volatile
  4046  002BBC                     l182:
  4047  002BBC  AEA4               	btfss	4004,7,c	;volatile
  4048  002BBE  D7FE               	goto	l182
  4049                           
  4050                           ;LCD.c: 330: SSP2IF = 0;
  4051  002BC0  9EA4               	bcf	4004,7,c	;volatile
  4052                           
  4053                           ;LCD.c: 331: LATAbits.LATA2 = 1;
  4054  002BC2  8489               	bsf	3977,2,c	;volatile
  4055  002BC4  0012               	return		;funcret
  4056  002BC6                     __end_of_WriteRegister:
  4057                           	opt stack 0
  4058                           tblptru	equ	0xFF8
  4059                           tblptrh	equ	0xFF7
  4060                           tblptrl	equ	0xFF6
  4061                           tablat	equ	0xFF5
  4062                           prodh	equ	0xFF4
  4063                           prodl	equ	0xFF3
  4064                           intcon	equ	0xFF2
  4065                           indf0	equ	0xFEF
  4066                           postinc0	equ	0xFEE
  4067                           fsr0h	equ	0xFEA
  4068                           fsr0l	equ	0xFE9
  4069                           wreg	equ	0xFE8
  4070                           indf2	equ	0xFDF
  4071                           postinc2	equ	0xFDE
  4072                           postdec2	equ	0xFDD
  4073                           fsr2h	equ	0xFDA
  4074                           fsr2l	equ	0xFD9
  4075                           status	equ	0xFD8
  4076                           
  4077 ;; *************** function _YourLowPriorityISRCode *****************
  4078 ;; Defined at:
  4079 ;;		line 77 in file "../usb_lab/mouse.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;		None               void
  4086 ;; Registers used:
  4087 ;;		None
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4095 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;Total ram usage:       17 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:   10
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		Interrupt level 1
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	intcodelo
  4108  000018                     __pintcodelo:
  4109                           	opt stack 0
  4110  000018                     _YourLowPriorityISRCode:
  4111                           	opt stack 15
  4112                           
  4113                           ;incstack = 0
  4114  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4115  00001A  CFD8 F001          	movff	status,??_YourLowPriorityISRCode
  4116  00001E  CFE8 F002          	movff	wreg,??_YourLowPriorityISRCode+1
  4117  000022  CFE0 F003          	movff	bsr,??_YourLowPriorityISRCode+2
  4118  000026  CFFA F004          	movff	pclath,??_YourLowPriorityISRCode+3
  4119  00002A  CFFB F005          	movff	pclatu,??_YourLowPriorityISRCode+4
  4120  00002E  CFE9 F006          	movff	fsr0l,??_YourLowPriorityISRCode+5
  4121  000032  CFEA F007          	movff	fsr0h,??_YourLowPriorityISRCode+6
  4122  000036  CFE1 F008          	movff	fsr1l,??_YourLowPriorityISRCode+7
  4123  00003A  CFE2 F009          	movff	fsr1h,??_YourLowPriorityISRCode+8
  4124  00003E  CFD9 F00A          	movff	fsr2l,??_YourLowPriorityISRCode+9
  4125  000042  CFDA F00B          	movff	fsr2h,??_YourLowPriorityISRCode+10
  4126  000046  CFF3 F00C          	movff	prodl,??_YourLowPriorityISRCode+11
  4127  00004A  CFF4 F00D          	movff	prodh,??_YourLowPriorityISRCode+12
  4128  00004E  CFF6 F00E          	movff	tblptrl,??_YourLowPriorityISRCode+13
  4129  000052  CFF7 F00F          	movff	tblptrh,??_YourLowPriorityISRCode+14
  4130  000056  CFF8 F010          	movff	tblptru,??_YourLowPriorityISRCode+15
  4131  00005A  CFF5 F011          	movff	tablat,??_YourLowPriorityISRCode+16
  4132  00005E  C011  FFF5         	movff	??_YourLowPriorityISRCode+16,tablat
  4133  000062  C010  FFF8         	movff	??_YourLowPriorityISRCode+15,tblptru
  4134  000066  C00F  FFF7         	movff	??_YourLowPriorityISRCode+14,tblptrh
  4135  00006A  C00E  FFF6         	movff	??_YourLowPriorityISRCode+13,tblptrl
  4136  00006E  C00D  FFF4         	movff	??_YourLowPriorityISRCode+12,prodh
  4137  000072  C00C  FFF3         	movff	??_YourLowPriorityISRCode+11,prodl
  4138  000076  C00B  FFDA         	movff	??_YourLowPriorityISRCode+10,fsr2h
  4139  00007A  C00A  FFD9         	movff	??_YourLowPriorityISRCode+9,fsr2l
  4140  00007E  C009  FFE2         	movff	??_YourLowPriorityISRCode+8,fsr1h
  4141  000082  C008  FFE1         	movff	??_YourLowPriorityISRCode+7,fsr1l
  4142  000086  C007  FFEA         	movff	??_YourLowPriorityISRCode+6,fsr0h
  4143  00008A  C006  FFE9         	movff	??_YourLowPriorityISRCode+5,fsr0l
  4144  00008E  C005  FFFB         	movff	??_YourLowPriorityISRCode+4,pclatu
  4145  000092  C004  FFFA         	movff	??_YourLowPriorityISRCode+3,pclath
  4146  000096  C003  FFE0         	movff	??_YourLowPriorityISRCode+2,bsr
  4147  00009A  C002  FFE8         	movff	??_YourLowPriorityISRCode+1,wreg
  4148  00009E  C001  FFD8         	movff	??_YourLowPriorityISRCode,status
  4149  0000A2  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4150  0000A4  0010               	retfie	
  4151  0000A6                     __end_of_YourLowPriorityISRCode:
  4152                           	opt stack 0
  4153                           pclatu	equ	0xFFB
  4154                           pclath	equ	0xFFA
  4155                           tblptru	equ	0xFF8
  4156                           tblptrh	equ	0xFF7
  4157                           tblptrl	equ	0xFF6
  4158                           tablat	equ	0xFF5
  4159                           prodh	equ	0xFF4
  4160                           prodl	equ	0xFF3
  4161                           intcon	equ	0xFF2
  4162                           indf0	equ	0xFEF
  4163                           postinc0	equ	0xFEE
  4164                           fsr0h	equ	0xFEA
  4165                           fsr0l	equ	0xFE9
  4166                           wreg	equ	0xFE8
  4167                           fsr1h	equ	0xFE2
  4168                           fsr1l	equ	0xFE1
  4169                           bsr	equ	0xFE0
  4170                           indf2	equ	0xFDF
  4171                           postinc2	equ	0xFDE
  4172                           postdec2	equ	0xFDD
  4173                           fsr2h	equ	0xFDA
  4174                           fsr2l	equ	0xFD9
  4175                           status	equ	0xFD8
  4176                           
  4177 ;; *************** function _YourHighPriorityISRCode *****************
  4178 ;; Defined at:
  4179 ;;		line 69 in file "../usb_lab/mouse.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;		None               void
  4186 ;; Registers used:
  4187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4196 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4197 ;;Total ram usage:       14 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    9
  4200 ;; This function calls:
  4201 ;;		_USBDeviceTasks
  4202 ;; This function is called by:
  4203 ;;		Interrupt level 2
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	intcode
  4208  000008                     __pintcode:
  4209                           	opt stack 0
  4210  000008                     _YourHighPriorityISRCode:
  4211                           	opt stack 15
  4212                           
  4213                           ;incstack = 0
  4214  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4215  00000A  CFFA F097          	movff	pclath,??_YourHighPriorityISRCode
  4216  00000E  CFFB F098          	movff	pclatu,??_YourHighPriorityISRCode+1
  4217  000012  EFA6  F013         	goto	int_func
  4218                           pclatu	equ	0xFFB
  4219                           pclath	equ	0xFFA
  4220                           tblptru	equ	0xFF8
  4221                           tblptrh	equ	0xFF7
  4222                           tblptrl	equ	0xFF6
  4223                           tablat	equ	0xFF5
  4224                           prodh	equ	0xFF4
  4225                           prodl	equ	0xFF3
  4226                           intcon	equ	0xFF2
  4227                           indf0	equ	0xFEF
  4228                           postinc0	equ	0xFEE
  4229                           fsr0h	equ	0xFEA
  4230                           fsr0l	equ	0xFE9
  4231                           wreg	equ	0xFE8
  4232                           fsr1h	equ	0xFE2
  4233                           fsr1l	equ	0xFE1
  4234                           bsr	equ	0xFE0
  4235                           indf2	equ	0xFDF
  4236                           postinc2	equ	0xFDE
  4237                           postdec2	equ	0xFDD
  4238                           fsr2h	equ	0xFDA
  4239                           fsr2l	equ	0xFD9
  4240                           status	equ	0xFD8
  4241                           
  4242                           	psect	intcode_body
  4243  00274C                     __pintcode_body:
  4244                           	opt stack 15
  4245  00274C                     int_func:
  4246                           	opt stack 15
  4247  00274C  CFE9 F099          	movff	fsr0l,??_YourHighPriorityISRCode+2
  4248  002750  CFEA F09A          	movff	fsr0h,??_YourHighPriorityISRCode+3
  4249  002754  CFE1 F09B          	movff	fsr1l,??_YourHighPriorityISRCode+4
  4250  002758  CFE2 F09C          	movff	fsr1h,??_YourHighPriorityISRCode+5
  4251  00275C  CFD9 F09D          	movff	fsr2l,??_YourHighPriorityISRCode+6
  4252  002760  CFDA F09E          	movff	fsr2h,??_YourHighPriorityISRCode+7
  4253  002764  CFF3 F09F          	movff	prodl,??_YourHighPriorityISRCode+8
  4254  002768  CFF4 F0A0          	movff	prodh,??_YourHighPriorityISRCode+9
  4255  00276C  CFF6 F0A1          	movff	tblptrl,??_YourHighPriorityISRCode+10
  4256  002770  CFF7 F0A2          	movff	tblptrh,??_YourHighPriorityISRCode+11
  4257  002774  CFF8 F0A3          	movff	tblptru,??_YourHighPriorityISRCode+12
  4258  002778  CFF5 F0A4          	movff	tablat,??_YourHighPriorityISRCode+13
  4259                           
  4260                           ;mouse.c: 72: USBDeviceTasks();
  4261  00277C  ECA2  F00A         	call	_USBDeviceTasks	;wreg free
  4262  002780  C0A4  FFF5         	movff	??_YourHighPriorityISRCode+13,tablat
  4263  002784  C0A3  FFF8         	movff	??_YourHighPriorityISRCode+12,tblptru
  4264  002788  C0A2  FFF7         	movff	??_YourHighPriorityISRCode+11,tblptrh
  4265  00278C  C0A1  FFF6         	movff	??_YourHighPriorityISRCode+10,tblptrl
  4266  002790  C0A0  FFF4         	movff	??_YourHighPriorityISRCode+9,prodh
  4267  002794  C09F  FFF3         	movff	??_YourHighPriorityISRCode+8,prodl
  4268  002798  C09E  FFDA         	movff	??_YourHighPriorityISRCode+7,fsr2h
  4269  00279C  C09D  FFD9         	movff	??_YourHighPriorityISRCode+6,fsr2l
  4270  0027A0  C09C  FFE2         	movff	??_YourHighPriorityISRCode+5,fsr1h
  4271  0027A4  C09B  FFE1         	movff	??_YourHighPriorityISRCode+4,fsr1l
  4272  0027A8  C09A  FFEA         	movff	??_YourHighPriorityISRCode+3,fsr0h
  4273  0027AC  C099  FFE9         	movff	??_YourHighPriorityISRCode+2,fsr0l
  4274  0027B0  C098  FFFB         	movff	??_YourHighPriorityISRCode+1,pclatu
  4275  0027B4  C097  FFFA         	movff	??_YourHighPriorityISRCode,pclath
  4276  0027B8  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4277  0027BA  0011               	retfie		f
  4278  0027BC                     __end_of_YourHighPriorityISRCode:
  4279                           	opt stack 0
  4280                           pclatu	equ	0xFFB
  4281                           pclath	equ	0xFFA
  4282                           tblptru	equ	0xFF8
  4283                           tblptrh	equ	0xFF7
  4284                           tblptrl	equ	0xFF6
  4285                           tablat	equ	0xFF5
  4286                           prodh	equ	0xFF4
  4287                           prodl	equ	0xFF3
  4288                           intcon	equ	0xFF2
  4289                           indf0	equ	0xFEF
  4290                           postinc0	equ	0xFEE
  4291                           fsr0h	equ	0xFEA
  4292                           fsr0l	equ	0xFE9
  4293                           wreg	equ	0xFE8
  4294                           fsr1h	equ	0xFE2
  4295                           fsr1l	equ	0xFE1
  4296                           bsr	equ	0xFE0
  4297                           indf2	equ	0xFDF
  4298                           postinc2	equ	0xFDE
  4299                           postdec2	equ	0xFDD
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function _USBDeviceTasks *****************
  4305 ;; Defined at:
  4306 ;;		line 654 in file "../usb_lab/usb_device.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  i               1   46[COMRAM] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;		None               void
  4313 ;; Registers used:
  4314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4324 ;;Total ram usage:        1 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    8
  4327 ;; This function calls:
  4328 ;;		_USBCtrlEPAllowStatusStage
  4329 ;;		_USBCtrlEPService
  4330 ;;		_USBStallHandler
  4331 ;;		_USBSuspend
  4332 ;;		_USBWakeFromSuspend
  4333 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4334 ;;		i2_USBDeviceInit
  4335 ;; This function is called by:
  4336 ;;		_YourHighPriorityISRCode
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text26
  4341  001544                     __ptext26:
  4342                           	opt stack 0
  4343  001544                     _USBDeviceTasks:
  4344                           	opt stack 15
  4345                           
  4346                           ;usb_device.c: 664: BYTE i;
  4347                           ;usb_device.c: 775: if(USBDeviceState == ATTACHED_STATE)
  4348                           
  4349                           ;incstack = 0
  4350  001544  0100               	movlb	0	; () banked
  4351  001546  0583               	decf	_USBDeviceState& (0+255),w,b	;volatile
  4352  001548  B4D8               	btfsc	status,2,c
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;usb_device.c: 776: {
  4356                           ;usb_device.c: 786: if(!UCONbits.SE0)
  4357  00154A  BA65               	btfsc	3941,5,c	;volatile
  4358  00154C  D009               	goto	i2l4220
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;usb_device.c: 787: {
  4362                           ;usb_device.c: 788: UIR = 0;;
  4363  00154E  0E00               	movlw	0
  4364  001550  6E62               	movwf	3938,c	;volatile
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;usb_device.c: 792: UIEbits.URSTIE = 1;
  4368  001552  010F               	movlb	15	; () banked
  4369  001554  8136               	bsf	54,0,b	;volatile
  4370                           
  4371                           ; BSR set to: 15
  4372                           ;usb_device.c: 793: UIEbits.IDLEIE = 1;
  4373  001556  010F               	movlb	15	; () banked
  4374  001558  8936               	bsf	54,4,b	;volatile
  4375                           
  4376                           ;usb_device.c: 794: USBDeviceState = POWERED_STATE;
  4377  00155A  0E02               	movlw	2
  4378  00155C  0100               	movlb	0	; () banked
  4379  00155E  6F83               	movwf	_USBDeviceState& (0+255),b	;volatile
  4380  001560                     i2l4220:
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;usb_device.c: 795: }
  4384                           ;usb_device.c: 796: }
  4385                           ;usb_device.c: 812: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4386  001560  A462               	btfss	3938,2,c	;volatile
  4387  001562  D006               	goto	i2l4228
  4388                           
  4389                           ; BSR set to: 0
  4390  001564  010F               	movlb	15	; () banked
  4391  001566  A536               	btfss	54,2,b	;volatile
  4392  001568  D003               	goto	i2l4228
  4393                           
  4394                           ; BSR set to: 15
  4395                           ;usb_device.c: 813: {
  4396                           ;usb_device.c: 814: (UIR &= 0xFB);
  4397  00156A  9462               	bcf	3938,2,c	;volatile
  4398                           
  4399                           ; BSR set to: 15
  4400                           ;usb_device.c: 818: USBWakeFromSuspend();
  4401  00156C  EC75  F015         	call	_USBWakeFromSuspend	;wreg free
  4402  001570                     i2l4228:
  4403                           
  4404                           ;usb_device.c: 820: }
  4405                           ;usb_device.c: 825: if(UCONbits.SUSPND==1)
  4406  001570  A265               	btfss	3941,1,c	;volatile
  4407  001572  D002               	goto	i2l568
  4408                           
  4409                           ;usb_device.c: 826: {
  4410                           ;usb_device.c: 827: PIR2bits.USBIF = 0;;
  4411  001574  98A1               	bcf	4001,4,c	;volatile
  4412                           
  4413                           ;usb_device.c: 828: return;
  4414  001576  0012               	return	
  4415  001578                     i2l568:
  4416                           
  4417                           ;usb_device.c: 829: }
  4418                           ;usb_device.c: 841: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4419  001578  A062               	btfss	3938,0,c	;volatile
  4420  00157A  D00A               	goto	i2l4242
  4421  00157C  010F               	movlb	15	; () banked
  4422  00157E  A136               	btfss	54,0,b	;volatile
  4423  001580  D007               	goto	i2l4242
  4424                           
  4425                           ; BSR set to: 15
  4426                           ;usb_device.c: 842: {
  4427                           ;usb_device.c: 843: USBDeviceInit();
  4428  001582  EC49  F00B         	call	i2_USBDeviceInit	;wreg free
  4429                           
  4430                           ;usb_device.c: 847: {PIE2bits.USBIE = 1;};
  4431  001586  88A0               	bsf	4000,4,c	;volatile
  4432                           
  4433                           ;usb_device.c: 849: USBDeviceState = DEFAULT_STATE;
  4434  001588  0E04               	movlw	4
  4435  00158A  0100               	movlb	0	; () banked
  4436  00158C  6F83               	movwf	_USBDeviceState& (0+255),b	;volatile
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;usb_device.c: 859: (UIR &= 0xFE);
  4440  00158E  9062               	bcf	3938,0,c	;volatile
  4441  001590                     i2l4242:
  4442                           
  4443                           ;usb_device.c: 860: }
  4444                           ;usb_device.c: 865: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4445  001590  A862               	btfss	3938,4,c	;volatile
  4446  001592  D006               	goto	i2l4250
  4447  001594  010F               	movlb	15	; () banked
  4448  001596  A936               	btfss	54,4,b	;volatile
  4449  001598  D003               	goto	i2l4250
  4450                           
  4451                           ; BSR set to: 15
  4452                           ;usb_device.c: 866: {
  4453                           ;usb_device.c: 871: USBSuspend();
  4454  00159A  EC8E  F015         	call	_USBSuspend	;wreg free
  4455                           
  4456                           ;usb_device.c: 874: (UIR &= 0xEF);
  4457  00159E  9862               	bcf	3938,4,c	;volatile
  4458  0015A0                     i2l4250:
  4459                           
  4460                           ;usb_device.c: 875: }
  4461                           ;usb_device.c: 877: if(UIRbits.SOFIF)
  4462  0015A0  AC62               	btfss	3938,6,c	;volatile
  4463  0015A2  D019               	goto	i2l4266
  4464                           
  4465                           ;usb_device.c: 878: {
  4466                           ;usb_device.c: 879: if(UIEbits.SOFIE)
  4467  0015A4  010F               	movlb	15	; () banked
  4468  0015A6  AD36               	btfss	54,6,b	;volatile
  4469  0015A8  D00E               	goto	i2l4256
  4470                           
  4471                           ; BSR set to: 15
  4472                           ;usb_device.c: 880: {
  4473                           ;usb_device.c: 881: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4474  0015AA  0E00               	movlw	0
  4475  0015AC  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4476  0015AE  0E73               	movlw	115
  4477  0015B0  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4478  0015B2  0E00               	movlw	0
  4479  0015B4  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4480  0015B6  0E00               	movlw	0
  4481  0015B8  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4482  0015BA  0E00               	movlw	0
  4483  0015BC  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4484  0015BE  0E01               	movlw	1
  4485  0015C0  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4486  0015C2  EC65  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4487  0015C6                     i2l4256:
  4488                           
  4489                           ;usb_device.c: 882: }
  4490                           ;usb_device.c: 883: (UIR &= 0xBF);
  4491  0015C6  9C62               	bcf	3938,6,c	;volatile
  4492                           
  4493                           ;usb_device.c: 908: if(USBStatusStageTimeoutCounter != 0u)
  4494  0015C8  5041               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  4495  0015CA  A4D8               	btfss	status,2,c
  4496                           
  4497                           ;usb_device.c: 909: {
  4498                           ;usb_device.c: 910: USBStatusStageTimeoutCounter--;
  4499  0015CC  0641               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  4500                           
  4501                           ;usb_device.c: 911: }
  4502                           ;usb_device.c: 917: if(USBStatusStageTimeoutCounter == 0)
  4503  0015CE  5041               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  4504  0015D0  B4D8               	btfsc	status,2,c
  4505                           
  4506                           ;usb_device.c: 918: {
  4507                           ;usb_device.c: 919: USBCtrlEPAllowStatusStage();
  4508  0015D2  ECEC  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4509  0015D6                     i2l4266:
  4510                           
  4511                           ;usb_device.c: 920: }
  4512                           ;usb_device.c: 922: }
  4513                           ;usb_device.c: 924: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4514  0015D6  AA62               	btfss	3938,5,c	;volatile
  4515  0015D8  D004               	goto	i2l4272
  4516  0015DA  010F               	movlb	15	; () banked
  4517  0015DC  BB36               	btfsc	54,5,b	;volatile
  4518                           
  4519                           ; BSR set to: 15
  4520                           ;usb_device.c: 925: {
  4521                           ;usb_device.c: 926: USBStallHandler();
  4522  0015DE  EC3E  F015         	call	_USBStallHandler	;wreg free
  4523  0015E2                     i2l4272:
  4524                           
  4525                           ;usb_device.c: 927: }
  4526                           ;usb_device.c: 929: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4527  0015E2  A262               	btfss	3938,1,c	;volatile
  4528  0015E4  D012               	goto	i2l4280
  4529  0015E6  010F               	movlb	15	; () banked
  4530  0015E8  A336               	btfss	54,1,b	;volatile
  4531  0015EA  D00F               	goto	i2l4280
  4532                           
  4533                           ; BSR set to: 15
  4534                           ;usb_device.c: 930: {
  4535                           ;usb_device.c: 931: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4536  0015EC  0E7F               	movlw	127
  4537  0015EE  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4538  0015F0  681E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4539  0015F2  0E00               	movlw	0
  4540  0015F4  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4541  0015F6  0E00               	movlw	0
  4542  0015F8  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4543  0015FA  0E00               	movlw	0
  4544  0015FC  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4545  0015FE  0E01               	movlw	1
  4546  001600  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4547  001602  EC65  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4548                           
  4549                           ;usb_device.c: 932: UEIR = 0;;
  4550  001606  0E00               	movlw	0
  4551  001608  6E63               	movwf	3939,c	;volatile
  4552  00160A                     i2l4280:
  4553                           
  4554                           ;usb_device.c: 940: }
  4555                           ;usb_device.c: 947: if(USBDeviceState < DEFAULT_STATE)
  4556  00160A  0E04               	movlw	4
  4557  00160C  0100               	movlb	0	; () banked
  4558  00160E  6183               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  4559  001610  D002               	goto	i2l578
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;usb_device.c: 948: {
  4563                           ;usb_device.c: 949: PIR2bits.USBIF = 0;;
  4564  001612  98A1               	bcf	4001,4,c	;volatile
  4565                           
  4566                           ;usb_device.c: 950: return;
  4567  001614  0012               	return	
  4568  001616                     i2l578:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;usb_device.c: 951: }
  4572                           ;usb_device.c: 956: if(UIEbits.TRNIE)
  4573  001616  010F               	movlb	15	; () banked
  4574  001618  A736               	btfss	54,3,b	;volatile
  4575  00161A  D039               	goto	i2l579
  4576                           
  4577                           ; BSR set to: 15
  4578                           ;usb_device.c: 957: {
  4579                           ;usb_device.c: 958: for(i = 0; i < 4u; i++)
  4580  00161C  0E00               	movlw	0
  4581  00161E  6E2F               	movwf	USBDeviceTasks@i,c
  4582  001620                     i2l4286:
  4583                           
  4584                           ; BSR set to: 15
  4585  001620  0E03               	movlw	3
  4586  001622  642F               	cpfsgt	USBDeviceTasks@i,c
  4587  001624  D001               	goto	i2l580
  4588  001626  D033               	goto	i2l579
  4589  001628                     i2l580:
  4590                           
  4591                           ;usb_device.c: 959: {
  4592                           ;usb_device.c: 960: if(UIRbits.TRNIF)
  4593  001628  A662               	btfss	3938,3,c	;volatile
  4594  00162A  D031               	goto	i2l579
  4595                           
  4596                           ;usb_device.c: 961: {
  4597                           ;usb_device.c: 963: USTATcopy.Val = USTAT;
  4598  00162C  CF64 F049          	movff	3940,_USTATcopy	;volatile
  4599                           
  4600                           ;usb_device.c: 964: endpoint_number = USTATcopy.endpoint_number;
  4601  001630  3049               	rrcf	_USTATcopy,w,c	;volatile
  4602  001632  32E8               	rrcf	wreg,f,c
  4603  001634  32E8               	rrcf	wreg,f,c
  4604  001636  0B0F               	andlw	15
  4605  001638  6E43               	movwf	_endpoint_number,c	;volatile
  4606                           
  4607                           ;usb_device.c: 966: (UIR &= 0xF7);
  4608  00163A  9662               	bcf	3938,3,c	;volatile
  4609                           
  4610                           ;usb_device.c: 971: if(USTATcopy.direction == 0)
  4611  00163C  B449               	btfsc	_USTATcopy,2,c	;volatile
  4612  00163E  D007               	goto	i2l4300
  4613                           
  4614                           ;usb_device.c: 972: {
  4615                           ;usb_device.c: 973: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4616  001640  5043               	movf	_endpoint_number,w,c	;volatile
  4617  001642  0D01               	mullw	1
  4618  001644  0E7C               	movlw	low _ep_data_out
  4619  001646  24F3               	addwf	prodl,w,c
  4620  001648  6ED9               	movwf	fsr2l,c
  4621  00164A  0E00               	movlw	high _ep_data_out
  4622  00164C  D006               	goto	L4
  4623  00164E                     i2l4300:
  4624                           
  4625                           ;usb_device.c: 975: else
  4626                           ;usb_device.c: 976: {
  4627                           ;usb_device.c: 977: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4628  00164E  5043               	movf	_endpoint_number,w,c	;volatile
  4629  001650  0D01               	mullw	1
  4630  001652  0E7A               	movlw	low _ep_data_in
  4631  001654  24F3               	addwf	prodl,w,c
  4632  001656  6ED9               	movwf	fsr2l,c
  4633  001658  0E00               	movlw	high _ep_data_in
  4634  00165A                     L4:
  4635  00165A  20F4               	addwfc	prodh,w,c
  4636  00165C  6EDA               	movwf	fsr2h,c
  4637  00165E  0100               	movlb	0	; () banked
  4638  001660  70DF               	btg	indf2,0,c
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;usb_device.c: 978: }
  4642                           ;usb_device.c: 983: if(endpoint_number == 0)
  4643                           
  4644                           ; BSR set to: 0
  4645  001662  5043               	movf	_endpoint_number,w,c	;volatile
  4646  001664  A4D8               	btfss	status,2,c
  4647  001666  D003               	goto	i2l4306
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;usb_device.c: 984: {
  4651                           ;usb_device.c: 985: USBCtrlEPService();
  4652  001668  EC61  F010         	call	_USBCtrlEPService	;wreg free
  4653                           
  4654                           ;usb_device.c: 986: }
  4655  00166C  D00E               	goto	i2l4308
  4656  00166E                     i2l4306:
  4657                           
  4658                           ;usb_device.c: 987: else
  4659                           ;usb_device.c: 988: {
  4660                           ;usb_device.c: 989: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy.Val
      +                          ,0);
  4661  00166E  0E00               	movlw	0
  4662  001670  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4663  001672  0E72               	movlw	114
  4664  001674  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4665  001676  0E49               	movlw	low _USTATcopy
  4666  001678  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4667  00167A  0E00               	movlw	high _USTATcopy
  4668  00167C  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4669  00167E  0E00               	movlw	0
  4670  001680  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4671  001682  0E00               	movlw	0
  4672  001684  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4673  001686  EC65  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4674  00168A                     i2l4308:
  4675  00168A  2A2F               	incf	USBDeviceTasks@i,f,c
  4676  00168C  D7C9               	goto	i2l4286
  4677  00168E                     i2l579:
  4678                           
  4679                           ;usb_device.c: 994: }
  4680                           ;usb_device.c: 995: }
  4681                           ;usb_device.c: 997: PIR2bits.USBIF = 0;;
  4682  00168E  98A1               	bcf	4001,4,c	;volatile
  4683  001690  0012               	return		;funcret
  4684  001692                     __end_of_USBDeviceTasks:
  4685                           	opt stack 0
  4686                           pclatu	equ	0xFFB
  4687                           pclath	equ	0xFFA
  4688                           tblptru	equ	0xFF8
  4689                           tblptrh	equ	0xFF7
  4690                           tblptrl	equ	0xFF6
  4691                           tablat	equ	0xFF5
  4692                           prodh	equ	0xFF4
  4693                           prodl	equ	0xFF3
  4694                           intcon	equ	0xFF2
  4695                           indf0	equ	0xFEF
  4696                           postinc0	equ	0xFEE
  4697                           fsr0h	equ	0xFEA
  4698                           fsr0l	equ	0xFE9
  4699                           wreg	equ	0xFE8
  4700                           fsr1h	equ	0xFE2
  4701                           fsr1l	equ	0xFE1
  4702                           bsr	equ	0xFE0
  4703                           indf2	equ	0xFDF
  4704                           postinc2	equ	0xFDE
  4705                           postdec2	equ	0xFDD
  4706                           fsr2h	equ	0xFDA
  4707                           fsr2l	equ	0xFD9
  4708                           status	equ	0xFD8
  4709                           
  4710 ;; *************** function i2_USBDeviceInit *****************
  4711 ;; Defined at:
  4712 ;;		line 460 in file "../usb_lab/usb_device.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  USBDeviceIni    1   25[COMRAM] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;		None               void
  4719 ;; Registers used:
  4720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4729 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;Total ram usage:        1 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    1
  4733 ;; This function calls:
  4734 ;;		i2_memset
  4735 ;; This function is called by:
  4736 ;;		_USBDeviceTasks
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text27
  4741  001692                     __ptext27:
  4742                           	opt stack 0
  4743  001692                     i2_USBDeviceInit:
  4744                           	opt stack 21
  4745                           
  4746                           ;usb_device.c: 462: BYTE i;
  4747                           ;usb_device.c: 464: {PIE2bits.USBIE = 0;};
  4748                           
  4749                           ;incstack = 0
  4750  001692  98A0               	bcf	4000,4,c	;volatile
  4751                           
  4752                           ;usb_device.c: 467: UEIR = 0;;
  4753  001694  0E00               	movlw	0
  4754  001696  6E63               	movwf	3939,c	;volatile
  4755                           
  4756                           ;usb_device.c: 470: UIR = 0;;
  4757  001698  0E00               	movlw	0
  4758  00169A  6E62               	movwf	3938,c	;volatile
  4759                           
  4760                           ;usb_device.c: 473: UEP0 = 0;
  4761  00169C  0E00               	movlw	0
  4762  00169E  010F               	movlb	15	; () banked
  4763  0016A0  6F26               	movwf	38,b	;volatile
  4764                           
  4765                           ; BSR set to: 15
  4766                           ;usb_device.c: 475: memset((void*)&UEP1,0x00,(1));;
  4767  0016A2  0E27               	movlw	39
  4768  0016A4  6E12               	movwf	i2memset@p1,c
  4769  0016A6  0E0F               	movlw	15
  4770  0016A8  6E13               	movwf	i2memset@p1+1,c
  4771  0016AA  0E00               	movlw	0
  4772  0016AC  6E15               	movwf	i2memset@c+1,c
  4773  0016AE  0E00               	movlw	0
  4774  0016B0  6E14               	movwf	i2memset@c,c
  4775  0016B2  0E00               	movlw	0
  4776  0016B4  6E17               	movwf	i2memset@n+1,c
  4777  0016B6  0E01               	movlw	1
  4778  0016B8  6E16               	movwf	i2memset@n,c
  4779  0016BA  ECA4  F015         	call	i2_memset	;wreg free
  4780                           
  4781                           ;usb_device.c: 477: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4782  0016BE  0E16               	movlw	22
  4783  0016C0  010F               	movlb	15	; () banked
  4784  0016C2  6F39               	movwf	57,b	;volatile
  4785                           
  4786                           ; BSR set to: 15
  4787  0016C4  0E9F               	movlw	159
  4788  0016C6  010F               	movlb	15	; () banked
  4789  0016C8  6F37               	movwf	55,b	;volatile
  4790                           
  4791                           ; BSR set to: 15
  4792  0016CA  0E7B               	movlw	123
  4793  0016CC  010F               	movlb	15	; () banked
  4794  0016CE  6F36               	movwf	54,b	;volatile
  4795                           
  4796                           ; BSR set to: 15
  4797                           ;usb_device.c: 480: ;
  4798                           ;usb_device.c: 483: ;
  4799                           ;usb_device.c: 486: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  4800  0016D0  0E00               	movlw	0
  4801  0016D2  6E1A               	movwf	i2USBDeviceInit@i,c
  4802  0016D4                     i2l4096:
  4803                           
  4804                           ; BSR set to: 15
  4805  0016D4  0E07               	movlw	7
  4806  0016D6  641A               	cpfsgt	i2USBDeviceInit@i,c
  4807  0016D8  D001               	goto	i2l4100
  4808  0016DA  D00E               	goto	i2l556
  4809  0016DC                     i2l4100:
  4810                           
  4811                           ;usb_device.c: 487: {
  4812                           ;usb_device.c: 488: BDT[i].Val = 0x00;
  4813  0016DC  501A               	movf	i2USBDeviceInit@i,w,c
  4814  0016DE  0D04               	mullw	4
  4815  0016E0  0E00               	movlw	0
  4816  0016E2  24F3               	addwf	prodl,w,c
  4817  0016E4  6ED9               	movwf	fsr2l,c
  4818  0016E6  0E0D               	movlw	13
  4819  0016E8  20F4               	addwfc	prodh,w,c
  4820  0016EA  6EDA               	movwf	fsr2h,c
  4821  0016EC  6ADE               	clrf	postinc2,c
  4822  0016EE  6ADE               	clrf	postinc2,c
  4823  0016F0  6ADE               	clrf	postinc2,c
  4824  0016F2  6ADD               	clrf	postdec2,c
  4825  0016F4  2A1A               	incf	i2USBDeviceInit@i,f,c
  4826  0016F6  D7EE               	goto	i2l4096
  4827  0016F8                     i2l556:
  4828                           
  4829                           ;usb_device.c: 489: }
  4830                           ;usb_device.c: 492: UCONbits.PPBRST = 1;
  4831  0016F8  8C65               	bsf	3941,6,c	;volatile
  4832                           
  4833                           ;usb_device.c: 495: UADDR = 0x00;
  4834  0016FA  0E00               	movlw	0
  4835  0016FC  010F               	movlb	15	; () banked
  4836  0016FE  6F38               	movwf	56,b	;volatile
  4837                           
  4838                           ; BSR set to: 15
  4839                           ;usb_device.c: 498: UCONbits.PKTDIS = 0;
  4840  001700  9865               	bcf	3941,4,c	;volatile
  4841                           
  4842                           ; BSR set to: 15
  4843                           ;usb_device.c: 501: UCONbits.PPBRST = 0;
  4844  001702  9C65               	bcf	3941,6,c	;volatile
  4845                           
  4846                           ;usb_device.c: 504: while(UIRbits.TRNIF == 1)
  4847  001704  D00C               	goto	i2l4120
  4848  001706                     i2l4112:
  4849                           
  4850                           ;usb_device.c: 505: {
  4851                           ;usb_device.c: 506: (UIR &= 0xF7);
  4852  001706  9662               	bcf	3938,3,c	;volatile
  4853                           
  4854                           ;usb_device.c: 508: inPipes[0].info.Val = 0;
  4855  001708  0E00               	movlw	0
  4856  00170A  0100               	movlb	0	; () banked
  4857  00170C  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;usb_device.c: 509: outPipes[0].info.Val = 0;
  4861  00170E  0E00               	movlw	0
  4862  001710  0100               	movlb	0	; () banked
  4863  001712  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;usb_device.c: 510: outPipes[0].wCount.Val = 0;
  4867  001714  0E00               	movlw	0
  4868  001716  0100               	movlb	0	; () banked
  4869  001718  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
  4870  00171A  0E00               	movlw	0
  4871  00171C  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
  4872  00171E                     i2l4120:
  4873  00171E  B662               	btfsc	3938,3,c	;volatile
  4874  001720  D7F2               	goto	i2l4112
  4875                           
  4876                           ;usb_device.c: 511: }
  4877                           ;usb_device.c: 515: USBStatusStageEnabledFlag1 = TRUE;
  4878  001722  0E01               	movlw	1
  4879  001724  6E3F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  4880                           
  4881                           ;usb_device.c: 516: USBStatusStageEnabledFlag2 = TRUE;
  4882  001726  0E01               	movlw	1
  4883  001728  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  4884                           
  4885                           ;usb_device.c: 518: USBDeferINDataStagePackets = FALSE;
  4886  00172A  0E00               	movlw	0
  4887  00172C  6E3C               	movwf	_USBDeferINDataStagePackets,c	;volatile
  4888                           
  4889                           ;usb_device.c: 519: USBDeferOUTDataStagePackets = FALSE;
  4890  00172E  0E00               	movlw	0
  4891  001730  6E3D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  4892                           
  4893                           ;usb_device.c: 520: USBBusIsSuspended = FALSE;
  4894  001732  0E00               	movlw	0
  4895  001734  0100               	movlb	0	; () banked
  4896  001736  6F82               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  4897                           
  4898                           ;usb_device.c: 524: for(i = 0; i < (BYTE)(1+1u); i++)
  4899  001738  0E00               	movlw	0
  4900  00173A  6E1A               	movwf	i2USBDeviceInit@i,c
  4901  00173C                     i2l4124:
  4902                           
  4903                           ; BSR set to: 0
  4904  00173C  0E01               	movlw	1
  4905  00173E  641A               	cpfsgt	i2USBDeviceInit@i,c
  4906  001740  D001               	goto	i2l4128
  4907  001742  D02E               	goto	i2l4134
  4908  001744                     i2l4128:
  4909                           
  4910                           ;usb_device.c: 525: {
  4911                           ;usb_device.c: 526: pBDTEntryIn[i] = 0u;
  4912  001744  501A               	movf	i2USBDeviceInit@i,w,c
  4913  001746  0D02               	mullw	2
  4914  001748  0E6F               	movlw	low _pBDTEntryIn
  4915  00174A  24F3               	addwf	prodl,w,c
  4916  00174C  6ED9               	movwf	fsr2l,c
  4917  00174E  0E00               	movlw	high _pBDTEntryIn
  4918  001750  20F4               	addwfc	prodh,w,c
  4919  001752  6EDA               	movwf	fsr2h,c
  4920  001754  0E00               	movlw	0
  4921  001756  6EDE               	movwf	postinc2,c
  4922  001758  0E00               	movlw	0
  4923  00175A  6EDD               	movwf	postdec2,c
  4924                           
  4925                           ;usb_device.c: 527: pBDTEntryOut[i] = 0u;
  4926  00175C  501A               	movf	i2USBDeviceInit@i,w,c
  4927  00175E  0D02               	mullw	2
  4928  001760  0E73               	movlw	low _pBDTEntryOut
  4929  001762  24F3               	addwf	prodl,w,c
  4930  001764  6ED9               	movwf	fsr2l,c
  4931  001766  0E00               	movlw	high _pBDTEntryOut
  4932  001768  20F4               	addwfc	prodh,w,c
  4933  00176A  6EDA               	movwf	fsr2h,c
  4934  00176C  0E00               	movlw	0
  4935  00176E  6EDE               	movwf	postinc2,c
  4936  001770  0E00               	movlw	0
  4937  001772  6EDD               	movwf	postdec2,c
  4938                           
  4939                           ;usb_device.c: 528: ep_data_in[i].Val = 0u;
  4940  001774  501A               	movf	i2USBDeviceInit@i,w,c
  4941  001776  0D01               	mullw	1
  4942  001778  0E7A               	movlw	low _ep_data_in
  4943  00177A  24F3               	addwf	prodl,w,c
  4944  00177C  6ED9               	movwf	fsr2l,c
  4945  00177E  0E00               	movlw	high _ep_data_in
  4946  001780  20F4               	addwfc	prodh,w,c
  4947  001782  6EDA               	movwf	fsr2h,c
  4948  001784  0E00               	movlw	0
  4949  001786  6EDF               	movwf	indf2,c
  4950                           
  4951                           ;usb_device.c: 529: ep_data_out[i].Val = 0u;
  4952  001788  501A               	movf	i2USBDeviceInit@i,w,c
  4953  00178A  0D01               	mullw	1
  4954  00178C  0E7C               	movlw	low _ep_data_out
  4955  00178E  24F3               	addwf	prodl,w,c
  4956  001790  6ED9               	movwf	fsr2l,c
  4957  001792  0E00               	movlw	high _ep_data_out
  4958  001794  20F4               	addwfc	prodh,w,c
  4959  001796  6EDA               	movwf	fsr2h,c
  4960  001798  0E00               	movlw	0
  4961  00179A  6EDF               	movwf	indf2,c
  4962  00179C  2A1A               	incf	i2USBDeviceInit@i,f,c
  4963  00179E  D7CE               	goto	i2l4124
  4964  0017A0                     i2l4134:
  4965                           
  4966                           ;usb_device.c: 530: }
  4967                           ;usb_device.c: 533: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4968  0017A0  0E08               	movlw	8
  4969  0017A2  0100               	movlb	0	; () banked
  4970  0017A4  6F6F               	movwf	_pBDTEntryIn& (0+255),b
  4971  0017A6  0E0D               	movlw	13
  4972  0017A8  0100               	movlb	0	; () banked
  4973  0017AA  6F70               	movwf	(_pBDTEntryIn+1)& (0+255),b
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;usb_device.c: 535: UEP0 = 0x06|0x10;
  4977  0017AC  0E16               	movlw	22
  4978  0017AE  010F               	movlb	15	; () banked
  4979  0017B0  6F26               	movwf	38,b	;volatile
  4980                           
  4981                           ; BSR set to: 15
  4982                           ;usb_device.c: 537: BDT[0].ADR = ((WORD)(&SetupPkt));
  4983  0017B2  0E00               	movlw	high _SetupPkt
  4984  0017B4  010D               	movlb	13	; () banked
  4985  0017B6  6F03               	movwf	3,b	;volatile
  4986  0017B8  0E8C               	movlw	low _SetupPkt
  4987  0017BA  6F02               	movwf	2,b	;volatile
  4988                           
  4989                           ; BSR set to: 13
  4990                           ;usb_device.c: 538: BDT[0].CNT = 8;
  4991  0017BC  0E08               	movlw	8
  4992  0017BE  010D               	movlb	13	; () banked
  4993  0017C0  6F01               	movwf	1,b	;volatile
  4994                           
  4995                           ; BSR set to: 13
  4996                           ;usb_device.c: 539: BDT[0].STAT.Val = 0x80|0x00|0x04;
  4997  0017C2  0E84               	movlw	132
  4998  0017C4  010D               	movlb	13	; () banked
  4999  0017C6  6F00               	movwf	0,b	;volatile
  5000                           
  5001                           ; BSR set to: 13
  5002                           ;usb_device.c: 542: USBActiveConfiguration = 0;
  5003  0017C8  0E00               	movlw	0
  5004  0017CA  6E47               	movwf	_USBActiveConfiguration,c	;volatile
  5005                           
  5006                           ; BSR set to: 13
  5007                           ;usb_device.c: 545: USBDeviceState = DETACHED_STATE;
  5008  0017CC  0E00               	movlw	0
  5009  0017CE  0100               	movlb	0	; () banked
  5010  0017D0  6F83               	movwf	_USBDeviceState& (0+255),b	;volatile
  5011                           
  5012                           ; BSR set to: 0
  5013  0017D2  0012               	return		;funcret
  5014  0017D4                     __end_ofi2_USBDeviceInit:
  5015                           	opt stack 0
  5016                           pclatu	equ	0xFFB
  5017                           pclath	equ	0xFFA
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           prodh	equ	0xFF4
  5023                           prodl	equ	0xFF3
  5024                           intcon	equ	0xFF2
  5025                           indf0	equ	0xFEF
  5026                           postinc0	equ	0xFEE
  5027                           fsr0h	equ	0xFEA
  5028                           fsr0l	equ	0xFE9
  5029                           wreg	equ	0xFE8
  5030                           fsr1h	equ	0xFE2
  5031                           fsr1l	equ	0xFE1
  5032                           bsr	equ	0xFE0
  5033                           indf2	equ	0xFDF
  5034                           postinc2	equ	0xFDE
  5035                           postdec2	equ	0xFDD
  5036                           fsr2h	equ	0xFDA
  5037                           fsr2l	equ	0xFD9
  5038                           status	equ	0xFD8
  5039                           
  5040 ;; *************** function _USBWakeFromSuspend *****************
  5041 ;; Defined at:
  5042 ;;		line 2449 in file "../usb_lab/usb_device.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;		None               void
  5049 ;; Registers used:
  5050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;Total ram usage:        0 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:    4
  5063 ;; This function calls:
  5064 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5065 ;; This function is called by:
  5066 ;;		_USBDeviceTasks
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text28
  5071  002AEA                     __ptext28:
  5072                           	opt stack 0
  5073  002AEA                     _USBWakeFromSuspend:
  5074                           	opt stack 18
  5075                           
  5076                           ;usb_device.c: 2451: USBBusIsSuspended = FALSE;
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;incstack = 0
  5080  002AEA  0E00               	movlw	0
  5081  002AEC  0100               	movlb	0	; () banked
  5082  002AEE  6F82               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;usb_device.c: 2457: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5086  002AF0  0E00               	movlw	0
  5087  002AF2  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5088  002AF4  0E74               	movlw	116
  5089  002AF6  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5090  002AF8  0E00               	movlw	0
  5091  002AFA  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5092  002AFC  0E00               	movlw	0
  5093  002AFE  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5094  002B00  0E00               	movlw	0
  5095  002B02  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5096  002B04  0E00               	movlw	0
  5097  002B06  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5098  002B08  EC65  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5099                           
  5100                           ;usb_device.c: 2464: UCONbits.SUSPND = 0;
  5101  002B0C  9265               	bcf	3941,1,c	;volatile
  5102                           
  5103                           ;usb_device.c: 2469: UIEbits.ACTVIE = 0;
  5104  002B0E  010F               	movlb	15	; () banked
  5105  002B10  9536               	bcf	54,2,b	;volatile
  5106                           
  5107                           ;usb_device.c: 2487: while(UIRbits.ACTVIF)
  5108  002B12  D001               	goto	i2l4022
  5109  002B14                     i2l4020:
  5110                           
  5111                           ;usb_device.c: 2489: {
  5112                           ;usb_device.c: 2490: (UIR &= 0xFB);
  5113  002B14  9462               	bcf	3938,2,c	;volatile
  5114  002B16                     i2l4022:
  5115  002B16  A462               	btfss	3938,2,c	;volatile
  5116  002B18  0012               	return	
  5117  002B1A  D7FC               	goto	i2l4020
  5118  002B1C                     __end_of_USBWakeFromSuspend:
  5119                           	opt stack 0
  5120                           pclatu	equ	0xFFB
  5121                           pclath	equ	0xFFA
  5122                           tblptru	equ	0xFF8
  5123                           tblptrh	equ	0xFF7
  5124                           tblptrl	equ	0xFF6
  5125                           tablat	equ	0xFF5
  5126                           prodh	equ	0xFF4
  5127                           prodl	equ	0xFF3
  5128                           intcon	equ	0xFF2
  5129                           indf0	equ	0xFEF
  5130                           postinc0	equ	0xFEE
  5131                           fsr0h	equ	0xFEA
  5132                           fsr0l	equ	0xFE9
  5133                           wreg	equ	0xFE8
  5134                           fsr1h	equ	0xFE2
  5135                           fsr1l	equ	0xFE1
  5136                           bsr	equ	0xFE0
  5137                           indf2	equ	0xFDF
  5138                           postinc2	equ	0xFDE
  5139                           postdec2	equ	0xFDD
  5140                           fsr2h	equ	0xFDA
  5141                           fsr2l	equ	0xFD9
  5142                           status	equ	0xFD8
  5143                           
  5144 ;; *************** function _USBSuspend *****************
  5145 ;; Defined at:
  5146 ;;		line 2392 in file "../usb_lab/usb_device.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;		None               void
  5153 ;; Registers used:
  5154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    4
  5167 ;; This function calls:
  5168 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5169 ;; This function is called by:
  5170 ;;		_USBDeviceTasks
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text29
  5175  002B1C                     __ptext29:
  5176                           	opt stack 0
  5177  002B1C                     _USBSuspend:
  5178                           	opt stack 18
  5179                           
  5180                           ;usb_device.c: 2417: UIEbits.ACTVIE = 1;
  5181                           
  5182                           ;incstack = 0
  5183  002B1C  010F               	movlb	15	; () banked
  5184  002B1E  8536               	bsf	54,2,b	;volatile
  5185                           
  5186                           ; BSR set to: 15
  5187                           ;usb_device.c: 2418: (UIR &= 0xEF);
  5188  002B20  9862               	bcf	3938,4,c	;volatile
  5189                           
  5190                           ; BSR set to: 15
  5191                           ;usb_device.c: 2421: UCONbits.SUSPND = 1;
  5192  002B22  8265               	bsf	3941,1,c	;volatile
  5193                           
  5194                           ; BSR set to: 15
  5195                           ;usb_device.c: 2424: USBBusIsSuspended = TRUE;
  5196  002B24  0E01               	movlw	1
  5197  002B26  0100               	movlb	0	; () banked
  5198  002B28  6F82               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;usb_device.c: 2431: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5202  002B2A  0E00               	movlw	0
  5203  002B2C  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5204  002B2E  0E75               	movlw	117
  5205  002B30  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5206  002B32  0E00               	movlw	0
  5207  002B34  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5208  002B36  0E00               	movlw	0
  5209  002B38  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5210  002B3A  0E00               	movlw	0
  5211  002B3C  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5212  002B3E  0E00               	movlw	0
  5213  002B40  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5214  002B42  EC65  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5215  002B46  0012               	return		;funcret
  5216  002B48                     __end_of_USBSuspend:
  5217                           	opt stack 0
  5218                           pclatu	equ	0xFFB
  5219                           pclath	equ	0xFFA
  5220                           tblptru	equ	0xFF8
  5221                           tblptrh	equ	0xFF7
  5222                           tblptrl	equ	0xFF6
  5223                           tablat	equ	0xFF5
  5224                           prodh	equ	0xFF4
  5225                           prodl	equ	0xFF3
  5226                           intcon	equ	0xFF2
  5227                           indf0	equ	0xFEF
  5228                           postinc0	equ	0xFEE
  5229                           fsr0h	equ	0xFEA
  5230                           fsr0l	equ	0xFE9
  5231                           wreg	equ	0xFE8
  5232                           fsr1h	equ	0xFE2
  5233                           fsr1l	equ	0xFE1
  5234                           bsr	equ	0xFE0
  5235                           indf2	equ	0xFDF
  5236                           postinc2	equ	0xFDE
  5237                           postdec2	equ	0xFDD
  5238                           fsr2h	equ	0xFDA
  5239                           fsr2l	equ	0xFD9
  5240                           status	equ	0xFD8
  5241                           
  5242 ;; *************** function _USBStallHandler *****************
  5243 ;; Defined at:
  5244 ;;		line 2349 in file "../usb_lab/usb_device.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;		None               void
  5251 ;; Registers used:
  5252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;Total ram usage:        1 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_USBDeviceTasks
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text30
  5272  002A7C                     __ptext30:
  5273                           	opt stack 0
  5274  002A7C                     _USBStallHandler:
  5275                           	opt stack 22
  5276                           
  5277                           ;usb_device.c: 2362: if(UEP0bits.EPSTALL == 1)
  5278                           
  5279                           ;incstack = 0
  5280  002A7C  010F               	movlb	15	; () banked
  5281  002A7E  A126               	btfss	38,0,b	;volatile
  5282  002A80  D018               	goto	i2l4044
  5283                           
  5284                           ; BSR set to: 15
  5285                           ;usb_device.c: 2363: {
  5286                           ;usb_device.c: 2365: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5287  002A82  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5288  002A86  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5289  002A8A  0E80               	movlw	128
  5290  002A8C  18DE               	xorwf	postinc2,w,c
  5291  002A8E  A4D8               	btfss	status,2,c
  5292  002A90  D00E               	goto	i2l4042
  5293                           
  5294                           ; BSR set to: 15
  5295  002A92  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
  5296  002A96  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5297  002A9A  0E84               	movlw	132
  5298  002A9C  18DE               	xorwf	postinc2,w,c
  5299  002A9E  A4D8               	btfss	status,2,c
  5300  002AA0  D006               	goto	i2l4042
  5301                           
  5302                           ; BSR set to: 15
  5303                           ;usb_device.c: 2366: {
  5304                           ;usb_device.c: 2368: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  5305  002AA2  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5306  002AA6  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5307  002AAA  0E8C               	movlw	140
  5308  002AAC  6EDF               	movwf	indf2,c
  5309  002AAE                     i2l4042:
  5310                           
  5311                           ; BSR set to: 15
  5312                           ;usb_device.c: 2369: }
  5313                           ;usb_device.c: 2370: UEP0bits.EPSTALL = 0;
  5314  002AAE  010F               	movlb	15	; () banked
  5315  002AB0  9126               	bcf	38,0,b	;volatile
  5316  002AB2                     i2l4044:
  5317                           
  5318                           ; BSR set to: 15
  5319                           ;usb_device.c: 2371: }
  5320                           ;usb_device.c: 2373: (UIR &= 0xDF);
  5321  002AB2  9A62               	bcf	3938,5,c	;volatile
  5322                           
  5323                           ; BSR set to: 15
  5324  002AB4  0012               	return		;funcret
  5325  002AB6                     __end_of_USBStallHandler:
  5326                           	opt stack 0
  5327                           pclatu	equ	0xFFB
  5328                           pclath	equ	0xFFA
  5329                           tblptru	equ	0xFF8
  5330                           tblptrh	equ	0xFF7
  5331                           tblptrl	equ	0xFF6
  5332                           tablat	equ	0xFF5
  5333                           prodh	equ	0xFF4
  5334                           prodl	equ	0xFF3
  5335                           intcon	equ	0xFF2
  5336                           indf0	equ	0xFEF
  5337                           postinc0	equ	0xFEE
  5338                           fsr0h	equ	0xFEA
  5339                           fsr0l	equ	0xFE9
  5340                           wreg	equ	0xFE8
  5341                           fsr1h	equ	0xFE2
  5342                           fsr1l	equ	0xFE1
  5343                           bsr	equ	0xFE0
  5344                           indf2	equ	0xFDF
  5345                           postinc2	equ	0xFDE
  5346                           postdec2	equ	0xFDD
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function _USBCtrlEPService *****************
  5352 ;; Defined at:
  5353 ;;		line 2516 in file "../usb_lab/usb_device.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  setup_cnt       1   45[COMRAM] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;		None               void
  5360 ;; Registers used:
  5361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5370 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5371 ;;Total ram usage:        3 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    7
  5374 ;; This function calls:
  5375 ;;		_USBCtrlTrfInHandler
  5376 ;;		_USBCtrlTrfOutHandler
  5377 ;;		_USBCtrlTrfSetupHandler
  5378 ;; This function is called by:
  5379 ;;		_USBDeviceTasks
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           	psect	text31
  5384  0020C2                     __ptext31:
  5385                           	opt stack 0
  5386  0020C2                     _USBCtrlEPService:
  5387                           	opt stack 15
  5388                           
  5389                           ;usb_device.c: 2522: USBStatusStageTimeoutCounter = (BYTE)45;
  5390                           
  5391                           ; BSR set to: 15
  5392                           ;incstack = 0
  5393  0020C2  0E2D               	movlw	45
  5394  0020C4  6E41               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  5395                           
  5396                           ;usb_device.c: 2526: if((USTATcopy.Val & ~0x02) == 0x00)
  5397  0020C6  C049  F02C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  5398  0020CA  0EFD               	movlw	253
  5399  0020CC  162C               	andwf	??_USBCtrlEPService,f,c
  5400  0020CE  A4D8               	btfss	status,2,c
  5401  0020D0  D057               	goto	i2l4078
  5402                           
  5403                           ;usb_device.c: 2527: {
  5404                           ;usb_device.c: 2530: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5405  0020D2  C049  F02C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  5406  0020D6  90D8               	bcf	status,0,c
  5407  0020D8  322C               	rrcf	??_USBCtrlEPService,f,c
  5408  0020DA  0E3F               	movlw	63
  5409  0020DC  162C               	andwf	??_USBCtrlEPService,f,c
  5410  0020DE  502C               	movf	??_USBCtrlEPService,w,c
  5411  0020E0  0D04               	mullw	4
  5412  0020E2  0E00               	movlw	0
  5413  0020E4  24F3               	addwf	prodl,w,c
  5414  0020E6  6E34               	movwf	_pBDTEntryEP0OutCurrent,c
  5415  0020E8  0E0D               	movlw	13
  5416  0020EA  20F4               	addwfc	prodh,w,c
  5417  0020EC  6E35               	movwf	_pBDTEntryEP0OutCurrent+1,c
  5418                           
  5419                           ;usb_device.c: 2538: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5420  0020EE  C034  F036         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  5421  0020F2  C035  F037         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  5422                           
  5423                           ;usb_device.c: 2540: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  5424  0020F6  0E04               	movlw	4
  5425  0020F8  1A36               	xorwf	_pBDTEntryEP0OutNext,f,c
  5426                           
  5427                           ;usb_device.c: 2543: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5428  0020FA  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5429  0020FE  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5430  002102  30DF               	rrcf	indf2,w,c
  5431  002104  32E8               	rrcf	wreg,f,c
  5432  002106  0B0F               	andlw	15
  5433  002108  0A0D               	xorlw	13
  5434  00210A  A4D8               	btfss	status,2,c
  5435  00210C  D036               	goto	i2l4076
  5436                           
  5437                           ;usb_device.c: 2544: {
  5438                           ;usb_device.c: 2545: unsigned char setup_cnt;
  5439                           ;usb_device.c: 2551: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  5440  00210E  0E00               	movlw	0
  5441  002110  6E2E               	movwf	USBCtrlEPService@setup_cnt,c
  5442  002112                     i2l4060:
  5443  002112  0E07               	movlw	7
  5444  002114  642E               	cpfsgt	USBCtrlEPService@setup_cnt,c
  5445  002116  D001               	goto	i2l4064
  5446  002118  D023               	goto	i2l4072
  5447  00211A                     i2l4064:
  5448                           
  5449                           ;usb_device.c: 2552: {
  5450                           ;usb_device.c: 2553: *(BYTE*)((BYTE*)&SetupPkt + setup_cnt) = *(BYTE*)((void *)(pBDTEntr
      +                          yEP0OutCurrent->ADR));
  5451  00211A  EE20 F002          	lfsr	2,2
  5452  00211E  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
  5453  002120  26D9               	addwf	fsr2l,f,c
  5454  002122  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5455  002124  22DA               	addwfc	fsr2h,f,c
  5456  002126  CFDE F02C          	movff	postinc2,??_USBCtrlEPService
  5457  00212A  CFDD F02D          	movff	postdec2,??_USBCtrlEPService+1
  5458  00212E  C02C  FFD9         	movff	??_USBCtrlEPService,fsr2l
  5459  002132  C02D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
  5460  002136  502E               	movf	USBCtrlEPService@setup_cnt,w,c
  5461  002138  0D01               	mullw	1
  5462  00213A  0E8C               	movlw	low _SetupPkt
  5463  00213C  24F3               	addwf	prodl,w,c
  5464  00213E  6EE1               	movwf	fsr1l,c
  5465  002140  0E00               	movlw	high _SetupPkt
  5466  002142  20F4               	addwfc	prodh,w,c
  5467  002144  6EE2               	movwf	fsr1h,c
  5468  002146  CFDF FFE7          	movff	indf2,indf1
  5469                           
  5470                           ;usb_device.c: 2554: pBDTEntryEP0OutCurrent->ADR++;
  5471  00214A  EE20 F002          	lfsr	2,2
  5472  00214E  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
  5473  002150  26D9               	addwf	fsr2l,f,c
  5474  002152  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5475  002154  22DA               	addwfc	fsr2h,f,c
  5476  002156  2ADE               	incf	postinc2,f,c
  5477  002158  0E00               	movlw	0
  5478  00215A  22DD               	addwfc	postdec2,f,c
  5479  00215C  2A2E               	incf	USBCtrlEPService@setup_cnt,f,c
  5480  00215E  D7D9               	goto	i2l4060
  5481  002160                     i2l4072:
  5482                           
  5483                           ;usb_device.c: 2555: }
  5484                           ;usb_device.c: 2556: pBDTEntryEP0OutCurrent->ADR = ((WORD)(&SetupPkt));
  5485  002160  EE20 F002          	lfsr	2,2
  5486  002164  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
  5487  002166  26D9               	addwf	fsr2l,f,c
  5488  002168  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5489  00216A  22DA               	addwfc	fsr2h,f,c
  5490  00216C  0E8C               	movlw	low _SetupPkt
  5491  00216E  6EDE               	movwf	postinc2,c
  5492  002170  0E00               	movlw	high _SetupPkt
  5493  002172  6EDD               	movwf	postdec2,c
  5494                           
  5495                           ;usb_device.c: 2559: USBCtrlTrfSetupHandler();
  5496  002174  ECDB  F012         	call	_USBCtrlTrfSetupHandler	;wreg free
  5497                           
  5498                           ;usb_device.c: 2560: }
  5499  002178  0012               	return	
  5500  00217A                     i2l4076:
  5501                           
  5502                           ;usb_device.c: 2561: else
  5503                           ;usb_device.c: 2562: {
  5504                           ;usb_device.c: 2564: USBCtrlTrfOutHandler();
  5505  00217A  EC6E  F014         	call	_USBCtrlTrfOutHandler	;wreg free
  5506                           
  5507                           ;usb_device.c: 2565: }
  5508                           ;usb_device.c: 2566: }
  5509  00217E  0012               	return	
  5510  002180                     i2l4078:
  5511                           
  5512                           ;usb_device.c: 2567: else if((USTATcopy.Val & ~0x02) == 0x04)
  5513  002180  5049               	movf	_USTATcopy,w,c	;volatile
  5514  002182  0BFD               	andlw	253
  5515  002184  0A04               	xorlw	4
  5516  002186  A4D8               	btfss	status,2,c
  5517  002188  0012               	return	
  5518                           
  5519                           ;usb_device.c: 2568: {
  5520                           ;usb_device.c: 2571: USBCtrlTrfInHandler();
  5521  00218A  EC42  F012         	call	_USBCtrlTrfInHandler	;wreg free
  5522  00218E  0012               	return	
  5523  002190                     __end_of_USBCtrlEPService:
  5524                           	opt stack 0
  5525                           pclatu	equ	0xFFB
  5526                           pclath	equ	0xFFA
  5527                           tblptru	equ	0xFF8
  5528                           tblptrh	equ	0xFF7
  5529                           tblptrl	equ	0xFF6
  5530                           tablat	equ	0xFF5
  5531                           prodh	equ	0xFF4
  5532                           prodl	equ	0xFF3
  5533                           intcon	equ	0xFF2
  5534                           indf0	equ	0xFEF
  5535                           postinc0	equ	0xFEE
  5536                           fsr0h	equ	0xFEA
  5537                           fsr0l	equ	0xFE9
  5538                           wreg	equ	0xFE8
  5539                           indf1	equ	0xFE7
  5540                           fsr1h	equ	0xFE2
  5541                           fsr1l	equ	0xFE1
  5542                           bsr	equ	0xFE0
  5543                           indf2	equ	0xFDF
  5544                           postinc2	equ	0xFDE
  5545                           postdec2	equ	0xFDD
  5546                           fsr2h	equ	0xFDA
  5547                           fsr2l	equ	0xFD9
  5548                           status	equ	0xFD8
  5549                           
  5550 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5551 ;; Defined at:
  5552 ;;		line 2616 in file "../usb_lab/usb_device.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;		None               void
  5559 ;; Registers used:
  5560 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;Total ram usage:        0 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    6
  5573 ;; This function calls:
  5574 ;;		_USBCheckStdRequest
  5575 ;;		_USBCtrlEPServiceComplete
  5576 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5577 ;; This function is called by:
  5578 ;;		_USBCtrlEPService
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text32
  5583  0025B6                     __ptext32:
  5584                           	opt stack 0
  5585  0025B6                     _USBCtrlTrfSetupHandler:
  5586                           	opt stack 15
  5587                           
  5588                           ;usb_device.c: 2621: shortPacketStatus = 0;
  5589                           
  5590                           ;incstack = 0
  5591  0025B6  0E00               	movlw	0
  5592  0025B8  6E46               	movwf	_shortPacketStatus,c	;volatile
  5593                           
  5594                           ;usb_device.c: 2622: USBDeferStatusStagePacket = FALSE;
  5595  0025BA  0E00               	movlw	0
  5596  0025BC  6E3E               	movwf	_USBDeferStatusStagePacket,c	;volatile
  5597                           
  5598                           ;usb_device.c: 2623: USBDeferINDataStagePackets = FALSE;
  5599  0025BE  0E00               	movlw	0
  5600  0025C0  6E3C               	movwf	_USBDeferINDataStagePackets,c	;volatile
  5601                           
  5602                           ;usb_device.c: 2624: USBDeferOUTDataStagePackets = FALSE;
  5603  0025C2  0E00               	movlw	0
  5604  0025C4  6E3D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  5605                           
  5606                           ;usb_device.c: 2625: BothEP0OutUOWNsSet = FALSE;
  5607  0025C6  0E00               	movlw	0
  5608  0025C8  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  5609                           
  5610                           ;usb_device.c: 2626: controlTransferState = 0;
  5611  0025CA  0E00               	movlw	0
  5612  0025CC  6E42               	movwf	_controlTransferState,c	;volatile
  5613                           
  5614                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5615  0025CE  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
  5616  0025D2  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5617  0025D6  0E7F               	movlw	127
  5618  0025D8  16DF               	andwf	indf2,f,c
  5619                           
  5620                           ;usb_device.c: 2636: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5621  0025DA  0E04               	movlw	4
  5622  0025DC  0100               	movlb	0	; () banked
  5623  0025DE  1B6F               	xorwf	_pBDTEntryIn& (0+255),f,b
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;usb_device.c: 2637: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5627  0025E0  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
  5628  0025E4  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5629  0025E8  0E7F               	movlw	127
  5630  0025EA  16DF               	andwf	indf2,f,c
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;usb_device.c: 2638: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5634  0025EC  0E04               	movlw	4
  5635  0025EE  0100               	movlb	0	; () banked
  5636  0025F0  1B6F               	xorwf	_pBDTEntryIn& (0+255),f,b
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;usb_device.c: 2639: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5640  0025F2  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5641  0025F6  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5642  0025FA  0E7F               	movlw	127
  5643  0025FC  16DF               	andwf	indf2,f,c
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;usb_device.c: 2641: inPipes[0].info.Val = 0;
  5647  0025FE  0E00               	movlw	0
  5648  002600  0100               	movlb	0	; () banked
  5649  002602  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;usb_device.c: 2642: inPipes[0].wCount.Val = 0;
  5653  002604  0E00               	movlw	0
  5654  002606  0100               	movlb	0	; () banked
  5655  002608  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
  5656  00260A  0E00               	movlw	0
  5657  00260C  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;usb_device.c: 2643: outPipes[0].info.Val = 0;
  5661  00260E  0E00               	movlw	0
  5662  002610  0100               	movlb	0	; () banked
  5663  002612  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;usb_device.c: 2644: outPipes[0].wCount.Val = 0;
  5667  002614  0E00               	movlw	0
  5668  002616  0100               	movlb	0	; () banked
  5669  002618  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
  5670  00261A  0E00               	movlw	0
  5671  00261C  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;usb_device.c: 2650: USBCheckStdRequest();
  5675  00261E  EC1B  F00E         	call	_USBCheckStdRequest	;wreg free
  5676                           
  5677                           ;usb_device.c: 2651: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5678  002622  0E00               	movlw	0
  5679  002624  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5680  002626  0E03               	movlw	3
  5681  002628  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5682  00262A  0E00               	movlw	0
  5683  00262C  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5684  00262E  0E00               	movlw	0
  5685  002630  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5686  002632  0E00               	movlw	0
  5687  002634  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5688  002636  0E00               	movlw	0
  5689  002638  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5690  00263A  EC65  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5691                           
  5692                           ;usb_device.c: 2664: USBCtrlEPServiceComplete();
  5693  00263E  ECF9  F00F         	call	_USBCtrlEPServiceComplete	;wreg free
  5694  002642  0012               	return		;funcret
  5695  002644                     __end_of_USBCtrlTrfSetupHandler:
  5696                           	opt stack 0
  5697                           pclatu	equ	0xFFB
  5698                           pclath	equ	0xFFA
  5699                           tblptru	equ	0xFF8
  5700                           tblptrh	equ	0xFF7
  5701                           tblptrl	equ	0xFF6
  5702                           tablat	equ	0xFF5
  5703                           prodh	equ	0xFF4
  5704                           prodl	equ	0xFF3
  5705                           intcon	equ	0xFF2
  5706                           indf0	equ	0xFEF
  5707                           postinc0	equ	0xFEE
  5708                           fsr0h	equ	0xFEA
  5709                           fsr0l	equ	0xFE9
  5710                           wreg	equ	0xFE8
  5711                           indf1	equ	0xFE7
  5712                           fsr1h	equ	0xFE2
  5713                           fsr1l	equ	0xFE1
  5714                           bsr	equ	0xFE0
  5715                           indf2	equ	0xFDF
  5716                           postinc2	equ	0xFDE
  5717                           postdec2	equ	0xFDD
  5718                           fsr2h	equ	0xFDA
  5719                           fsr2l	equ	0xFD9
  5720                           status	equ	0xFD8
  5721                           
  5722 ;; *************** function _USBCtrlEPServiceComplete *****************
  5723 ;; Defined at:
  5724 ;;		line 1779 in file "../usb_lab/usb_device.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;		None
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;		None               void
  5731 ;; Registers used:
  5732 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;Total ram usage:        0 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    2
  5745 ;; This function calls:
  5746 ;;		_USBCtrlEPAllowDataStage
  5747 ;;		_USBCtrlEPAllowStatusStage
  5748 ;; This function is called by:
  5749 ;;		_USBCtrlTrfSetupHandler
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text33
  5754  001FF2                     __ptext33:
  5755                           	opt stack 0
  5756  001FF2                     _USBCtrlEPServiceComplete:
  5757                           	opt stack 18
  5758                           
  5759                           ;usb_device.c: 1785: UCONbits.PKTDIS = 0;
  5760                           
  5761                           ;incstack = 0
  5762  001FF2  9865               	bcf	3941,4,c	;volatile
  5763                           
  5764                           ;usb_device.c: 1791: if(inPipes[0].info.bits.busy == 0)
  5765  001FF4  0100               	movlb	0	; () banked
  5766  001FF6  BF6C               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
  5767  001FF8  D02D               	goto	i2l642
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;usb_device.c: 1792: {
  5771                           ;usb_device.c: 1793: if(outPipes[0].info.bits.busy == 1)
  5772  001FFA  0100               	movlb	0	; () banked
  5773  001FFC  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
  5774  001FFE  D00B               	goto	i2l3462
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;usb_device.c: 1794: {
  5778                           ;usb_device.c: 1795: controlTransferState = 2;
  5779  002000  0E02               	movlw	2
  5780  002002  6E42               	movwf	_controlTransferState,c	;volatile
  5781                           
  5782                           ;usb_device.c: 1806: if(USBDeferOUTDataStagePackets == FALSE)
  5783  002004  503D               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  5784  002006  B4D8               	btfsc	status,2,c
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;usb_device.c: 1807: {
  5788                           ;usb_device.c: 1808: USBCtrlEPAllowDataStage();
  5789  002008  EC22  F013         	call	_USBCtrlEPAllowDataStage	;wreg free
  5790                           
  5791                           ;usb_device.c: 1809: }
  5792                           ;usb_device.c: 1813: USBStatusStageEnabledFlag2 = FALSE;
  5793  00200C  0E00               	movlw	0
  5794  00200E  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5795                           
  5796                           ;usb_device.c: 1814: USBStatusStageEnabledFlag1 = FALSE;
  5797  002010  0E00               	movlw	0
  5798  002012  6E3F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5799                           
  5800                           ;usb_device.c: 1815: }
  5801  002014  0012               	return	
  5802  002016                     i2l3462:
  5803                           
  5804                           ;usb_device.c: 1816: else
  5805                           ;usb_device.c: 1817: {
  5806                           ;usb_device.c: 1822: pBDTEntryEP0OutNext->CNT = 8;
  5807  002016  EE20 F001          	lfsr	2,1
  5808  00201A  5036               	movf	_pBDTEntryEP0OutNext,w,c
  5809  00201C  26D9               	addwf	fsr2l,f,c
  5810  00201E  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  5811  002020  22DA               	addwfc	fsr2h,f,c
  5812  002022  0E08               	movlw	8
  5813  002024  6EDF               	movwf	indf2,c
  5814                           
  5815                           ;usb_device.c: 1823: pBDTEntryEP0OutNext->ADR = ((WORD)(&SetupPkt));
  5816  002026  EE20 F002          	lfsr	2,2
  5817  00202A  5036               	movf	_pBDTEntryEP0OutNext,w,c
  5818  00202C  26D9               	addwf	fsr2l,f,c
  5819  00202E  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  5820  002030  22DA               	addwfc	fsr2h,f,c
  5821  002032  0E8C               	movlw	low _SetupPkt
  5822  002034  6EDE               	movwf	postinc2,c
  5823  002036  0E00               	movlw	high _SetupPkt
  5824  002038  6EDD               	movwf	postdec2,c
  5825                           
  5826                           ;usb_device.c: 1824: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  5827  00203A  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5828  00203E  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5829  002042  0E8C               	movlw	140
  5830  002044  6EDF               	movwf	indf2,c
  5831                           
  5832                           ;usb_device.c: 1825: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  5833  002046  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
  5834  00204A  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5835  00204E  0E84               	movlw	132
  5836  002050  6EDF               	movwf	indf2,c
  5837                           
  5838                           ;usb_device.c: 1826: }
  5839                           ;usb_device.c: 1827: }
  5840  002052  0012               	return	
  5841  002054                     i2l642:
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;usb_device.c: 1828: else
  5845                           ;usb_device.c: 1829: {
  5846                           ;usb_device.c: 1830: if(SetupPkt.DataDir == (0x80>>7))
  5847  002054  0100               	movlb	0	; () banked
  5848  002056  AF8C               	btfss	_SetupPkt& (0+255),7,b	;volatile
  5849  002058  D010               	goto	i2l3480
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;usb_device.c: 1831: {
  5853                           ;usb_device.c: 1832: controlTransferState = 1;
  5854  00205A  0E01               	movlw	1
  5855  00205C  6E42               	movwf	_controlTransferState,c	;volatile
  5856                           
  5857                           ;usb_device.c: 1846: if(USBDeferINDataStagePackets == FALSE)
  5858  00205E  503C               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  5859  002060  B4D8               	btfsc	status,2,c
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;usb_device.c: 1847: {
  5863                           ;usb_device.c: 1848: USBCtrlEPAllowDataStage();
  5864  002062  EC22  F013         	call	_USBCtrlEPAllowDataStage	;wreg free
  5865                           
  5866                           ;usb_device.c: 1849: }
  5867                           ;usb_device.c: 1871: USBStatusStageEnabledFlag2 = FALSE;
  5868  002066  0E00               	movlw	0
  5869  002068  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5870                           
  5871                           ;usb_device.c: 1872: USBStatusStageEnabledFlag1 = FALSE;
  5872  00206A  0E00               	movlw	0
  5873  00206C  6E3F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5874                           
  5875                           ;usb_device.c: 1873: if(USBDeferStatusStagePacket == FALSE)
  5876  00206E  503E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  5877  002070  A4D8               	btfss	status,2,c
  5878  002072  0012               	return	
  5879                           
  5880                           ;usb_device.c: 1874: {
  5881                           ;usb_device.c: 1875: USBCtrlEPAllowStatusStage();
  5882  002074  ECEC  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5883                           
  5884                           ;usb_device.c: 1876: }
  5885                           ;usb_device.c: 1877: }
  5886  002078  0012               	return	
  5887  00207A                     i2l3480:
  5888                           
  5889                           ;usb_device.c: 1878: else
  5890                           ;usb_device.c: 1879: {
  5891                           ;usb_device.c: 1890: controlTransferState = 2;
  5892  00207A  0E02               	movlw	2
  5893  00207C  6E42               	movwf	_controlTransferState,c	;volatile
  5894                           
  5895                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->CNT = 8;
  5896  00207E  EE20 F001          	lfsr	2,1
  5897  002082  5036               	movf	_pBDTEntryEP0OutNext,w,c
  5898  002084  26D9               	addwf	fsr2l,f,c
  5899  002086  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  5900  002088  22DA               	addwfc	fsr2h,f,c
  5901  00208A  0E08               	movlw	8
  5902  00208C  6EDF               	movwf	indf2,c
  5903                           
  5904                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->ADR = ((WORD)(&SetupPkt));
  5905  00208E  EE20 F002          	lfsr	2,2
  5906  002092  5036               	movf	_pBDTEntryEP0OutNext,w,c
  5907  002094  26D9               	addwf	fsr2l,f,c
  5908  002096  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  5909  002098  22DA               	addwfc	fsr2h,f,c
  5910  00209A  0E8C               	movlw	low _SetupPkt
  5911  00209C  6EDE               	movwf	postinc2,c
  5912  00209E  0E00               	movlw	high _SetupPkt
  5913  0020A0  6EDD               	movwf	postdec2,c
  5914                           
  5915                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  5916  0020A2  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5917  0020A6  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5918  0020AA  0E84               	movlw	132
  5919  0020AC  6EDF               	movwf	indf2,c
  5920                           
  5921                           ;usb_device.c: 1898: USBStatusStageEnabledFlag2 = FALSE;
  5922  0020AE  0E00               	movlw	0
  5923  0020B0  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5924                           
  5925                           ;usb_device.c: 1899: USBStatusStageEnabledFlag1 = FALSE;
  5926  0020B2  0E00               	movlw	0
  5927  0020B4  6E3F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5928                           
  5929                           ;usb_device.c: 1900: if(USBDeferStatusStagePacket == FALSE)
  5930  0020B6  503E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  5931  0020B8  A4D8               	btfss	status,2,c
  5932  0020BA  0012               	return	
  5933                           
  5934                           ;usb_device.c: 1901: {
  5935                           ;usb_device.c: 1902: USBCtrlEPAllowStatusStage();
  5936  0020BC  ECEC  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5937  0020C0  0012               	return	
  5938  0020C2                     __end_of_USBCtrlEPServiceComplete:
  5939                           	opt stack 0
  5940                           pclatu	equ	0xFFB
  5941                           pclath	equ	0xFFA
  5942                           tblptru	equ	0xFF8
  5943                           tblptrh	equ	0xFF7
  5944                           tblptrl	equ	0xFF6
  5945                           tablat	equ	0xFF5
  5946                           prodh	equ	0xFF4
  5947                           prodl	equ	0xFF3
  5948                           intcon	equ	0xFF2
  5949                           indf0	equ	0xFEF
  5950                           postinc0	equ	0xFEE
  5951                           fsr0h	equ	0xFEA
  5952                           fsr0l	equ	0xFE9
  5953                           wreg	equ	0xFE8
  5954                           indf1	equ	0xFE7
  5955                           fsr1h	equ	0xFE2
  5956                           fsr1l	equ	0xFE1
  5957                           bsr	equ	0xFE0
  5958                           indf2	equ	0xFDF
  5959                           postinc2	equ	0xFDE
  5960                           postdec2	equ	0xFDD
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8
  5964                           
  5965 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5966 ;; Defined at:
  5967 ;;		line 1653 in file "../usb_lab/usb_device.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;		None               void
  5974 ;; Registers used:
  5975 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5985 ;;Total ram usage:        0 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    1
  5988 ;; This function calls:
  5989 ;;		_USBCtrlTrfTxService
  5990 ;; This function is called by:
  5991 ;;		_USBCtrlEPServiceComplete
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text34
  5996  002644                     __ptext34:
  5997                           	opt stack 0
  5998  002644                     _USBCtrlEPAllowDataStage:
  5999                           	opt stack 18
  6000                           
  6001                           ;usb_device.c: 1655: USBDeferINDataStagePackets = FALSE;
  6002                           
  6003                           ;incstack = 0
  6004  002644  0E00               	movlw	0
  6005  002646  6E3C               	movwf	_USBDeferINDataStagePackets,c	;volatile
  6006                           
  6007                           ;usb_device.c: 1656: USBDeferOUTDataStagePackets = FALSE;
  6008  002648  0E00               	movlw	0
  6009  00264A  6E3D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  6010                           
  6011                           ;usb_device.c: 1658: if(controlTransferState == 2)
  6012  00264C  0E02               	movlw	2
  6013  00264E  1842               	xorwf	_controlTransferState,w,c	;volatile
  6014  002650  A4D8               	btfss	status,2,c
  6015  002652  D019               	goto	i2l3248
  6016                           
  6017                           ;usb_device.c: 1659: {
  6018                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->CNT = 8;
  6019  002654  EE20 F001          	lfsr	2,1
  6020  002658  5036               	movf	_pBDTEntryEP0OutNext,w,c
  6021  00265A  26D9               	addwf	fsr2l,f,c
  6022  00265C  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  6023  00265E  22DA               	addwfc	fsr2h,f,c
  6024  002660  0E08               	movlw	8
  6025  002662  6EDF               	movwf	indf2,c
  6026                           
  6027                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((WORD)(&CtrlTrfData));
  6028  002664  EE20 F002          	lfsr	2,2
  6029  002668  5036               	movf	_pBDTEntryEP0OutNext,w,c
  6030  00266A  26D9               	addwf	fsr2l,f,c
  6031  00266C  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  6032  00266E  22DA               	addwfc	fsr2h,f,c
  6033  002670  0E84               	movlw	low _CtrlTrfData
  6034  002672  6EDE               	movwf	postinc2,c
  6035  002674  0E00               	movlw	high _CtrlTrfData
  6036  002676  6EDD               	movwf	postdec2,c
  6037                           
  6038                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  6039  002678  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6040  00267C  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6041  002680  0EC8               	movlw	200
  6042  002682  6EDF               	movwf	indf2,c
  6043                           
  6044                           ;usb_device.c: 1664: }
  6045  002684  0012               	return	
  6046  002686                     i2l3248:
  6047                           
  6048                           ;usb_device.c: 1665: else
  6049                           ;usb_device.c: 1666: {
  6050                           ;usb_device.c: 1669: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6051  002686  0100               	movlb	0	; () banked
  6052  002688  516D               	movf	(_inPipes+4)& (0+255),w,b	;volatile
  6053  00268A  0100               	movlb	0	; () banked
  6054  00268C  5D92               	subwf	(_SetupPkt+6)& (0+255),w,b	;volatile
  6055  00268E  0100               	movlb	0	; () banked
  6056  002690  516E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
  6057  002692  0100               	movlb	0	; () banked
  6058  002694  5993               	subwfb	(_SetupPkt+7)& (0+255),w,b	;volatile
  6059  002696  B0D8               	btfsc	status,0,c
  6060  002698  D004               	goto	i2l3252
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;usb_device.c: 1670: {
  6064                           ;usb_device.c: 1671: inPipes[0].wCount.Val = SetupPkt.wLength;
  6065  00269A  C092  F06D         	movff	_SetupPkt+6,_inPipes+4	;volatile
  6066  00269E  C093  F06E         	movff	_SetupPkt+7,_inPipes+5	;volatile
  6067  0026A2                     i2l3252:
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;usb_device.c: 1672: }
  6071                           ;usb_device.c: 1673: USBCtrlTrfTxService();
  6072  0026A2  EC0E  F00F         	call	_USBCtrlTrfTxService	;wreg free
  6073                           
  6074                           ;usb_device.c: 1678: pBDTEntryIn[0]->ADR = ((WORD)(&CtrlTrfData));
  6075  0026A6  0100               	movlb	0	; () banked
  6076  0026A8  EE20 F002          	lfsr	2,2
  6077  0026AC  516F               	movf	_pBDTEntryIn& (0+255),w,b
  6078  0026AE  26D9               	addwf	fsr2l,f,c
  6079  0026B0  5170               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  6080  0026B2  22DA               	addwfc	fsr2h,f,c
  6081  0026B4  0E84               	movlw	low _CtrlTrfData
  6082  0026B6  6EDE               	movwf	postinc2,c
  6083  0026B8  0E00               	movlw	high _CtrlTrfData
  6084  0026BA  6EDD               	movwf	postdec2,c
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;usb_device.c: 1679: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  6088  0026BC  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
  6089  0026C0  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6090  0026C4  0EC8               	movlw	200
  6091  0026C6  6EDF               	movwf	indf2,c
  6092  0026C8  0012               	return	
  6093  0026CA                     __end_of_USBCtrlEPAllowDataStage:
  6094                           	opt stack 0
  6095                           pclatu	equ	0xFFB
  6096                           pclath	equ	0xFFA
  6097                           tblptru	equ	0xFF8
  6098                           tblptrh	equ	0xFF7
  6099                           tblptrl	equ	0xFF6
  6100                           tablat	equ	0xFF5
  6101                           prodh	equ	0xFF4
  6102                           prodl	equ	0xFF3
  6103                           intcon	equ	0xFF2
  6104                           indf0	equ	0xFEF
  6105                           postinc0	equ	0xFEE
  6106                           fsr0h	equ	0xFEA
  6107                           fsr0l	equ	0xFE9
  6108                           wreg	equ	0xFE8
  6109                           indf1	equ	0xFE7
  6110                           fsr1h	equ	0xFE2
  6111                           fsr1l	equ	0xFE1
  6112                           bsr	equ	0xFE0
  6113                           indf2	equ	0xFDF
  6114                           postinc2	equ	0xFDE
  6115                           postdec2	equ	0xFDD
  6116                           fsr2h	equ	0xFDA
  6117                           fsr2l	equ	0xFD9
  6118                           status	equ	0xFD8
  6119                           
  6120 ;; *************** function _USBCheckStdRequest *****************
  6121 ;; Defined at:
  6122 ;;		line 2832 in file "../usb_lab/usb_device.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;		None
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;		None
  6127 ;; Return value:  Size  Location     Type
  6128 ;;		None               void
  6129 ;; Registers used:
  6130 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6140 ;;Total ram usage:        0 bytes
  6141 ;; Hardware stack levels used:    1
  6142 ;; Hardware stack levels required when called:    5
  6143 ;; This function calls:
  6144 ;;		_USBStdFeatureReqHandler
  6145 ;;		_USBStdGetDscHandler
  6146 ;;		_USBStdGetStatusHandler
  6147 ;;		_USBStdSetCfgHandler
  6148 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6149 ;; This function is called by:
  6150 ;;		_USBCtrlTrfSetupHandler
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text35
  6155  001C36                     __ptext35:
  6156                           	opt stack 0
  6157  001C36                     _USBCheckStdRequest:
  6158                           	opt stack 15
  6159                           
  6160                           ;usb_device.c: 2834: if(SetupPkt.RequestType != (0x00>>5)) return;
  6161                           
  6162                           ;incstack = 0
  6163  001C36  0100               	movlb	0	; () banked
  6164  001C38  398C               	swapf	_SetupPkt& (0+255),w,b	;volatile
  6165  001C3A  32E8               	rrcf	wreg,f,c
  6166  001C3C  0B03               	andlw	3
  6167  001C3E  0900               	iorlw	0
  6168  001C40  A4D8               	btfss	status,2,c
  6169  001C42  0012               	return	
  6170  001C44  D050               	goto	i2l3570
  6171  001C46                     i2l767:
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;usb_device.c: 2839: inPipes[0].info.bits.busy = 1;
  6175  001C46  0100               	movlb	0	; () banked
  6176  001C48  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;usb_device.c: 2840: USBDeviceState = ADR_PENDING_STATE;
  6180  001C4A  0E08               	movlw	8
  6181  001C4C  0100               	movlb	0	; () banked
  6182  001C4E  6F83               	movwf	_USBDeviceState& (0+255),b	;volatile
  6183                           
  6184                           ;usb_device.c: 2842: break;
  6185  001C50  0012               	return	
  6186  001C52                     i2l3540:
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;usb_device.c: 2844: USBStdGetDscHandler();
  6190  001C52  ECEA  F00B         	call	_USBStdGetDscHandler	;wreg free
  6191                           
  6192                           ;usb_device.c: 2845: break;
  6193  001C56  0012               	return	
  6194  001C58                     i2l3542:
  6195                           
  6196                           ;usb_device.c: 2847: USBStdSetCfgHandler();
  6197  001C58  EC86  F00F         	call	_USBStdSetCfgHandler	;wreg free
  6198                           
  6199                           ;usb_device.c: 2848: break;
  6200  001C5C  0012               	return	
  6201  001C5E                     i2l3544:
  6202                           
  6203                           ;usb_device.c: 2850: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
  6204  001C5E  0E47               	movlw	low _USBActiveConfiguration
  6205  001C60  0100               	movlb	0	; () banked
  6206  001C62  6F69               	movwf	_inPipes& (0+255),b	;volatile
  6207  001C64  0E00               	movlw	high _USBActiveConfiguration
  6208  001C66  0100               	movlb	0	; () banked
  6209  001C68  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;usb_device.c: 2851: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6213  001C6A  0100               	movlb	0	; () banked
  6214  001C6C  816C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;usb_device.c: 2852: inPipes[0].wCount.v[0] = 1;
  6218  001C6E  0E01               	movlw	1
  6219  001C70  0100               	movlb	0	; () banked
  6220  001C72  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;usb_device.c: 2853: inPipes[0].info.bits.busy = 1;
  6224  001C74  0100               	movlb	0	; () banked
  6225  001C76  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  6226                           
  6227                           ;usb_device.c: 2854: break;
  6228  001C78  0012               	return	
  6229  001C7A                     i2l3552:
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;usb_device.c: 2856: USBStdGetStatusHandler();
  6233  001C7A  EC8D  F011         	call	_USBStdGetStatusHandler	;wreg free
  6234                           
  6235                           ;usb_device.c: 2857: break;
  6236  001C7E  0012               	return	
  6237  001C80                     i2l3554:
  6238                           
  6239                           ;usb_device.c: 2859: case 3:
  6240                           ;usb_device.c: 2860: USBStdFeatureReqHandler();
  6241  001C80  ECE9  F007         	call	_USBStdFeatureReqHandler	;wreg free
  6242                           
  6243                           ;usb_device.c: 2861: break;
  6244  001C84  0012               	return	
  6245  001C86                     i2l3556:
  6246                           
  6247                           ;usb_device.c: 2863: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
  6248  001C86  0100               	movlb	0	; () banked
  6249  001C88  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  6250  001C8A  0D01               	mullw	1
  6251  001C8C  0E48               	movlw	low _USBAlternateInterface
  6252  001C8E  24F3               	addwf	prodl,w,c
  6253  001C90  0100               	movlb	0	; () banked
  6254  001C92  6F69               	movwf	_inPipes& (0+255),b	;volatile
  6255  001C94  0E00               	movlw	high _USBAlternateInterface
  6256  001C96  20F4               	addwfc	prodh,w,c
  6257  001C98  0100               	movlb	0	; () banked
  6258  001C9A  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;usb_device.c: 2864: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6262  001C9C  0100               	movlb	0	; () banked
  6263  001C9E  816C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;usb_device.c: 2865: inPipes[0].wCount.v[0] = 1;
  6267  001CA0  0E01               	movlw	1
  6268  001CA2  0100               	movlb	0	; () banked
  6269  001CA4  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;usb_device.c: 2866: inPipes[0].info.bits.busy = 1;
  6273  001CA6  0100               	movlb	0	; () banked
  6274  001CA8  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  6275                           
  6276                           ;usb_device.c: 2867: break;
  6277  001CAA  0012               	return	
  6278  001CAC                     i2l776:
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;usb_device.c: 2869: inPipes[0].info.bits.busy = 1;
  6282  001CAC  0100               	movlb	0	; () banked
  6283  001CAE  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;usb_device.c: 2870: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6287  001CB0  0100               	movlb	0	; () banked
  6288  001CB2  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  6289  001CB4  0D01               	mullw	1
  6290  001CB6  0E48               	movlw	low _USBAlternateInterface
  6291  001CB8  24F3               	addwf	prodl,w,c
  6292  001CBA  6ED9               	movwf	fsr2l,c
  6293  001CBC  0E00               	movlw	high _USBAlternateInterface
  6294  001CBE  20F4               	addwfc	prodh,w,c
  6295  001CC0  6EDA               	movwf	fsr2h,c
  6296  001CC2  C08E  FFDF         	movff	_SetupPkt+2,indf2	;volatile
  6297                           
  6298                           ;usb_device.c: 2871: break;
  6299  001CC6  0012               	return	
  6300  001CC8                     i2l3566:
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;usb_device.c: 2873: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6304  001CC8  0E00               	movlw	0
  6305  001CCA  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6306  001CCC  0E02               	movlw	2
  6307  001CCE  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6308  001CD0  0E00               	movlw	0
  6309  001CD2  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6310  001CD4  0E00               	movlw	0
  6311  001CD6  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  6312  001CD8  0E00               	movlw	0
  6313  001CDA  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  6314  001CDC  0E00               	movlw	0
  6315  001CDE  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  6316  001CE0  EC65  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6317                           
  6318                           ;usb_device.c: 2878: }
  6319                           
  6320                           ;usb_device.c: 2877: break;
  6321                           
  6322                           ;usb_device.c: 2876: default:
  6323                           
  6324                           ;usb_device.c: 2875: case 12:
  6325                           
  6326                           ;usb_device.c: 2874: break;
  6327  001CE4  0012               	return	
  6328  001CE6                     i2l3570:
  6329  001CE6  0100               	movlb	0	; () banked
  6330  001CE8  518D               	movf	(_SetupPkt+1)& (0+255),w,b	;volatile
  6331                           
  6332                           ; Switch size 1, requested type "space"
  6333                           ; Number of cases is 11, Range of values is 0 to 12
  6334                           ; switch strategies available:
  6335                           ; Name         Instructions Cycles
  6336                           ; simple_byte           34    18 (average)
  6337                           ;	Chosen strategy is simple_byte
  6338  001CEA  0A00               	xorlw	0	; case 0
  6339  001CEC  B4D8               	btfsc	status,2,c
  6340  001CEE  D7C5               	goto	i2l3552
  6341  001CF0  0A01               	xorlw	1	; case 1
  6342  001CF2  B4D8               	btfsc	status,2,c
  6343  001CF4  D7C5               	goto	i2l3554
  6344  001CF6  0A02               	xorlw	2	; case 3
  6345  001CF8  B4D8               	btfsc	status,2,c
  6346  001CFA  D7C2               	goto	i2l3554
  6347  001CFC  0A06               	xorlw	6	; case 5
  6348  001CFE  B4D8               	btfsc	status,2,c
  6349  001D00  D7A2               	goto	i2l767
  6350  001D02  0A03               	xorlw	3	; case 6
  6351  001D04  B4D8               	btfsc	status,2,c
  6352  001D06  D7A5               	goto	i2l3540
  6353  001D08  0A01               	xorlw	1	; case 7
  6354  001D0A  B4D8               	btfsc	status,2,c
  6355  001D0C  D7DD               	goto	i2l3566
  6356  001D0E  0A0F               	xorlw	15	; case 8
  6357  001D10  B4D8               	btfsc	status,2,c
  6358  001D12  D7A5               	goto	i2l3544
  6359  001D14  0A01               	xorlw	1	; case 9
  6360  001D16  B4D8               	btfsc	status,2,c
  6361  001D18  D79F               	goto	i2l3542
  6362  001D1A  0A03               	xorlw	3	; case 10
  6363  001D1C  B4D8               	btfsc	status,2,c
  6364  001D1E  D7B3               	goto	i2l3556
  6365  001D20  0A01               	xorlw	1	; case 11
  6366  001D22  B4D8               	btfsc	status,2,c
  6367  001D24  D7C3               	goto	i2l776
  6368  001D26  0A07               	xorlw	7	; case 12
  6369  001D28  0012               	return	
  6370  001D2A                     __end_of_USBCheckStdRequest:
  6371                           	opt stack 0
  6372                           pclatu	equ	0xFFB
  6373                           pclath	equ	0xFFA
  6374                           tblptru	equ	0xFF8
  6375                           tblptrh	equ	0xFF7
  6376                           tblptrl	equ	0xFF6
  6377                           tablat	equ	0xFF5
  6378                           prodh	equ	0xFF4
  6379                           prodl	equ	0xFF3
  6380                           intcon	equ	0xFF2
  6381                           indf0	equ	0xFEF
  6382                           postinc0	equ	0xFEE
  6383                           fsr0h	equ	0xFEA
  6384                           fsr0l	equ	0xFE9
  6385                           wreg	equ	0xFE8
  6386                           indf1	equ	0xFE7
  6387                           fsr1h	equ	0xFE2
  6388                           fsr1l	equ	0xFE1
  6389                           bsr	equ	0xFE0
  6390                           indf2	equ	0xFDF
  6391                           postinc2	equ	0xFDE
  6392                           postdec2	equ	0xFDD
  6393                           fsr2h	equ	0xFDA
  6394                           fsr2l	equ	0xFD9
  6395                           status	equ	0xFD8
  6396                           
  6397 ;; *************** function _USBStdSetCfgHandler *****************
  6398 ;; Defined at:
  6399 ;;		line 2125 in file "../usb_lab/usb_device.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  i               1   37[COMRAM] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;		None               void
  6406 ;; Registers used:
  6407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;Total ram usage:        1 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    4
  6420 ;; This function calls:
  6421 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6422 ;;		i2_memset
  6423 ;; This function is called by:
  6424 ;;		_USBCheckStdRequest
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           	psect	text36
  6429  001F0C                     __ptext36:
  6430                           	opt stack 0
  6431  001F0C                     _USBStdSetCfgHandler:
  6432                           	opt stack 15
  6433                           
  6434                           ;usb_device.c: 2127: BYTE i;
  6435                           ;usb_device.c: 2130: inPipes[0].info.bits.busy = 1;
  6436                           
  6437                           ;incstack = 0
  6438  001F0C  0100               	movlb	0	; () banked
  6439  001F0E  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;usb_device.c: 2133: memset((void*)&UEP1,0x00,(1));;
  6443  001F10  0E27               	movlw	39
  6444  001F12  6E12               	movwf	i2memset@p1,c
  6445  001F14  0E0F               	movlw	15
  6446  001F16  6E13               	movwf	i2memset@p1+1,c
  6447  001F18  0E00               	movlw	0
  6448  001F1A  6E15               	movwf	i2memset@c+1,c
  6449  001F1C  0E00               	movlw	0
  6450  001F1E  6E14               	movwf	i2memset@c,c
  6451  001F20  0E00               	movlw	0
  6452  001F22  6E17               	movwf	i2memset@n+1,c
  6453  001F24  0E01               	movlw	1
  6454  001F26  6E16               	movwf	i2memset@n,c
  6455  001F28  ECA4  F015         	call	i2_memset	;wreg free
  6456                           
  6457                           ;usb_device.c: 2136: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6458  001F2C  0E00               	movlw	0
  6459  001F2E  6E12               	movwf	i2memset@p1,c
  6460  001F30  0E0D               	movlw	13
  6461  001F32  6E13               	movwf	i2memset@p1+1,c
  6462  001F34  0E00               	movlw	0
  6463  001F36  6E15               	movwf	i2memset@c+1,c
  6464  001F38  0E00               	movlw	0
  6465  001F3A  6E14               	movwf	i2memset@c,c
  6466  001F3C  0E00               	movlw	0
  6467  001F3E  6E17               	movwf	i2memset@n+1,c
  6468  001F40  0E20               	movlw	32
  6469  001F42  6E16               	movwf	i2memset@n,c
  6470  001F44  ECA4  F015         	call	i2_memset	;wreg free
  6471                           
  6472                           ;usb_device.c: 2139: UCONbits.PPBRST = 1;
  6473  001F48  8C65               	bsf	3941,6,c	;volatile
  6474                           
  6475                           ;usb_device.c: 2144: for(i = 0; i < (BYTE)(1+1u); i++)
  6476  001F4A  0E00               	movlw	0
  6477  001F4C  6E26               	movwf	USBStdSetCfgHandler@i,c
  6478  001F4E                     i2l3266:
  6479  001F4E  0E01               	movlw	1
  6480  001F50  6426               	cpfsgt	USBStdSetCfgHandler@i,c
  6481  001F52  D001               	goto	i2l3270
  6482  001F54  D016               	goto	i2l3276
  6483  001F56                     i2l3270:
  6484                           
  6485                           ;usb_device.c: 2145: {
  6486                           ;usb_device.c: 2146: ep_data_in[i].Val = 0u;
  6487  001F56  5026               	movf	USBStdSetCfgHandler@i,w,c
  6488  001F58  0D01               	mullw	1
  6489  001F5A  0E7A               	movlw	low _ep_data_in
  6490  001F5C  24F3               	addwf	prodl,w,c
  6491  001F5E  6ED9               	movwf	fsr2l,c
  6492  001F60  0E00               	movlw	high _ep_data_in
  6493  001F62  20F4               	addwfc	prodh,w,c
  6494  001F64  6EDA               	movwf	fsr2h,c
  6495  001F66  0E00               	movlw	0
  6496  001F68  6EDF               	movwf	indf2,c
  6497                           
  6498                           ;usb_device.c: 2147: ep_data_out[i].Val = 0u;
  6499  001F6A  5026               	movf	USBStdSetCfgHandler@i,w,c
  6500  001F6C  0D01               	mullw	1
  6501  001F6E  0E7C               	movlw	low _ep_data_out
  6502  001F70  24F3               	addwf	prodl,w,c
  6503  001F72  6ED9               	movwf	fsr2l,c
  6504  001F74  0E00               	movlw	high _ep_data_out
  6505  001F76  20F4               	addwfc	prodh,w,c
  6506  001F78  6EDA               	movwf	fsr2h,c
  6507  001F7A  0E00               	movlw	0
  6508  001F7C  6EDF               	movwf	indf2,c
  6509  001F7E  2A26               	incf	USBStdSetCfgHandler@i,f,c
  6510  001F80  D7E6               	goto	i2l3266
  6511  001F82                     i2l3276:
  6512                           
  6513                           ;usb_device.c: 2148: }
  6514                           ;usb_device.c: 2151: memset((void*)&USBAlternateInterface,0x00,1);
  6515  001F82  0E48               	movlw	low _USBAlternateInterface
  6516  001F84  6E12               	movwf	i2memset@p1,c
  6517  001F86  0E00               	movlw	high _USBAlternateInterface
  6518  001F88  6E13               	movwf	i2memset@p1+1,c
  6519  001F8A  0E00               	movlw	0
  6520  001F8C  6E15               	movwf	i2memset@c+1,c
  6521  001F8E  0E00               	movlw	0
  6522  001F90  6E14               	movwf	i2memset@c,c
  6523  001F92  0E00               	movlw	0
  6524  001F94  6E17               	movwf	i2memset@n+1,c
  6525  001F96  0E01               	movlw	1
  6526  001F98  6E16               	movwf	i2memset@n,c
  6527  001F9A  ECA4  F015         	call	i2_memset	;wreg free
  6528                           
  6529                           ;usb_device.c: 2154: UCONbits.PPBRST = 0;
  6530  001F9E  9C65               	bcf	3941,6,c	;volatile
  6531                           
  6532                           ;usb_device.c: 2156: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6533  001FA0  0E08               	movlw	8
  6534  001FA2  0100               	movlb	0	; () banked
  6535  001FA4  6F6F               	movwf	_pBDTEntryIn& (0+255),b
  6536  001FA6  0E0D               	movlw	13
  6537  001FA8  0100               	movlb	0	; () banked
  6538  001FAA  6F70               	movwf	(_pBDTEntryIn+1)& (0+255),b
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;usb_device.c: 2159: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6542  001FAC  0E00               	movlw	0
  6543  001FAE  6E34               	movwf	_pBDTEntryEP0OutCurrent,c
  6544  001FB0  0E0D               	movlw	13
  6545  001FB2  6E35               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;usb_device.c: 2160: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6549  001FB4  C034  F036         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6550  001FB8  C035  F037         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;usb_device.c: 2163: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6554  001FBC  C08E  F047         	movff	_SetupPkt+2,_USBActiveConfiguration	;volatile
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;usb_device.c: 2166: if(USBActiveConfiguration == 0)
  6558  001FC0  5047               	movf	_USBActiveConfiguration,w,c	;volatile
  6559  001FC2  A4D8               	btfss	status,2,c
  6560  001FC4  D004               	goto	i2l3292
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;usb_device.c: 2167: {
  6564                           ;usb_device.c: 2169: USBDeviceState = ADDRESS_STATE;
  6565  001FC6  0E10               	movlw	16
  6566  001FC8  0100               	movlb	0	; () banked
  6567  001FCA  6F83               	movwf	_USBDeviceState& (0+255),b	;volatile
  6568                           
  6569                           ;usb_device.c: 2170: }
  6570  001FCC  0012               	return	
  6571  001FCE                     i2l3292:
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;usb_device.c: 2171: else
  6575                           ;usb_device.c: 2172: {
  6576                           ;usb_device.c: 2174: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6577  001FCE  0E00               	movlw	0
  6578  001FD0  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6579  001FD2  0E01               	movlw	1
  6580  001FD4  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6581  001FD6  0E47               	movlw	low _USBActiveConfiguration
  6582  001FD8  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6583  001FDA  0E00               	movlw	high _USBActiveConfiguration
  6584  001FDC  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  6585  001FDE  0E00               	movlw	0
  6586  001FE0  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  6587  001FE2  0E01               	movlw	1
  6588  001FE4  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  6589  001FE6  EC65  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6590                           
  6591                           ;usb_device.c: 2179: USBDeviceState = CONFIGURED_STATE;
  6592  001FEA  0E20               	movlw	32
  6593  001FEC  0100               	movlb	0	; () banked
  6594  001FEE  6F83               	movwf	_USBDeviceState& (0+255),b	;volatile
  6595  001FF0  0012               	return	
  6596  001FF2                     __end_of_USBStdSetCfgHandler:
  6597                           	opt stack 0
  6598                           pclatu	equ	0xFFB
  6599                           pclath	equ	0xFFA
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           indf0	equ	0xFEF
  6608                           postinc0	equ	0xFEE
  6609                           fsr0h	equ	0xFEA
  6610                           fsr0l	equ	0xFE9
  6611                           wreg	equ	0xFE8
  6612                           indf1	equ	0xFE7
  6613                           fsr1h	equ	0xFE2
  6614                           fsr1l	equ	0xFE1
  6615                           bsr	equ	0xFE0
  6616                           indf2	equ	0xFDF
  6617                           postinc2	equ	0xFDE
  6618                           postdec2	equ	0xFDD
  6619                           fsr2h	equ	0xFDA
  6620                           fsr2l	equ	0xFD9
  6621                           status	equ	0xFD8
  6622                           
  6623 ;; *************** function i2_memset *****************
  6624 ;; Defined at:
  6625 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  p1              2   17[COMRAM] PTR void 
  6628 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
  6629 ;;  c               2   19[COMRAM] int 
  6630 ;;  n               2   21[COMRAM] unsigned int 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  memset          2   23[COMRAM] PTR unsigned char 
  6633 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  2   17[COMRAM] PTR void 
  6636 ;; Registers used:
  6637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6643 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6646 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6647 ;;Total ram usage:        8 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_USBStdSetCfgHandler
  6653 ;;		i2_USBDeviceInit
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text37
  6658  002B48                     __ptext37:
  6659                           	opt stack 0
  6660  002B48                     i2_memset:
  6661                           	opt stack 21
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;incstack = 0
  6665  002B48  C012  F018         	movff	i2memset@p1,i2memset@p
  6666  002B4C  C013  F019         	movff	i2memset@p1+1,i2memset@p+1
  6667  002B50  D008               	goto	i2l3204
  6668  002B52                     i2l3200:
  6669  002B52  C018  FFD9         	movff	i2memset@p,fsr2l
  6670  002B56  C019  FFDA         	movff	i2memset@p+1,fsr2h
  6671  002B5A  C014  FFDF         	movff	i2memset@c,indf2
  6672  002B5E  4A18               	infsnz	i2memset@p,f,c
  6673  002B60  2A19               	incf	i2memset@p+1,f,c
  6674  002B62                     i2l3204:
  6675  002B62  0616               	decf	i2memset@n,f,c
  6676  002B64  A0D8               	btfss	status,0,c
  6677  002B66  0617               	decf	i2memset@n+1,f,c
  6678  002B68  2816               	incf	i2memset@n,w,c
  6679  002B6A  E1F3               	bnz	i2l3200
  6680  002B6C  2817               	incf	i2memset@n+1,w,c
  6681  002B6E  B4D8               	btfsc	status,2,c
  6682  002B70  0012               	return	
  6683  002B72  D7EF               	goto	i2l3200
  6684  002B74                     __end_ofi2_memset:
  6685                           	opt stack 0
  6686                           pclatu	equ	0xFFB
  6687                           pclath	equ	0xFFA
  6688                           tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           intcon	equ	0xFF2
  6695                           indf0	equ	0xFEF
  6696                           postinc0	equ	0xFEE
  6697                           fsr0h	equ	0xFEA
  6698                           fsr0l	equ	0xFE9
  6699                           wreg	equ	0xFE8
  6700                           indf1	equ	0xFE7
  6701                           fsr1h	equ	0xFE2
  6702                           fsr1l	equ	0xFE1
  6703                           bsr	equ	0xFE0
  6704                           indf2	equ	0xFDF
  6705                           postinc2	equ	0xFDE
  6706                           postdec2	equ	0xFDD
  6707                           fsr2h	equ	0xFDA
  6708                           fsr2l	equ	0xFD9
  6709                           status	equ	0xFD8
  6710                           
  6711 ;; *************** function _USBStdGetStatusHandler *****************
  6712 ;; Defined at:
  6713 ;;		line 2276 in file "../usb_lab/usb_device.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;		None
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  p               2   18[COMRAM] PTR struct __BDT
  6718 ;;		 -> BDT(32), NULL(0), 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;		None               void
  6721 ;; Registers used:
  6722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6731 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6732 ;;Total ram usage:        3 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_USBCheckStdRequest
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text38
  6742  00231A                     __ptext38:
  6743                           	opt stack 0
  6744  00231A                     _USBStdGetStatusHandler:
  6745                           	opt stack 19
  6746                           
  6747                           ;usb_device.c: 2278: CtrlTrfData[0] = 0;
  6748                           
  6749                           ;incstack = 0
  6750  00231A  0E00               	movlw	0
  6751  00231C  0100               	movlb	0	; () banked
  6752  00231E  6F84               	movwf	_CtrlTrfData& (0+255),b	;volatile
  6753                           
  6754                           ;usb_device.c: 2279: CtrlTrfData[1] = 0;
  6755  002320  0E00               	movlw	0
  6756  002322  0100               	movlb	0	; () banked
  6757  002324  6F85               	movwf	(_CtrlTrfData+1)& (0+255),b	;volatile
  6758                           
  6759                           ;usb_device.c: 2281: switch(SetupPkt.Recipient)
  6760  002326  D03D               	goto	i2l3344
  6761  002328                     i2l703:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;usb_device.c: 2289: if(1 == 1)
  6765  002328  0100               	movlb	0	; () banked
  6766  00232A  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;usb_device.c: 2290: {
  6770                           ;usb_device.c: 2291: CtrlTrfData[0]|=0x01;
  6771  00232C  0100               	movlb	0	; () banked
  6772  00232E  8184               	bsf	_CtrlTrfData& (0+255),0,b	;volatile
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;usb_device.c: 2292: }
  6776                           ;usb_device.c: 2294: if(RemoteWakeup == TRUE)
  6777                           
  6778                           ; BSR set to: 0
  6779  002330  043B               	decf	_RemoteWakeup,w,c	;volatile
  6780  002332  A4D8               	btfss	status,2,c
  6781  002334  D042               	goto	i2l706
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;usb_device.c: 2295: {
  6785                           ;usb_device.c: 2296: CtrlTrfData[0]|=0x02;
  6786  002336  0100               	movlb	0	; () banked
  6787  002338  8384               	bsf	_CtrlTrfData& (0+255),1,b	;volatile
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;usb_device.c: 2297: }
  6791                           ;usb_device.c: 2298: break;
  6792  00233A  D03F               	goto	i2l706
  6793  00233C                     i2l707:
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;usb_device.c: 2300: inPipes[0].info.bits.busy = 1;
  6797  00233C  0100               	movlb	0	; () banked
  6798  00233E  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  6799                           
  6800                           ;usb_device.c: 2301: break;
  6801  002340  D03C               	goto	i2l706
  6802  002342                     i2l708:
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;usb_device.c: 2303: inPipes[0].info.bits.busy = 1;
  6806  002342  0100               	movlb	0	; () banked
  6807  002344  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  6808                           
  6809                           ;usb_device.c: 2307: {
  6810                           ;usb_device.c: 2308: BDT_ENTRY *p;
  6811                           ;usb_device.c: 2310: if(SetupPkt.EPDir == 0)
  6812  002346  0100               	movlb	0	; () banked
  6813  002348  BF90               	btfsc	(_SetupPkt+4)& (0+255),7,b	;volatile
  6814  00234A  D00B               	goto	i2l3334
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;usb_device.c: 2311: {
  6818                           ;usb_device.c: 2312: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6819  00234C  0100               	movlb	0	; () banked
  6820  00234E  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  6821  002350  0B0F               	andlw	15
  6822  002352  6E12               	movwf	??_USBStdGetStatusHandler& (0+255),c
  6823  002354  5012               	movf	??_USBStdGetStatusHandler,w,c
  6824  002356  0D02               	mullw	2
  6825  002358  0E73               	movlw	low _pBDTEntryOut
  6826  00235A  24F3               	addwf	prodl,w,c
  6827  00235C  6ED9               	movwf	fsr2l,c
  6828  00235E  0E00               	movlw	high _pBDTEntryOut
  6829  002360  D00A               	goto	L5
  6830  002362                     i2l3334:
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;usb_device.c: 2314: else
  6834                           ;usb_device.c: 2315: {
  6835                           ;usb_device.c: 2316: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6836  002362  0100               	movlb	0	; () banked
  6837  002364  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  6838  002366  0B0F               	andlw	15
  6839  002368  6E12               	movwf	??_USBStdGetStatusHandler& (0+255),c
  6840  00236A  5012               	movf	??_USBStdGetStatusHandler,w,c
  6841  00236C  0D02               	mullw	2
  6842  00236E  0E6F               	movlw	low _pBDTEntryIn
  6843  002370  24F3               	addwf	prodl,w,c
  6844  002372  6ED9               	movwf	fsr2l,c
  6845  002374  0E00               	movlw	high _pBDTEntryIn
  6846  002376                     L5:
  6847  002376  20F4               	addwfc	prodh,w,c
  6848  002378  6EDA               	movwf	fsr2h,c
  6849  00237A  CFDE F013          	movff	postinc2,USBStdGetStatusHandler@p
  6850  00237E  CFDD F014          	movff	postdec2,USBStdGetStatusHandler@p+1
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;usb_device.c: 2317: }
  6854                           ;usb_device.c: 2319: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6855                           
  6856                           ; BSR set to: 0
  6857  002382  C013  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6858  002386  C014  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6859  00238A  AEDF               	btfss	indf2,7,c
  6860  00238C  D016               	goto	i2l706
  6861                           
  6862                           ; BSR set to: 0
  6863  00238E  C013  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6864  002392  C014  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6865  002396  A4DF               	btfss	indf2,2,c
  6866  002398  D010               	goto	i2l706
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;usb_device.c: 2320: CtrlTrfData[0]=0x01;
  6870  00239A  0E01               	movlw	1
  6871  00239C  0100               	movlb	0	; () banked
  6872  00239E  6F84               	movwf	_CtrlTrfData& (0+255),b	;volatile
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;usb_device.c: 2322: }
  6876                           ;usb_device.c: 2323: }
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;usb_device.c: 2321: break;
  6880  0023A0  D00C               	goto	i2l706
  6881  0023A2                     i2l3344:
  6882                           
  6883                           ; BSR set to: 0
  6884  0023A2  0100               	movlb	0	; () banked
  6885  0023A4  518C               	movf	_SetupPkt& (0+255),w,b	;volatile
  6886  0023A6  0B1F               	andlw	31
  6887                           
  6888                           ; Switch size 1, requested type "space"
  6889                           ; Number of cases is 3, Range of values is 0 to 2
  6890                           ; switch strategies available:
  6891                           ; Name         Instructions Cycles
  6892                           ; simple_byte           10     6 (average)
  6893                           ;	Chosen strategy is simple_byte
  6894  0023A8  0A00               	xorlw	0	; case 0
  6895  0023AA  B4D8               	btfsc	status,2,c
  6896  0023AC  D7BD               	goto	i2l703
  6897  0023AE  0A01               	xorlw	1	; case 1
  6898  0023B0  B4D8               	btfsc	status,2,c
  6899  0023B2  D7C4               	goto	i2l707
  6900  0023B4  0A03               	xorlw	3	; case 2
  6901  0023B6  B4D8               	btfsc	status,2,c
  6902  0023B8  D7C4               	goto	i2l708
  6903  0023BA                     i2l706:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;usb_device.c: 2325: if(inPipes[0].info.bits.busy == 1)
  6907  0023BA  0100               	movlb	0	; () banked
  6908  0023BC  AF6C               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
  6909  0023BE  0012               	return	
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;usb_device.c: 2326: {
  6913                           ;usb_device.c: 2327: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
  6914  0023C0  0E84               	movlw	low _CtrlTrfData
  6915  0023C2  0100               	movlb	0	; () banked
  6916  0023C4  6F69               	movwf	_inPipes& (0+255),b	;volatile
  6917  0023C6  0E00               	movlw	high _CtrlTrfData
  6918  0023C8  0100               	movlb	0	; () banked
  6919  0023CA  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;usb_device.c: 2328: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6923  0023CC  0100               	movlb	0	; () banked
  6924  0023CE  816C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;usb_device.c: 2329: inPipes[0].wCount.v[0] = 2;
  6928  0023D0  0E02               	movlw	2
  6929  0023D2  0100               	movlb	0	; () banked
  6930  0023D4  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  6931  0023D6  0012               	return	
  6932  0023D8                     __end_of_USBStdGetStatusHandler:
  6933                           	opt stack 0
  6934                           pclatu	equ	0xFFB
  6935                           pclath	equ	0xFFA
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           prodh	equ	0xFF4
  6941                           prodl	equ	0xFF3
  6942                           intcon	equ	0xFF2
  6943                           indf0	equ	0xFEF
  6944                           postinc0	equ	0xFEE
  6945                           fsr0h	equ	0xFEA
  6946                           fsr0l	equ	0xFE9
  6947                           wreg	equ	0xFE8
  6948                           indf1	equ	0xFE7
  6949                           fsr1h	equ	0xFE2
  6950                           fsr1l	equ	0xFE1
  6951                           bsr	equ	0xFE0
  6952                           indf2	equ	0xFDF
  6953                           postinc2	equ	0xFDE
  6954                           postdec2	equ	0xFDD
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function _USBStdGetDscHandler *****************
  6960 ;; Defined at:
  6961 ;;		line 2200 in file "../usb_lab/usb_device.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;		None
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;		None
  6966 ;; Return value:  Size  Location     Type
  6967 ;;		None               void
  6968 ;; Registers used:
  6969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;Total ram usage:        2 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_USBCheckStdRequest
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           	psect	text39
  6989  0017D4                     __ptext39:
  6990                           	opt stack 0
  6991  0017D4                     _USBStdGetDscHandler:
  6992                           	opt stack 19
  6993                           
  6994                           ;usb_device.c: 2202: if(SetupPkt.bmRequestType == 0x80)
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;incstack = 0
  6998  0017D4  0E80               	movlw	128
  6999  0017D6  0100               	movlb	0	; () banked
  7000  0017D8  198C               	xorwf	_SetupPkt& (0+255),w,b	;volatile
  7001  0017DA  A4D8               	btfss	status,2,c
  7002  0017DC  0012               	return	
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;usb_device.c: 2203: {
  7006                           ;usb_device.c: 2204: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7007  0017DE  0EC0               	movlw	192
  7008  0017E0  0100               	movlb	0	; () banked
  7009  0017E2  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  7010                           
  7011                           ;usb_device.c: 2206: switch(SetupPkt.bDescriptorType)
  7012  0017E4  D08A               	goto	i2l3322
  7013  0017E6                     i2l3300:
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;usb_device.c: 2212: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
  7017  0017E6  0EAB               	movlw	low _device_dsc
  7018  0017E8  0100               	movlb	0	; () banked
  7019  0017EA  6F69               	movwf	_inPipes& (0+255),b	;volatile
  7020  0017EC  0E0F               	movlw	high _device_dsc
  7021  0017EE  0100               	movlb	0	; () banked
  7022  0017F0  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;usb_device.c: 2214: inPipes[0].wCount.Val = sizeof(device_dsc);
  7026  0017F2  0E00               	movlw	0
  7027  0017F4  0100               	movlb	0	; () banked
  7028  0017F6  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
  7029  0017F8  0E12               	movlw	18
  7030  0017FA  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  7031                           
  7032                           ;usb_device.c: 2215: break;
  7033  0017FC  0012               	return	
  7034  0017FE                     i2l3304:
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;usb_device.c: 2218: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7038  0017FE  0100               	movlb	0	; () banked
  7039  001800  518E               	movf	(_SetupPkt+2)& (0+255),w,b	;volatile
  7040  001802  0D02               	mullw	2
  7041  001804  0E07               	movlw	low _USB_CD_Ptr
  7042  001806  24F3               	addwf	prodl,w,c
  7043  001808  6EF6               	movwf	tblptrl,c
  7044  00180A  0E0F               	movlw	high _USB_CD_Ptr
  7045  00180C  20F4               	addwfc	prodh,w,c
  7046  00180E  6EF7               	movwf	tblptrh,c
  7047  001810                     	if	1	;There are 3 active tblptr bytes
  7048  001810  6AF8               	clrf	tblptru,c
  7049  001812  0E00               	movlw	low (__mediumconst shr (0+16))
  7050  001814  22F8               	addwfc	tblptru,f,c
  7051  001816                     	endif
  7052  001816  0009               	tblrd		*+
  7053  001818  CFF5 F069          	movff	tablat,_inPipes	;volatile
  7054  00181C  000A               	tblrd		*-
  7055  00181E  CFF5 F06A          	movff	tablat,_inPipes+1	;volatile
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;usb_device.c: 2226: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7059  001822  0E02               	movlw	2
  7060  001824  0100               	movlb	0	; () banked
  7061  001826  2569               	addwf	_inPipes& (0+255),w,b	;volatile
  7062  001828  6E12               	movwf	??_USBStdGetDscHandler& (0+255),c
  7063  00182A  0E00               	movlw	0
  7064  00182C  0100               	movlb	0	; () banked
  7065  00182E  216A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
  7066  001830  6E13               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  7067  001832  C012  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7068  001836  C013  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7069  00183A  0E00               	movlw	low (__smallconst shr (0+16))
  7070  00183C  6EF8               	movwf	tblptru,c
  7071  00183E  0E0E               	movlw	(high __ramtop+-1)
  7072  001840  64F7               	cpfsgt	tblptrh,c
  7073  001842  D003               	bra	i2u247_47
  7074  001844  0008               	tblrd		*
  7075  001846  50F5               	movf	tablat,w,c
  7076  001848  D005               	bra	i2u247_40
  7077  00184A                     i2u247_47:
  7078  00184A  CFF6 FFE9          	movff	tblptrl,fsr0l
  7079  00184E  CFF7 FFEA          	movff	tblptrh,fsr0h
  7080  001852  50EF               	movf	indf0,w,c
  7081  001854                     i2u247_40:
  7082  001854  0100               	movlb	0	; () banked
  7083  001856  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;usb_device.c: 2227: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7087  001858  0E03               	movlw	3
  7088  00185A  0100               	movlb	0	; () banked
  7089  00185C  2569               	addwf	_inPipes& (0+255),w,b	;volatile
  7090  00185E  6E12               	movwf	??_USBStdGetDscHandler& (0+255),c
  7091  001860  0E00               	movlw	0
  7092  001862  0100               	movlb	0	; () banked
  7093  001864  216A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
  7094  001866  6E13               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  7095  001868  C012  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7096  00186C  C013  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7097  001870  0E00               	movlw	low (__smallconst shr (0+16))
  7098  001872  6EF8               	movwf	tblptru,c
  7099  001874  0E0E               	movlw	(high __ramtop+-1)
  7100  001876  64F7               	cpfsgt	tblptrh,c
  7101  001878  D003               	bra	i2u248_47
  7102  00187A  0008               	tblrd		*
  7103  00187C  50F5               	movf	tablat,w,c
  7104  00187E  D005               	bra	i2u248_40
  7105  001880                     i2u248_47:
  7106  001880  CFF6 FFE9          	movff	tblptrl,fsr0l
  7107  001884  CFF7 FFEA          	movff	tblptrh,fsr0h
  7108  001888  50EF               	movf	indf0,w,c
  7109  00188A                     i2u248_40:
  7110  00188A  0100               	movlb	0	; () banked
  7111  00188C  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
  7112                           
  7113                           ;usb_device.c: 2228: break;
  7114  00188E  0012               	return	
  7115  001890                     i2l3310:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;usb_device.c: 2233: if(SetupPkt.bDscIndex<3)
  7119  001890  0E03               	movlw	3
  7120  001892  0100               	movlb	0	; () banked
  7121  001894  618E               	cpfslt	(_SetupPkt+2)& (0+255),b	;volatile
  7122  001896  D029               	goto	i2l3316
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;usb_device.c: 2234: {
  7126                           ;usb_device.c: 2236: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7127  001898  0100               	movlb	0	; () banked
  7128  00189A  518E               	movf	(_SetupPkt+2)& (0+255),w,b	;volatile
  7129  00189C  0D02               	mullw	2
  7130  00189E  0E01               	movlw	low _USB_SD_Ptr
  7131  0018A0  24F3               	addwf	prodl,w,c
  7132  0018A2  6EF6               	movwf	tblptrl,c
  7133  0018A4  0E0F               	movlw	high _USB_SD_Ptr
  7134  0018A6  20F4               	addwfc	prodh,w,c
  7135  0018A8  6EF7               	movwf	tblptrh,c
  7136  0018AA                     	if	1	;There are 3 active tblptr bytes
  7137  0018AA  6AF8               	clrf	tblptru,c
  7138  0018AC  0E00               	movlw	low (__mediumconst shr (0+16))
  7139  0018AE  22F8               	addwfc	tblptru,f,c
  7140  0018B0                     	endif
  7141  0018B0  0009               	tblrd		*+
  7142  0018B2  CFF5 F069          	movff	tablat,_inPipes	;volatile
  7143  0018B6  000A               	tblrd		*-
  7144  0018B8  CFF5 F06A          	movff	tablat,_inPipes+1	;volatile
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;usb_device.c: 2238: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7148  0018BC  C069  FFF6         	movff	_inPipes,tblptrl	;volatile
  7149  0018C0  C06A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  7150  0018C4  0E00               	movlw	low (__smallconst shr (0+16))
  7151  0018C6  6EF8               	movwf	tblptru,c
  7152  0018C8  0E0E               	movlw	(high __ramtop+-1)
  7153  0018CA  64F7               	cpfsgt	tblptrh,c
  7154  0018CC  D003               	bra	i2u250_47
  7155  0018CE  0008               	tblrd		*
  7156  0018D0  50F5               	movf	tablat,w,c
  7157  0018D2  D005               	bra	i2u250_40
  7158  0018D4                     i2u250_47:
  7159  0018D4  CFF6 FFE9          	movff	tblptrl,fsr0l
  7160  0018D8  CFF7 FFEA          	movff	tblptrh,fsr0h
  7161  0018DC  50EF               	movf	indf0,w,c
  7162  0018DE                     i2u250_40:
  7163  0018DE  6E12               	movwf	??_USBStdGetDscHandler& (0+255),c
  7164  0018E0  5012               	movf	??_USBStdGetDscHandler,w,c
  7165  0018E2  0100               	movlb	0	; () banked
  7166  0018E4  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  7167  0018E6  6B6E               	clrf	(_inPipes+5)& (0+255),b	;volatile
  7168                           
  7169                           ;usb_device.c: 2239: }
  7170  0018E8  0012               	return	
  7171  0018EA                     i2l3316:
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;usb_device.c: 2249: else
  7175                           ;usb_device.c: 2250: {
  7176                           ;usb_device.c: 2251: inPipes[0].info.Val = 0;
  7177  0018EA  0E00               	movlw	0
  7178  0018EC  0100               	movlb	0	; () banked
  7179  0018EE  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;usb_device.c: 2252: }
  7183                           ;usb_device.c: 2253: break;
  7184  0018F0  0012               	return	
  7185  0018F2                     i2l3318:
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;usb_device.c: 2255: inPipes[0].info.Val = 0;
  7189  0018F2  0E00               	movlw	0
  7190  0018F4  0100               	movlb	0	; () banked
  7191  0018F6  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;usb_device.c: 2257: }
  7195                           
  7196                           ;usb_device.c: 2256: break;
  7197  0018F8  0012               	return	
  7198  0018FA                     i2l3322:
  7199                           
  7200                           ; BSR set to: 0
  7201  0018FA  0100               	movlb	0	; () banked
  7202  0018FC  518F               	movf	(_SetupPkt+3)& (0+255),w,b	;volatile
  7203                           
  7204                           ; Switch size 1, requested type "space"
  7205                           ; Number of cases is 3, Range of values is 1 to 3
  7206                           ; switch strategies available:
  7207                           ; Name         Instructions Cycles
  7208                           ; simple_byte           10     6 (average)
  7209                           ;	Chosen strategy is simple_byte
  7210  0018FE  0A01               	xorlw	1	; case 1
  7211  001900  B4D8               	btfsc	status,2,c
  7212  001902  D771               	goto	i2l3300
  7213  001904  0A03               	xorlw	3	; case 2
  7214  001906  B4D8               	btfsc	status,2,c
  7215  001908  D77A               	goto	i2l3304
  7216  00190A  0A01               	xorlw	1	; case 3
  7217  00190C  B4D8               	btfsc	status,2,c
  7218  00190E  D7C0               	goto	i2l3310
  7219  001910  D7F0               	goto	i2l3318
  7220  001912                     __end_of_USBStdGetDscHandler:
  7221                           	opt stack 0
  7222                           pclatu	equ	0xFFB
  7223                           pclath	equ	0xFFA
  7224                           tblptru	equ	0xFF8
  7225                           tblptrh	equ	0xFF7
  7226                           tblptrl	equ	0xFF6
  7227                           tablat	equ	0xFF5
  7228                           prodh	equ	0xFF4
  7229                           prodl	equ	0xFF3
  7230                           intcon	equ	0xFF2
  7231                           indf0	equ	0xFEF
  7232                           postinc0	equ	0xFEE
  7233                           fsr0h	equ	0xFEA
  7234                           fsr0l	equ	0xFE9
  7235                           wreg	equ	0xFE8
  7236                           indf1	equ	0xFE7
  7237                           fsr1h	equ	0xFE2
  7238                           fsr1l	equ	0xFE1
  7239                           bsr	equ	0xFE0
  7240                           indf2	equ	0xFDF
  7241                           postinc2	equ	0xFDE
  7242                           postdec2	equ	0xFDD
  7243                           fsr2h	equ	0xFDA
  7244                           fsr2l	equ	0xFD9
  7245                           status	equ	0xFD8
  7246                           
  7247 ;; *************** function _USBStdFeatureReqHandler *****************
  7248 ;; Defined at:
  7249 ;;		line 2900 in file "../usb_lab/usb_device.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;		None
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  p               2   41[COMRAM] PTR struct __BDT
  7254 ;;		 -> BDT(32), NULL(0), 
  7255 ;;  pUEP            2   38[COMRAM] PTR unsigned char 
  7256 ;;		 -> UEP0(1), 
  7257 ;;  current_ep_d    1   40[COMRAM] struct .
  7258 ;; Return value:  Size  Location     Type
  7259 ;;		None               void
  7260 ;; Registers used:
  7261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7268 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7270 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7271 ;;Total ram usage:        6 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    4
  7274 ;; This function calls:
  7275 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7276 ;; This function is called by:
  7277 ;;		_USBCheckStdRequest
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text40
  7282  000FD2                     __ptext40:
  7283                           	opt stack 0
  7284  000FD2                     _USBStdFeatureReqHandler:
  7285                           	opt stack 15
  7286                           
  7287                           ;usb_device.c: 2902: BDT_ENTRY *p;
  7288                           ;usb_device.c: 2903: EP_STATUS current_ep_data;
  7289                           ;usb_device.c: 2907: unsigned char* pUEP;
  7290                           ;usb_device.c: 2945: if((SetupPkt.bFeature == 1)&&
  7291                           ;usb_device.c: 2946: (SetupPkt.Recipient == (0x00)))
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;incstack = 0
  7295  000FD2  0100               	movlb	0	; () banked
  7296  000FD4  058E               	decf	(_SetupPkt+2)& (0+255),w,b	;volatile
  7297  000FD6  A4D8               	btfss	status,2,c
  7298  000FD8  D011               	goto	i2l782
  7299                           
  7300                           ; BSR set to: 0
  7301  000FDA  0100               	movlb	0	; () banked
  7302  000FDC  518C               	movf	_SetupPkt& (0+255),w,b	;volatile
  7303  000FDE  0B1F               	andlw	31
  7304  000FE0  0900               	iorlw	0
  7305  000FE2  A4D8               	btfss	status,2,c
  7306  000FE4  D00B               	goto	i2l782
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;usb_device.c: 2947: {
  7310                           ;usb_device.c: 2948: inPipes[0].info.bits.busy = 1;
  7311  000FE6  0100               	movlb	0	; () banked
  7312  000FE8  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;usb_device.c: 2949: if(SetupPkt.bRequest == 3)
  7316  000FEA  0E03               	movlw	3
  7317  000FEC  0100               	movlb	0	; () banked
  7318  000FEE  198D               	xorwf	(_SetupPkt+1)& (0+255),w,b	;volatile
  7319  000FF0  A4D8               	btfss	status,2,c
  7320  000FF2  D002               	goto	i2l3362
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;usb_device.c: 2950: RemoteWakeup = TRUE;
  7324  000FF4  0E01               	movlw	1
  7325  000FF6  D001               	goto	L6
  7326  000FF8                     i2l3362:
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;usb_device.c: 2951: else
  7330                           ;usb_device.c: 2952: RemoteWakeup = FALSE;
  7331  000FF8  0E00               	movlw	0
  7332  000FFA                     L6:
  7333  000FFA  6E3B               	movwf	_RemoteWakeup,c	;volatile
  7334  000FFC                     i2l782:
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;usb_device.c: 2953: }
  7338                           ;usb_device.c: 2956: if((SetupPkt.bFeature == 0)&&
  7339                           ;usb_device.c: 2957: (SetupPkt.Recipient == (0x02))&&
  7340                           ;usb_device.c: 2958: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  7341                           ;usb_device.c: 2959: (USBDeviceState == CONFIGURED_STATE))
  7342  000FFC  0100               	movlb	0	; () banked
  7343  000FFE  518E               	movf	(_SetupPkt+2)& (0+255),w,b	;volatile
  7344  001000  A4D8               	btfss	status,2,c
  7345  001002  0012               	return	
  7346                           
  7347                           ; BSR set to: 0
  7348  001004  0100               	movlb	0	; () banked
  7349  001006  518C               	movf	_SetupPkt& (0+255),w,b	;volatile
  7350  001008  0B1F               	andlw	31
  7351  00100A  0A02               	xorlw	2
  7352  00100C  A4D8               	btfss	status,2,c
  7353  00100E  0012               	return	
  7354                           
  7355                           ; BSR set to: 0
  7356  001010  0100               	movlb	0	; () banked
  7357  001012  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7358  001014  0B0F               	andlw	15
  7359  001016  0900               	iorlw	0
  7360  001018  B4D8               	btfsc	status,2,c
  7361  00101A  0012               	return	
  7362                           
  7363                           ; BSR set to: 0
  7364  00101C  0100               	movlb	0	; () banked
  7365  00101E  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7366  001020  0B0F               	andlw	15
  7367  001022  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7368  001024  0E02               	movlw	2
  7369  001026  6026               	cpfslt	??_USBStdFeatureReqHandler,c
  7370  001028  0012               	return	
  7371                           
  7372                           ; BSR set to: 0
  7373  00102A  0E20               	movlw	32
  7374  00102C  0100               	movlb	0	; () banked
  7375  00102E  1983               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  7376  001030  A4D8               	btfss	status,2,c
  7377  001032  0012               	return	
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;usb_device.c: 2960: {
  7381                           ;usb_device.c: 2963: inPipes[0].info.bits.busy = 1;
  7382  001034  0100               	movlb	0	; () banked
  7383  001036  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  7384                           
  7385                           ;usb_device.c: 2966: if(SetupPkt.EPDir == 0)
  7386  001038  0100               	movlb	0	; () banked
  7387  00103A  BF90               	btfsc	(_SetupPkt+4)& (0+255),7,b	;volatile
  7388  00103C  D01B               	goto	i2l3376
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;usb_device.c: 2967: {
  7392                           ;usb_device.c: 2968: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7393  00103E  0100               	movlb	0	; () banked
  7394  001040  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7395  001042  0B0F               	andlw	15
  7396  001044  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7397  001046  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7398  001048  0D02               	mullw	2
  7399  00104A  0E73               	movlw	low _pBDTEntryOut
  7400  00104C  24F3               	addwf	prodl,w,c
  7401  00104E  6ED9               	movwf	fsr2l,c
  7402  001050  0E00               	movlw	high _pBDTEntryOut
  7403  001052  20F4               	addwfc	prodh,w,c
  7404  001054  6EDA               	movwf	fsr2h,c
  7405  001056  CFDE F02A          	movff	postinc2,USBStdFeatureReqHandler@p
  7406  00105A  CFDD F02B          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7407                           
  7408                           ;usb_device.c: 2969: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7409  00105E  0100               	movlb	0	; () banked
  7410  001060  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7411  001062  0B0F               	andlw	15
  7412  001064  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7413  001066  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7414  001068  0D01               	mullw	1
  7415  00106A  0E7C               	movlw	low _ep_data_out
  7416  00106C  24F3               	addwf	prodl,w,c
  7417  00106E  6ED9               	movwf	fsr2l,c
  7418  001070  0E00               	movlw	high _ep_data_out
  7419  001072  D01A               	goto	L7
  7420  001074                     i2l3376:
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;usb_device.c: 2971: else
  7424                           ;usb_device.c: 2972: {
  7425                           ;usb_device.c: 2973: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7426  001074  0100               	movlb	0	; () banked
  7427  001076  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7428  001078  0B0F               	andlw	15
  7429  00107A  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7430  00107C  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7431  00107E  0D02               	mullw	2
  7432  001080  0E6F               	movlw	low _pBDTEntryIn
  7433  001082  24F3               	addwf	prodl,w,c
  7434  001084  6ED9               	movwf	fsr2l,c
  7435  001086  0E00               	movlw	high _pBDTEntryIn
  7436  001088  20F4               	addwfc	prodh,w,c
  7437  00108A  6EDA               	movwf	fsr2h,c
  7438  00108C  CFDE F02A          	movff	postinc2,USBStdFeatureReqHandler@p
  7439  001090  CFDD F02B          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7440                           
  7441                           ;usb_device.c: 2974: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7442  001094  0100               	movlb	0	; () banked
  7443  001096  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7444  001098  0B0F               	andlw	15
  7445  00109A  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7446  00109C  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7447  00109E  0D01               	mullw	1
  7448  0010A0  0E7A               	movlw	low _ep_data_in
  7449  0010A2  24F3               	addwf	prodl,w,c
  7450  0010A4  6ED9               	movwf	fsr2l,c
  7451  0010A6  0E00               	movlw	high _ep_data_in
  7452  0010A8                     L7:
  7453  0010A8  20F4               	addwfc	prodh,w,c
  7454  0010AA  6EDA               	movwf	fsr2h,c
  7455  0010AC  50DF               	movf	indf2,w,c
  7456  0010AE  6E29               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;usb_device.c: 2975: }
  7460                           ;usb_device.c: 2981: if(current_ep_data.bits.ping_pong_state == 0)
  7461                           
  7462                           ; BSR set to: 0
  7463  0010B0  B029               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  7464  0010B2  D002               	goto	i2l3382
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;usb_device.c: 2982: {
  7468                           ;usb_device.c: 2983: {((BYTE_VAL*)&p)->Val &= ~0x0004;};
  7469  0010B4  942A               	bcf	USBStdFeatureReqHandler@p,2,c
  7470                           
  7471                           ;usb_device.c: 2984: }
  7472  0010B6  D001               	goto	i2l3384
  7473  0010B8                     i2l3382:
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;usb_device.c: 2985: else
  7477                           ;usb_device.c: 2986: {
  7478                           ;usb_device.c: 2987: {((BYTE_VAL*)&p)->Val |= 0x0004;};
  7479  0010B8  842A               	bsf	USBStdFeatureReqHandler@p,2,c
  7480  0010BA                     i2l3384:
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;usb_device.c: 2988: }
  7484                           ;usb_device.c: 2993: if(SetupPkt.EPDir == 0)
  7485  0010BA  0100               	movlb	0	; () banked
  7486  0010BC  BF90               	btfsc	(_SetupPkt+4)& (0+255),7,b	;volatile
  7487  0010BE  D00B               	goto	i2l3388
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;usb_device.c: 2994: {
  7491                           ;usb_device.c: 2995: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7492  0010C0  0100               	movlb	0	; () banked
  7493  0010C2  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7494  0010C4  0B0F               	andlw	15
  7495  0010C6  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7496  0010C8  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7497  0010CA  0D02               	mullw	2
  7498  0010CC  0E73               	movlw	low _pBDTEntryOut
  7499  0010CE  24F3               	addwf	prodl,w,c
  7500  0010D0  6ED9               	movwf	fsr2l,c
  7501  0010D2  0E00               	movlw	high _pBDTEntryOut
  7502  0010D4  D00A               	goto	L8
  7503  0010D6                     i2l3388:
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;usb_device.c: 2997: else
  7507                           ;usb_device.c: 2998: {
  7508                           ;usb_device.c: 2999: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7509  0010D6  0100               	movlb	0	; () banked
  7510  0010D8  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7511  0010DA  0B0F               	andlw	15
  7512  0010DC  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7513  0010DE  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7514  0010E0  0D02               	mullw	2
  7515  0010E2  0E6F               	movlw	low _pBDTEntryIn
  7516  0010E4  24F3               	addwf	prodl,w,c
  7517  0010E6  6ED9               	movwf	fsr2l,c
  7518  0010E8  0E00               	movlw	high _pBDTEntryIn
  7519  0010EA                     L8:
  7520  0010EA  20F4               	addwfc	prodh,w,c
  7521  0010EC  6EDA               	movwf	fsr2h,c
  7522  0010EE  C02A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7523  0010F2  C02B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;usb_device.c: 3000: }
  7527                           ;usb_device.c: 3003: if(SetupPkt.bRequest == 3)
  7528                           
  7529                           ; BSR set to: 0
  7530  0010F6  0E03               	movlw	3
  7531  0010F8  0100               	movlb	0	; () banked
  7532  0010FA  198D               	xorwf	(_SetupPkt+1)& (0+255),w,b	;volatile
  7533  0010FC  A4D8               	btfss	status,2,c
  7534  0010FE  D029               	goto	i2l3402
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;usb_device.c: 3004: {
  7538                           ;usb_device.c: 3005: if(p->STAT.UOWN == 1)
  7539  001100  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7540  001104  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7541  001108  AEDF               	btfss	indf2,7,c
  7542  00110A  D01C               	goto	i2l3400
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;usb_device.c: 3006: {
  7546                           ;usb_device.c: 3009: if(SetupPkt.EPDir == 0)
  7547  00110C  0100               	movlb	0	; () banked
  7548  00110E  BF90               	btfsc	(_SetupPkt+4)& (0+255),7,b	;volatile
  7549  001110  D00B               	goto	i2l3398
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;usb_device.c: 3010: {
  7553                           ;usb_device.c: 3011: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7554  001112  0100               	movlb	0	; () banked
  7555  001114  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7556  001116  0B0F               	andlw	15
  7557  001118  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7558  00111A  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7559  00111C  0D01               	mullw	1
  7560  00111E  0E7C               	movlw	low _ep_data_out
  7561  001120  24F3               	addwf	prodl,w,c
  7562  001122  6ED9               	movwf	fsr2l,c
  7563  001124  0E00               	movlw	high _ep_data_out
  7564  001126  D00A               	goto	L9
  7565  001128                     i2l3398:
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;usb_device.c: 3013: else
  7569                           ;usb_device.c: 3014: {
  7570                           ;usb_device.c: 3015: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7571  001128  0100               	movlb	0	; () banked
  7572  00112A  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7573  00112C  0B0F               	andlw	15
  7574  00112E  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7575  001130  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7576  001132  0D01               	mullw	1
  7577  001134  0E7A               	movlw	low _ep_data_in
  7578  001136  24F3               	addwf	prodl,w,c
  7579  001138  6ED9               	movwf	fsr2l,c
  7580  00113A  0E00               	movlw	high _ep_data_in
  7581  00113C                     L9:
  7582  00113C  20F4               	addwfc	prodh,w,c
  7583  00113E  6EDA               	movwf	fsr2h,c
  7584  001140  0100               	movlb	0	; () banked
  7585  001142  82DF               	bsf	indf2,1,c
  7586  001144                     i2l3400:
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;usb_device.c: 3016: }
  7590                           ;usb_device.c: 3017: }
  7591                           ;usb_device.c: 3020: p->STAT.Val |= 0x80|0x04;
  7592  001144  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7593  001148  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7594  00114C  0E84               	movlw	132
  7595  00114E  12DF               	iorwf	indf2,f,c
  7596                           
  7597                           ;usb_device.c: 3021: }
  7598  001150  0012               	return	
  7599  001152                     i2l3402:
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;usb_device.c: 3022: else
  7603                           ;usb_device.c: 3023: {
  7604                           ;usb_device.c: 3027: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
  7605  001152  0E04               	movlw	4
  7606  001154  1A2A               	xorwf	USBStdFeatureReqHandler@p,f,c
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;usb_device.c: 3029: if(p->STAT.UOWN == 1)
  7610  001156  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7611  00115A  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7612  00115E  AEDF               	btfss	indf2,7,c
  7613  001160  D01B               	goto	i2l3412
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;usb_device.c: 3030: {
  7617                           ;usb_device.c: 3033: p->STAT.Val &= (~0x80);
  7618  001162  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7619  001166  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7620  00116A  0E7F               	movlw	127
  7621  00116C  16DF               	andwf	indf2,f,c
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;usb_device.c: 3034: p->STAT.Val |= 0x40;
  7625  00116E  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7626  001172  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7627  001176  0E00               	movlw	0
  7628  001178  8CDB               	bsf	plusw2,6,c
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;usb_device.c: 3035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7632  00117A  0E00               	movlw	0
  7633  00117C  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7634  00117E  0E05               	movlw	5
  7635  001180  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7636  001182  C02A  F020         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7637  001186  C02B  F021         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7638  00118A  0E00               	movlw	0
  7639  00118C  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7640  00118E  0E02               	movlw	2
  7641  001190  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7642  001192  EC65  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7643                           
  7644                           ;usb_device.c: 3036: }
  7645  001196  D006               	goto	i2l3414
  7646  001198                     i2l3412:
  7647                           
  7648                           ;usb_device.c: 3037: else
  7649                           ;usb_device.c: 3038: {
  7650                           ;usb_device.c: 3040: p->STAT.Val |= 0x40;
  7651  001198  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7652  00119C  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7653  0011A0  0E00               	movlw	0
  7654  0011A2  8CDB               	bsf	plusw2,6,c
  7655  0011A4                     i2l3414:
  7656                           
  7657                           ;usb_device.c: 3041: }
  7658                           ;usb_device.c: 3045: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
  7659  0011A4  0E04               	movlw	4
  7660  0011A6  1A2A               	xorwf	USBStdFeatureReqHandler@p,f,c
  7661                           
  7662                           ;usb_device.c: 3051: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7663  0011A8  B229               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7664  0011AA  D006               	goto	i2l801
  7665  0011AC  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7666  0011B0  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7667  0011B4  AEDF               	btfss	indf2,7,c
  7668  0011B6  D031               	goto	i2l3428
  7669  0011B8                     i2l801:
  7670                           
  7671                           ;usb_device.c: 3052: {
  7672                           ;usb_device.c: 3053: if(SetupPkt.EPDir == 0)
  7673  0011B8  0100               	movlb	0	; () banked
  7674  0011BA  BF90               	btfsc	(_SetupPkt+4)& (0+255),7,b	;volatile
  7675  0011BC  D00B               	goto	i2l3422
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;usb_device.c: 3054: {
  7679                           ;usb_device.c: 3055: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7680  0011BE  0100               	movlb	0	; () banked
  7681  0011C0  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7682  0011C2  0B0F               	andlw	15
  7683  0011C4  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7684  0011C6  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7685  0011C8  0D01               	mullw	1
  7686  0011CA  0E7C               	movlw	low _ep_data_out
  7687  0011CC  24F3               	addwf	prodl,w,c
  7688  0011CE  6ED9               	movwf	fsr2l,c
  7689  0011D0  0E00               	movlw	high _ep_data_out
  7690  0011D2  D00A               	goto	L10
  7691  0011D4                     i2l3422:
  7692                           
  7693                           ; BSR set to: 0
  7694                           ;usb_device.c: 3057: else
  7695                           ;usb_device.c: 3058: {
  7696                           ;usb_device.c: 3059: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7697  0011D4  0100               	movlb	0	; () banked
  7698  0011D6  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7699  0011D8  0B0F               	andlw	15
  7700  0011DA  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7701  0011DC  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7702  0011DE  0D01               	mullw	1
  7703  0011E0  0E7A               	movlw	low _ep_data_in
  7704  0011E2  24F3               	addwf	prodl,w,c
  7705  0011E4  6ED9               	movwf	fsr2l,c
  7706  0011E6  0E00               	movlw	high _ep_data_in
  7707  0011E8                     L10:
  7708  0011E8  20F4               	addwfc	prodh,w,c
  7709  0011EA  6EDA               	movwf	fsr2h,c
  7710  0011EC  0100               	movlb	0	; () banked
  7711  0011EE  92DF               	bcf	indf2,1,c
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;usb_device.c: 3060: }
  7715                           ;usb_device.c: 3062: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7716                           
  7717                           ; BSR set to: 0
  7718  0011F0  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7719  0011F4  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7720  0011F8  0E3B               	movlw	59
  7721  0011FA  16DF               	andwf	indf2,f,c
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;usb_device.c: 3065: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7725  0011FC  0E00               	movlw	0
  7726  0011FE  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7727  001200  0E05               	movlw	5
  7728  001202  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7729  001204  C02A  F020         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7730  001208  C02B  F021         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7731  00120C  0E00               	movlw	0
  7732  00120E  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7733  001210  0E02               	movlw	2
  7734  001212  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7735  001214  EC65  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7736                           
  7737                           ;usb_device.c: 3066: }
  7738  001218  D006               	goto	i2l3430
  7739  00121A                     i2l3428:
  7740                           
  7741                           ;usb_device.c: 3067: else
  7742                           ;usb_device.c: 3068: {
  7743                           ;usb_device.c: 3070: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7744  00121A  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7745  00121E  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7746  001222  0E3B               	movlw	59
  7747  001224  16DF               	andwf	indf2,f,c
  7748  001226                     i2l3430:
  7749                           
  7750                           ;usb_device.c: 3071: }
  7751                           ;usb_device.c: 3118: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7752  001226  0100               	movlb	0	; () banked
  7753  001228  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  7754  00122A  0B0F               	andlw	15
  7755  00122C  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7756  00122E  5026               	movf	??_USBStdFeatureReqHandler,w,c
  7757  001230  0D01               	mullw	1
  7758  001232  0E26               	movlw	38
  7759  001234  24F3               	addwf	prodl,w,c
  7760  001236  6E27               	movwf	USBStdFeatureReqHandler@pUEP,c
  7761  001238  0E0F               	movlw	15
  7762  00123A  20F4               	addwfc	prodh,w,c
  7763  00123C  6E28               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;usb_device.c: 3122: *pUEP &= ~0x0001;
  7767  00123E  C027  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7768  001242  C028  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7769  001246  0EFE               	movlw	254
  7770  001248  16DF               	andwf	indf2,f,c
  7771                           
  7772                           ; BSR set to: 0
  7773  00124A  0012               	return	
  7774  00124C                     __end_of_USBStdFeatureReqHandler:
  7775                           	opt stack 0
  7776                           pclatu	equ	0xFFB
  7777                           pclath	equ	0xFFA
  7778                           tblptru	equ	0xFF8
  7779                           tblptrh	equ	0xFF7
  7780                           tblptrl	equ	0xFF6
  7781                           tablat	equ	0xFF5
  7782                           prodh	equ	0xFF4
  7783                           prodl	equ	0xFF3
  7784                           intcon	equ	0xFF2
  7785                           indf0	equ	0xFEF
  7786                           postinc0	equ	0xFEE
  7787                           fsr0h	equ	0xFEA
  7788                           fsr0l	equ	0xFE9
  7789                           wreg	equ	0xFE8
  7790                           indf1	equ	0xFE7
  7791                           fsr1h	equ	0xFE2
  7792                           fsr1l	equ	0xFE1
  7793                           bsr	equ	0xFE0
  7794                           indf2	equ	0xFDF
  7795                           postinc2	equ	0xFDE
  7796                           postdec2	equ	0xFDD
  7797                           plusw2	equ	0xFDB
  7798                           fsr2h	equ	0xFDA
  7799                           fsr2l	equ	0xFD9
  7800                           status	equ	0xFD8
  7801                           
  7802 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7803 ;; Defined at:
  7804 ;;		line 817 in file "../usb_lab/mouse.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  event           2   29[COMRAM] int 
  7807 ;;  pdata           2   31[COMRAM] PTR void 
  7808 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  7809 ;;  size            2   33[COMRAM] unsigned short 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      enum E3
  7814 ;; Registers used:
  7815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7821 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7824 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7825 ;;Total ram usage:        8 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    3
  7828 ;; This function calls:
  7829 ;;		_USBCBCheckOtherReq
  7830 ;;		_USBCBErrorHandler
  7831 ;;		_USBCBInitEP
  7832 ;;		_USBCBStdSetDscHandler
  7833 ;;		_USBCBSuspend
  7834 ;;		_USBCBWakeFromSuspend
  7835 ;;		_USBCB_SOF_Handler
  7836 ;; This function is called by:
  7837 ;;		_USBDeviceTasks
  7838 ;;		_USBStdSetCfgHandler
  7839 ;;		_USBSuspend
  7840 ;;		_USBWakeFromSuspend
  7841 ;;		_USBCtrlTrfSetupHandler
  7842 ;;		_USBCheckStdRequest
  7843 ;;		_USBStdFeatureReqHandler
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           	psect	text41
  7848  0026CA                     __ptext41:
  7849                           	opt stack 0
  7850  0026CA                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7851                           	opt stack 19
  7852                           
  7853                           ;mouse.c: 818: switch (event) {
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;incstack = 0
  7857  0026CA  D015               	goto	i2l3144
  7858  0026CC                     i2l3128:
  7859                           
  7860                           ;mouse.c: 823: USBCB_SOF_Handler();
  7861  0026CC  EC51  F016         	call	_USBCB_SOF_Handler	;wreg free
  7862                           
  7863                           ;mouse.c: 824: break;
  7864  0026D0  0012               	return	
  7865  0026D2                     i2l3130:
  7866                           
  7867                           ;mouse.c: 826: USBCBSuspend();
  7868  0026D2  EC53  F016         	call	_USBCBSuspend	;wreg free
  7869                           
  7870                           ;mouse.c: 827: break;
  7871  0026D6  0012               	return	
  7872  0026D8                     i2l3132:
  7873                           
  7874                           ;mouse.c: 829: USBCBWakeFromSuspend();
  7875  0026D8  EC52  F016         	call	_USBCBWakeFromSuspend	;wreg free
  7876                           
  7877                           ;mouse.c: 830: break;
  7878  0026DC  0012               	return	
  7879  0026DE                     i2l3134:
  7880                           
  7881                           ;mouse.c: 832: USBCBInitEP();
  7882  0026DE  EC43  F016         	call	_USBCBInitEP	;wreg free
  7883                           
  7884                           ;mouse.c: 833: break;
  7885  0026E2  0012               	return	
  7886  0026E4                     i2l3136:
  7887                           
  7888                           ;mouse.c: 835: USBCBStdSetDscHandler();
  7889  0026E4  EC54  F016         	call	_USBCBStdSetDscHandler	;wreg free
  7890                           
  7891                           ;mouse.c: 836: break;
  7892  0026E8  0012               	return	
  7893  0026EA                     i2l3138:
  7894                           
  7895                           ;mouse.c: 838: USBCBCheckOtherReq();
  7896  0026EA  EC4D  F016         	call	_USBCBCheckOtherReq	;wreg free
  7897                           
  7898                           ;mouse.c: 839: break;
  7899  0026EE  0012               	return	
  7900  0026F0                     i2l3140:
  7901                           
  7902                           ;mouse.c: 841: USBCBErrorHandler();
  7903  0026F0  EC55  F016         	call	_USBCBErrorHandler	;wreg free
  7904                           
  7905                           ;mouse.c: 855: }
  7906                           
  7907                           ;mouse.c: 854: break;
  7908                           
  7909                           ;mouse.c: 853: default:
  7910                           
  7911                           ;mouse.c: 852: break;
  7912                           
  7913                           ;mouse.c: 843: case EVENT_TRANSFER_TERMINATED:
  7914                           
  7915                           ;mouse.c: 842: break;
  7916  0026F4  0012               	return	
  7917  0026F6                     i2l3144:
  7918  0026F6  C01E  F024         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7919  0026FA  C01F  F025         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7920                           
  7921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7922                           ; Switch size 1, requested type "space"
  7923                           ; Number of cases is 2, Range of values is 0 to 127
  7924                           ; switch strategies available:
  7925                           ; Name         Instructions Cycles
  7926                           ; simple_byte            7     4 (average)
  7927                           ;	Chosen strategy is simple_byte
  7928  0026FE  5025               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  7929  002700  0A00               	xorlw	0	; case 0
  7930  002702  B4D8               	btfsc	status,2,c
  7931  002704  D004               	goto	i2l4606
  7932  002706  0A7F               	xorlw	127	; case 127
  7933  002708  A4D8               	btfss	status,2,c
  7934  00270A  0012               	return	
  7935  00270C  D01A               	goto	i2l4608
  7936  00270E                     i2l4606:
  7937                           
  7938                           ; Switch size 1, requested type "space"
  7939                           ; Number of cases is 8, Range of values is 1 to 117
  7940                           ; switch strategies available:
  7941                           ; Name         Instructions Cycles
  7942                           ; simple_byte           25    13 (average)
  7943                           ;	Chosen strategy is simple_byte
  7944  00270E  5024               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7945  002710  0A01               	xorlw	1	; case 1
  7946  002712  B4D8               	btfsc	status,2,c
  7947  002714  D7E4               	goto	i2l3134
  7948  002716  0A03               	xorlw	3	; case 2
  7949  002718  B4D8               	btfsc	status,2,c
  7950  00271A  D7E4               	goto	i2l3136
  7951  00271C  0A01               	xorlw	1	; case 3
  7952  00271E  B4D8               	btfsc	status,2,c
  7953  002720  D7E4               	goto	i2l3138
  7954  002722  0A06               	xorlw	6	; case 5
  7955  002724  B4D8               	btfsc	status,2,c
  7956  002726  0012               	return	
  7957  002728  0A77               	xorlw	119	; case 114
  7958  00272A  B4D8               	btfsc	status,2,c
  7959  00272C  0012               	return	
  7960  00272E  0A01               	xorlw	1	; case 115
  7961  002730  B4D8               	btfsc	status,2,c
  7962  002732  D7CC               	goto	i2l3128
  7963  002734  0A07               	xorlw	7	; case 116
  7964  002736  B4D8               	btfsc	status,2,c
  7965  002738  D7CF               	goto	i2l3132
  7966  00273A  0A01               	xorlw	1	; case 117
  7967  00273C  A4D8               	btfss	status,2,c
  7968  00273E  0012               	return	
  7969  002740  D7C8               	goto	i2l3130
  7970  002742                     i2l4608:
  7971                           
  7972                           ; Switch size 1, requested type "space"
  7973                           ; Number of cases is 1, Range of values is 255 to 255
  7974                           ; switch strategies available:
  7975                           ; Name         Instructions Cycles
  7976                           ; simple_byte            4     3 (average)
  7977                           ;	Chosen strategy is simple_byte
  7978  002742  5024               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7979  002744  0AFF               	xorlw	255	; case 255
  7980  002746  A4D8               	btfss	status,2,c
  7981  002748  0012               	return	
  7982  00274A  D7D2               	goto	i2l3140
  7983  00274C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7984                           	opt stack 0
  7985                           pclatu	equ	0xFFB
  7986                           pclath	equ	0xFFA
  7987                           tblptru	equ	0xFF8
  7988                           tblptrh	equ	0xFF7
  7989                           tblptrl	equ	0xFF6
  7990                           tablat	equ	0xFF5
  7991                           prodh	equ	0xFF4
  7992                           prodl	equ	0xFF3
  7993                           intcon	equ	0xFF2
  7994                           indf0	equ	0xFEF
  7995                           postinc0	equ	0xFEE
  7996                           fsr0h	equ	0xFEA
  7997                           fsr0l	equ	0xFE9
  7998                           wreg	equ	0xFE8
  7999                           indf1	equ	0xFE7
  8000                           fsr1h	equ	0xFE2
  8001                           fsr1l	equ	0xFE1
  8002                           bsr	equ	0xFE0
  8003                           indf2	equ	0xFDF
  8004                           postinc2	equ	0xFDE
  8005                           postdec2	equ	0xFDD
  8006                           plusw2	equ	0xFDB
  8007                           fsr2h	equ	0xFDA
  8008                           fsr2l	equ	0xFD9
  8009                           status	equ	0xFD8
  8010                           
  8011 ;; *************** function _USBCB_SOF_Handler *****************
  8012 ;; Defined at:
  8013 ;;		line 538 in file "../usb_lab/mouse.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;		None
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;		None
  8018 ;; Return value:  Size  Location     Type
  8019 ;;		None               void
  8020 ;; Registers used:
  8021 ;;		None
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8031 ;;Total ram usage:        0 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; This function calls:
  8034 ;;		Nothing
  8035 ;; This function is called by:
  8036 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text42
  8041  002CA2                     __ptext42:
  8042                           	opt stack 0
  8043  002CA2                     _USBCB_SOF_Handler:
  8044                           	opt stack 21
  8045                           
  8046                           ;incstack = 0
  8047  002CA2  0012               	return		;funcret
  8048  002CA4                     __end_of_USBCB_SOF_Handler:
  8049                           	opt stack 0
  8050                           pclatu	equ	0xFFB
  8051                           pclath	equ	0xFFA
  8052                           tblptru	equ	0xFF8
  8053                           tblptrh	equ	0xFF7
  8054                           tblptrl	equ	0xFF6
  8055                           tablat	equ	0xFF5
  8056                           prodh	equ	0xFF4
  8057                           prodl	equ	0xFF3
  8058                           intcon	equ	0xFF2
  8059                           indf0	equ	0xFEF
  8060                           postinc0	equ	0xFEE
  8061                           fsr0h	equ	0xFEA
  8062                           fsr0l	equ	0xFE9
  8063                           wreg	equ	0xFE8
  8064                           indf1	equ	0xFE7
  8065                           fsr1h	equ	0xFE2
  8066                           fsr1l	equ	0xFE1
  8067                           bsr	equ	0xFE0
  8068                           indf2	equ	0xFDF
  8069                           postinc2	equ	0xFDE
  8070                           postdec2	equ	0xFDD
  8071                           plusw2	equ	0xFDB
  8072                           fsr2h	equ	0xFDA
  8073                           fsr2l	equ	0xFD9
  8074                           status	equ	0xFD8
  8075                           
  8076 ;; *************** function _USBCBWakeFromSuspend *****************
  8077 ;; Defined at:
  8078 ;;		line 509 in file "../usb_lab/mouse.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;		None
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;		None
  8083 ;; Return value:  Size  Location     Type
  8084 ;;		None               void
  8085 ;; Registers used:
  8086 ;;		None
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8096 ;;Total ram usage:        0 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; This function calls:
  8099 ;;		Nothing
  8100 ;; This function is called by:
  8101 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8102 ;;		_USBCBSendResume
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text43
  8107  002CA4                     __ptext43:
  8108                           	opt stack 0
  8109  002CA4                     _USBCBWakeFromSuspend:
  8110                           	opt stack 21
  8111                           
  8112                           ;incstack = 0
  8113  002CA4  0012               	return		;funcret
  8114  002CA6                     __end_of_USBCBWakeFromSuspend:
  8115                           	opt stack 0
  8116                           pclatu	equ	0xFFB
  8117                           pclath	equ	0xFFA
  8118                           tblptru	equ	0xFF8
  8119                           tblptrh	equ	0xFF7
  8120                           tblptrl	equ	0xFF6
  8121                           tablat	equ	0xFF5
  8122                           prodh	equ	0xFF4
  8123                           prodl	equ	0xFF3
  8124                           intcon	equ	0xFF2
  8125                           indf0	equ	0xFEF
  8126                           postinc0	equ	0xFEE
  8127                           fsr0h	equ	0xFEA
  8128                           fsr0l	equ	0xFE9
  8129                           wreg	equ	0xFE8
  8130                           indf1	equ	0xFE7
  8131                           fsr1h	equ	0xFE2
  8132                           fsr1l	equ	0xFE1
  8133                           bsr	equ	0xFE0
  8134                           indf2	equ	0xFDF
  8135                           postinc2	equ	0xFDE
  8136                           postdec2	equ	0xFDD
  8137                           plusw2	equ	0xFDB
  8138                           fsr2h	equ	0xFDA
  8139                           fsr2l	equ	0xFD9
  8140                           status	equ	0xFD8
  8141                           
  8142 ;; *************** function _USBCBSuspend *****************
  8143 ;; Defined at:
  8144 ;;		line 460 in file "../usb_lab/mouse.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;		None               void
  8151 ;; Registers used:
  8152 ;;		None
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8162 ;;Total ram usage:        0 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; This function calls:
  8165 ;;		Nothing
  8166 ;; This function is called by:
  8167 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           	psect	text44
  8172  002CA6                     __ptext44:
  8173                           	opt stack 0
  8174  002CA6                     _USBCBSuspend:
  8175                           	opt stack 21
  8176                           
  8177                           ;incstack = 0
  8178  002CA6  0012               	return		;funcret
  8179  002CA8                     __end_of_USBCBSuspend:
  8180                           	opt stack 0
  8181                           pclatu	equ	0xFFB
  8182                           pclath	equ	0xFFA
  8183                           tblptru	equ	0xFF8
  8184                           tblptrh	equ	0xFF7
  8185                           tblptrl	equ	0xFF6
  8186                           tablat	equ	0xFF5
  8187                           prodh	equ	0xFF4
  8188                           prodl	equ	0xFF3
  8189                           intcon	equ	0xFF2
  8190                           indf0	equ	0xFEF
  8191                           postinc0	equ	0xFEE
  8192                           fsr0h	equ	0xFEA
  8193                           fsr0l	equ	0xFE9
  8194                           wreg	equ	0xFE8
  8195                           indf1	equ	0xFE7
  8196                           fsr1h	equ	0xFE2
  8197                           fsr1l	equ	0xFE1
  8198                           bsr	equ	0xFE0
  8199                           indf2	equ	0xFDF
  8200                           postinc2	equ	0xFDE
  8201                           postdec2	equ	0xFDD
  8202                           plusw2	equ	0xFDB
  8203                           fsr2h	equ	0xFDA
  8204                           fsr2l	equ	0xFD9
  8205                           status	equ	0xFD8
  8206                           
  8207 ;; *************** function _USBCBStdSetDscHandler *****************
  8208 ;; Defined at:
  8209 ;;		line 632 in file "../usb_lab/mouse.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;		None               void
  8216 ;; Registers used:
  8217 ;;		None
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;Total ram usage:        0 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           	psect	text45
  8237  002CA8                     __ptext45:
  8238                           	opt stack 0
  8239  002CA8                     _USBCBStdSetDscHandler:
  8240                           	opt stack 21
  8241                           
  8242                           ;incstack = 0
  8243  002CA8  0012               	return		;funcret
  8244  002CAA                     __end_of_USBCBStdSetDscHandler:
  8245                           	opt stack 0
  8246                           pclatu	equ	0xFFB
  8247                           pclath	equ	0xFFA
  8248                           tblptru	equ	0xFF8
  8249                           tblptrh	equ	0xFF7
  8250                           tblptrl	equ	0xFF6
  8251                           tablat	equ	0xFF5
  8252                           prodh	equ	0xFF4
  8253                           prodl	equ	0xFF3
  8254                           intcon	equ	0xFF2
  8255                           indf0	equ	0xFEF
  8256                           postinc0	equ	0xFEE
  8257                           fsr0h	equ	0xFEA
  8258                           fsr0l	equ	0xFE9
  8259                           wreg	equ	0xFE8
  8260                           indf1	equ	0xFE7
  8261                           fsr1h	equ	0xFE2
  8262                           fsr1l	equ	0xFE1
  8263                           bsr	equ	0xFE0
  8264                           indf2	equ	0xFDF
  8265                           postinc2	equ	0xFDE
  8266                           postdec2	equ	0xFDD
  8267                           plusw2	equ	0xFDB
  8268                           fsr2h	equ	0xFDA
  8269                           fsr2l	equ	0xFD9
  8270                           status	equ	0xFD8
  8271                           
  8272 ;; *************** function _USBCBInitEP *****************
  8273 ;; Defined at:
  8274 ;;		line 656 in file "../usb_lab/mouse.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;		None               void
  8281 ;; Registers used:
  8282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:    2
  8295 ;; This function calls:
  8296 ;;		_USBEnableEndpoint
  8297 ;; This function is called by:
  8298 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text46
  8303  002C86                     __ptext46:
  8304                           	opt stack 0
  8305  002C86                     _USBCBInitEP:
  8306                           	opt stack 19
  8307                           
  8308                           ;mouse.c: 658: USBEnableEndpoint(1, 0x02 | 0x10 | 0x08);
  8309                           
  8310                           ;incstack = 0
  8311  002C86  0E1A               	movlw	26
  8312  002C88  6E1A               	movwf	USBEnableEndpoint@options,c
  8313  002C8A  0E01               	movlw	1
  8314  002C8C  EC20  F015         	call	_USBEnableEndpoint
  8315  002C90  0012               	return		;funcret
  8316  002C92                     __end_of_USBCBInitEP:
  8317                           	opt stack 0
  8318                           pclatu	equ	0xFFB
  8319                           pclath	equ	0xFFA
  8320                           tblptru	equ	0xFF8
  8321                           tblptrh	equ	0xFF7
  8322                           tblptrl	equ	0xFF6
  8323                           tablat	equ	0xFF5
  8324                           prodh	equ	0xFF4
  8325                           prodl	equ	0xFF3
  8326                           intcon	equ	0xFF2
  8327                           indf0	equ	0xFEF
  8328                           postinc0	equ	0xFEE
  8329                           fsr0h	equ	0xFEA
  8330                           fsr0l	equ	0xFE9
  8331                           wreg	equ	0xFE8
  8332                           indf1	equ	0xFE7
  8333                           fsr1h	equ	0xFE2
  8334                           fsr1l	equ	0xFE1
  8335                           bsr	equ	0xFE0
  8336                           indf2	equ	0xFDF
  8337                           postinc2	equ	0xFDE
  8338                           postdec2	equ	0xFDD
  8339                           plusw2	equ	0xFDB
  8340                           fsr2h	equ	0xFDA
  8341                           fsr2l	equ	0xFD9
  8342                           status	equ	0xFD8
  8343                           
  8344 ;; *************** function _USBEnableEndpoint *****************
  8345 ;; Defined at:
  8346 ;;		line 1049 in file "../usb_lab/usb_device.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  ep              1    wreg     unsigned char 
  8349 ;;  options         1   25[COMRAM] unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  ep              1   28[COMRAM] unsigned char 
  8352 ;;  p               2   26[COMRAM] PTR unsigned char 
  8353 ;;		 -> UEP0(1), 
  8354 ;; Return value:  Size  Location     Type
  8355 ;;		None               void
  8356 ;; Registers used:
  8357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8363 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8367 ;;Total ram usage:        4 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; Hardware stack levels required when called:    1
  8370 ;; This function calls:
  8371 ;;		_USBConfigureEndpoint
  8372 ;; This function is called by:
  8373 ;;		_USBCBInitEP
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text47
  8378  002A40                     __ptext47:
  8379                           	opt stack 0
  8380  002A40                     _USBEnableEndpoint:
  8381                           	opt stack 19
  8382                           
  8383                           ;incstack = 0
  8384                           ;USBEnableEndpoint@ep stored from wreg
  8385  002A40  6E1D               	movwf	USBEnableEndpoint@ep,c
  8386                           
  8387                           ;usb_device.c: 1051: unsigned char* p;
  8388                           ;usb_device.c: 1055: if(options & 0x04)
  8389  002A42  A41A               	btfss	USBEnableEndpoint@options,2,c
  8390  002A44  D005               	goto	i2l3114
  8391                           
  8392                           ;usb_device.c: 1056: {
  8393                           ;usb_device.c: 1057: USBConfigureEndpoint(ep, 0);
  8394  002A46  0E00               	movlw	0
  8395  002A48  6E12               	movwf	USBConfigureEndpoint@direction,c
  8396  002A4A  501D               	movf	USBEnableEndpoint@ep,w,c
  8397  002A4C  EC91  F012         	call	_USBConfigureEndpoint
  8398  002A50                     i2l3114:
  8399                           
  8400                           ;usb_device.c: 1058: }
  8401                           ;usb_device.c: 1059: if(options & 0x02)
  8402  002A50  A21A               	btfss	USBEnableEndpoint@options,1,c
  8403  002A52  D005               	goto	i2l3118
  8404                           
  8405                           ;usb_device.c: 1060: {
  8406                           ;usb_device.c: 1061: USBConfigureEndpoint(ep, 1);
  8407  002A54  0E01               	movlw	1
  8408  002A56  6E12               	movwf	USBConfigureEndpoint@direction,c
  8409  002A58  501D               	movf	USBEnableEndpoint@ep,w,c
  8410  002A5A  EC91  F012         	call	_USBConfigureEndpoint
  8411  002A5E                     i2l3118:
  8412                           
  8413                           ;usb_device.c: 1062: }
  8414                           ;usb_device.c: 1070: p = (unsigned char*)(&UEP0+ep);
  8415  002A5E  501D               	movf	USBEnableEndpoint@ep,w,c
  8416  002A60  0D01               	mullw	1
  8417  002A62  0E26               	movlw	38
  8418  002A64  24F3               	addwf	prodl,w,c
  8419  002A66  6E1B               	movwf	USBEnableEndpoint@p,c
  8420  002A68  0E0F               	movlw	15
  8421  002A6A  20F4               	addwfc	prodh,w,c
  8422  002A6C  6E1C               	movwf	USBEnableEndpoint@p+1,c
  8423                           
  8424                           ;usb_device.c: 1072: *p = options;
  8425  002A6E  C01B  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8426  002A72  C01C  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8427  002A76  C01A  FFDF         	movff	USBEnableEndpoint@options,indf2
  8428  002A7A  0012               	return		;funcret
  8429  002A7C                     __end_of_USBEnableEndpoint:
  8430                           	opt stack 0
  8431                           pclatu	equ	0xFFB
  8432                           pclath	equ	0xFFA
  8433                           tblptru	equ	0xFF8
  8434                           tblptrh	equ	0xFF7
  8435                           tblptrl	equ	0xFF6
  8436                           tablat	equ	0xFF5
  8437                           prodh	equ	0xFF4
  8438                           prodl	equ	0xFF3
  8439                           intcon	equ	0xFF2
  8440                           indf0	equ	0xFEF
  8441                           postinc0	equ	0xFEE
  8442                           fsr0h	equ	0xFEA
  8443                           fsr0l	equ	0xFE9
  8444                           wreg	equ	0xFE8
  8445                           indf1	equ	0xFE7
  8446                           fsr1h	equ	0xFE2
  8447                           fsr1l	equ	0xFE1
  8448                           bsr	equ	0xFE0
  8449                           indf2	equ	0xFDF
  8450                           postinc2	equ	0xFDE
  8451                           postdec2	equ	0xFDD
  8452                           plusw2	equ	0xFDB
  8453                           fsr2h	equ	0xFDA
  8454                           fsr2l	equ	0xFD9
  8455                           status	equ	0xFD8
  8456                           
  8457 ;; *************** function _USBConfigureEndpoint *****************
  8458 ;; Defined at:
  8459 ;;		line 1706 in file "../usb_lab/usb_device.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  EPNum           1    wreg     unsigned char 
  8462 ;;  direction       1   17[COMRAM] unsigned char 
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;  EPNum           1   22[COMRAM] unsigned char 
  8465 ;;  handle          2   23[COMRAM] PTR volatile struct __BD
  8466 ;;		 -> BDT(32), 
  8467 ;; Return value:  Size  Location     Type
  8468 ;;		None               void
  8469 ;; Registers used:
  8470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8476 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8477 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8478 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8479 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8480 ;;Total ram usage:        8 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; This function calls:
  8483 ;;		Nothing
  8484 ;; This function is called by:
  8485 ;;		_USBEnableEndpoint
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           	psect	text48
  8490  002522                     __ptext48:
  8491                           	opt stack 0
  8492  002522                     _USBConfigureEndpoint:
  8493                           	opt stack 19
  8494                           
  8495                           ;incstack = 0
  8496                           ;USBConfigureEndpoint@EPNum stored from wreg
  8497  002522  6E17               	movwf	USBConfigureEndpoint@EPNum,c
  8498                           
  8499                           ;usb_device.c: 1708: volatile BDT_ENTRY* handle;
  8500                           ;usb_device.c: 1712: handle = (volatile BDT_ENTRY*)&BDT[0];
  8501  002524  0E00               	movlw	0
  8502  002526  6E18               	movwf	USBConfigureEndpoint@handle,c
  8503  002528  0E0D               	movlw	13
  8504  00252A  6E19               	movwf	USBConfigureEndpoint@handle+1,c
  8505                           
  8506                           ;usb_device.c: 1713: handle += (4*EPNum+2*direction+0u);
  8507  00252C  5012               	movf	USBConfigureEndpoint@direction,w,c
  8508  00252E  6E13               	movwf	??_USBConfigureEndpoint& (0+255),c
  8509  002530  6A14               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  8510  002532  90D8               	bcf	status,0,c
  8511  002534  3613               	rlcf	??_USBConfigureEndpoint,f,c
  8512  002536  3614               	rlcf	??_USBConfigureEndpoint+1,f,c
  8513  002538  5017               	movf	USBConfigureEndpoint@EPNum,w,c
  8514  00253A  6E15               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  8515  00253C  6A16               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  8516  00253E  90D8               	bcf	status,0,c
  8517  002540  3615               	rlcf	??_USBConfigureEndpoint+2,f,c
  8518  002542  3616               	rlcf	??_USBConfigureEndpoint+3,f,c
  8519  002544  90D8               	bcf	status,0,c
  8520  002546  3615               	rlcf	??_USBConfigureEndpoint+2,f,c
  8521  002548  3616               	rlcf	??_USBConfigureEndpoint+3,f,c
  8522  00254A  5013               	movf	??_USBConfigureEndpoint,w,c
  8523  00254C  2615               	addwf	??_USBConfigureEndpoint+2,f,c
  8524  00254E  5014               	movf	??_USBConfigureEndpoint+1,w,c
  8525  002550  2216               	addwfc	??_USBConfigureEndpoint+3,f,c
  8526  002552  90D8               	bcf	status,0,c
  8527  002554  3615               	rlcf	??_USBConfigureEndpoint+2,f,c
  8528  002556  3616               	rlcf	??_USBConfigureEndpoint+3,f,c
  8529  002558  90D8               	bcf	status,0,c
  8530  00255A  3615               	rlcf	??_USBConfigureEndpoint+2,f,c
  8531  00255C  3616               	rlcf	??_USBConfigureEndpoint+3,f,c
  8532  00255E  5015               	movf	??_USBConfigureEndpoint+2,w,c
  8533  002560  2618               	addwf	USBConfigureEndpoint@handle,f,c
  8534  002562  5016               	movf	??_USBConfigureEndpoint+3,w,c
  8535  002564  2219               	addwfc	USBConfigureEndpoint@handle+1,f,c
  8536                           
  8537                           ;usb_device.c: 1715: handle->STAT.UOWN = 0;
  8538  002566  C018  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8539  00256A  C019  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8540  00256E  9EDF               	bcf	indf2,7,c
  8541                           
  8542                           ;usb_device.c: 1720: if(direction == 0)
  8543  002570  5012               	movf	USBConfigureEndpoint@direction,w,c
  8544  002572  A4D8               	btfss	status,2,c
  8545  002574  D007               	goto	i2l3046
  8546                           
  8547                           ;usb_device.c: 1721: {
  8548                           ;usb_device.c: 1722: pBDTEntryOut[EPNum] = handle;
  8549  002576  5017               	movf	USBConfigureEndpoint@EPNum,w,c
  8550  002578  0D02               	mullw	2
  8551  00257A  0E73               	movlw	low _pBDTEntryOut
  8552  00257C  24F3               	addwf	prodl,w,c
  8553  00257E  6ED9               	movwf	fsr2l,c
  8554  002580  0E00               	movlw	high _pBDTEntryOut
  8555  002582  D006               	goto	L11
  8556  002584                     i2l3046:
  8557                           
  8558                           ;usb_device.c: 1724: else
  8559                           ;usb_device.c: 1725: {
  8560                           ;usb_device.c: 1726: pBDTEntryIn[EPNum] = handle;
  8561  002584  5017               	movf	USBConfigureEndpoint@EPNum,w,c
  8562  002586  0D02               	mullw	2
  8563  002588  0E6F               	movlw	low _pBDTEntryIn
  8564  00258A  24F3               	addwf	prodl,w,c
  8565  00258C  6ED9               	movwf	fsr2l,c
  8566  00258E  0E00               	movlw	high _pBDTEntryIn
  8567  002590                     L11:
  8568  002590  20F4               	addwfc	prodh,w,c
  8569  002592  6EDA               	movwf	fsr2h,c
  8570  002594  C018  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8571  002598  C019  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8572                           
  8573                           ;usb_device.c: 1727: }
  8574                           ;usb_device.c: 1730: handle->STAT.DTS = 0;
  8575  00259C  C018  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8576  0025A0  C019  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8577  0025A4  9CDF               	bcf	indf2,6,c
  8578                           
  8579                           ;usb_device.c: 1731: (handle+1)->STAT.DTS = 1;
  8580  0025A6  EE20 F004          	lfsr	2,4
  8581  0025AA  5018               	movf	USBConfigureEndpoint@handle,w,c
  8582  0025AC  26D9               	addwf	fsr2l,f,c
  8583  0025AE  5019               	movf	USBConfigureEndpoint@handle+1,w,c
  8584  0025B0  22DA               	addwfc	fsr2h,f,c
  8585  0025B2  8CDF               	bsf	indf2,6,c
  8586  0025B4  0012               	return		;funcret
  8587  0025B6                     __end_of_USBConfigureEndpoint:
  8588                           	opt stack 0
  8589                           pclatu	equ	0xFFB
  8590                           pclath	equ	0xFFA
  8591                           tblptru	equ	0xFF8
  8592                           tblptrh	equ	0xFF7
  8593                           tblptrl	equ	0xFF6
  8594                           tablat	equ	0xFF5
  8595                           prodh	equ	0xFF4
  8596                           prodl	equ	0xFF3
  8597                           intcon	equ	0xFF2
  8598                           indf0	equ	0xFEF
  8599                           postinc0	equ	0xFEE
  8600                           fsr0h	equ	0xFEA
  8601                           fsr0l	equ	0xFE9
  8602                           wreg	equ	0xFE8
  8603                           indf1	equ	0xFE7
  8604                           fsr1h	equ	0xFE2
  8605                           fsr1l	equ	0xFE1
  8606                           bsr	equ	0xFE0
  8607                           indf2	equ	0xFDF
  8608                           postinc2	equ	0xFDE
  8609                           postdec2	equ	0xFDD
  8610                           plusw2	equ	0xFDB
  8611                           fsr2h	equ	0xFDA
  8612                           fsr2l	equ	0xFD9
  8613                           status	equ	0xFD8
  8614                           
  8615 ;; *************** function _USBCBErrorHandler *****************
  8616 ;; Defined at:
  8617 ;;		line 560 in file "../usb_lab/mouse.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;		None
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;		None               void
  8624 ;; Registers used:
  8625 ;;		None
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8635 ;;Total ram usage:        0 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text49
  8645  002CAA                     __ptext49:
  8646                           	opt stack 0
  8647  002CAA                     _USBCBErrorHandler:
  8648                           	opt stack 21
  8649                           
  8650                           ;incstack = 0
  8651  002CAA  0012               	return		;funcret
  8652  002CAC                     __end_of_USBCBErrorHandler:
  8653                           	opt stack 0
  8654                           pclatu	equ	0xFFB
  8655                           pclath	equ	0xFFA
  8656                           tblptru	equ	0xFF8
  8657                           tblptrh	equ	0xFF7
  8658                           tblptrl	equ	0xFF6
  8659                           tablat	equ	0xFF5
  8660                           prodh	equ	0xFF4
  8661                           prodl	equ	0xFF3
  8662                           intcon	equ	0xFF2
  8663                           indf0	equ	0xFEF
  8664                           postinc0	equ	0xFEE
  8665                           fsr0h	equ	0xFEA
  8666                           fsr0l	equ	0xFE9
  8667                           wreg	equ	0xFE8
  8668                           indf1	equ	0xFE7
  8669                           fsr1h	equ	0xFE2
  8670                           fsr1l	equ	0xFE1
  8671                           bsr	equ	0xFE0
  8672                           indf2	equ	0xFDF
  8673                           postinc2	equ	0xFDE
  8674                           postdec2	equ	0xFDD
  8675                           plusw2	equ	0xFDB
  8676                           fsr2h	equ	0xFDA
  8677                           fsr2l	equ	0xFD9
  8678                           status	equ	0xFD8
  8679                           
  8680 ;; *************** function _USBCBCheckOtherReq *****************
  8681 ;; Defined at:
  8682 ;;		line 609 in file "../usb_lab/mouse.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;		None
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;		None
  8687 ;; Return value:  Size  Location     Type
  8688 ;;		None               void
  8689 ;; Registers used:
  8690 ;;		wreg, status,2, status,0, cstack
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8700 ;;Total ram usage:        0 bytes
  8701 ;; Hardware stack levels used:    1
  8702 ;; Hardware stack levels required when called:    1
  8703 ;; This function calls:
  8704 ;;		_USBCheckHIDRequest
  8705 ;; This function is called by:
  8706 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text50
  8711  002C9A                     __ptext50:
  8712                           	opt stack 0
  8713  002C9A                     _USBCBCheckOtherReq:
  8714                           	opt stack 20
  8715                           
  8716                           ;mouse.c: 610: USBCheckHIDRequest();
  8717                           
  8718                           ;incstack = 0
  8719  002C9A  EC9D  F00D         	call	_USBCheckHIDRequest	;wreg free
  8720  002C9E  0012               	return		;funcret
  8721  002CA0                     __end_of_USBCBCheckOtherReq:
  8722                           	opt stack 0
  8723                           pclatu	equ	0xFFB
  8724                           pclath	equ	0xFFA
  8725                           tblptru	equ	0xFF8
  8726                           tblptrh	equ	0xFF7
  8727                           tblptrl	equ	0xFF6
  8728                           tablat	equ	0xFF5
  8729                           prodh	equ	0xFF4
  8730                           prodl	equ	0xFF3
  8731                           intcon	equ	0xFF2
  8732                           indf0	equ	0xFEF
  8733                           postinc0	equ	0xFEE
  8734                           fsr0h	equ	0xFEA
  8735                           fsr0l	equ	0xFE9
  8736                           wreg	equ	0xFE8
  8737                           indf1	equ	0xFE7
  8738                           fsr1h	equ	0xFE2
  8739                           fsr1l	equ	0xFE1
  8740                           bsr	equ	0xFE0
  8741                           indf2	equ	0xFDF
  8742                           postinc2	equ	0xFDE
  8743                           postdec2	equ	0xFDD
  8744                           plusw2	equ	0xFDB
  8745                           fsr2h	equ	0xFDA
  8746                           fsr2l	equ	0xFD9
  8747                           status	equ	0xFD8
  8748                           
  8749 ;; *************** function _USBCheckHIDRequest *****************
  8750 ;; Defined at:
  8751 ;;		line 169 in file "../usb_lab/usb_function_hid.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;		None
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;		None
  8756 ;; Return value:  Size  Location     Type
  8757 ;;		None               void
  8758 ;; Registers used:
  8759 ;;		wreg, status,2, status,0
  8760 ;; Tracked objects:
  8761 ;;		On entry : 0/0
  8762 ;;		On exit  : 0/0
  8763 ;;		Unchanged: 0/0
  8764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8769 ;;Total ram usage:        0 bytes
  8770 ;; Hardware stack levels used:    1
  8771 ;; This function calls:
  8772 ;;		Nothing
  8773 ;; This function is called by:
  8774 ;;		_USBCBCheckOtherReq
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778                           	psect	text51
  8779  001B3A                     __ptext51:
  8780                           	opt stack 0
  8781  001B3A                     _USBCheckHIDRequest:
  8782                           	opt stack 20
  8783                           
  8784                           ;usb_function_hid.c: 171: if(SetupPkt.Recipient != (0x01)) return;
  8785                           
  8786                           ;incstack = 0
  8787  001B3A  0100               	movlb	0	; () banked
  8788  001B3C  518C               	movf	_SetupPkt& (0+255),w,b	;volatile
  8789  001B3E  0B1F               	andlw	31
  8790  001B40  06E8               	decf	wreg,f,c
  8791  001B42  A4D8               	btfss	status,2,c
  8792  001B44  0012               	return	
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;usb_function_hid.c: 172: if(SetupPkt.bIntfID != 0x00) return;
  8796                           
  8797                           ; BSR set to: 0
  8798                           
  8799                           ; BSR set to: 0
  8800  001B46  0100               	movlb	0	; () banked
  8801  001B48  5190               	movf	(_SetupPkt+4)& (0+255),w,b	;volatile
  8802  001B4A  A4D8               	btfss	status,2,c
  8803  001B4C  0012               	return	
  8804                           
  8805                           ; BSR set to: 0
  8806                           ;usb_function_hid.c: 179: if(SetupPkt.bRequest == 6)
  8807                           
  8808                           ; BSR set to: 0
  8809                           
  8810                           ; BSR set to: 0
  8811  001B4E  0E06               	movlw	6
  8812  001B50  0100               	movlb	0	; () banked
  8813  001B52  198D               	xorwf	(_SetupPkt+1)& (0+255),w,b	;volatile
  8814  001B54  B4D8               	btfsc	status,2,c
  8815  001B56  D01F               	goto	i2l3080
  8816  001B58  D027               	goto	i2l3082
  8817  001B5A                     i2l3064:
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;usb_function_hid.c: 184: if(USBActiveConfiguration == 1)
  8821  001B5A  0447               	decf	_USBActiveConfiguration,w,c	;volatile
  8822  001B5C  A4D8               	btfss	status,2,c
  8823  001B5E  D024               	goto	i2l3082
  8824                           
  8825                           ; BSR set to: 0
  8826                           ;usb_function_hid.c: 185: {
  8827                           ;usb_function_hid.c: 186: { inPipes[0].pSrc.bRom = (const BYTE*)&configDescriptor1 + 18;
      +                           inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x00
      +                          ; };
  8828  001B60  0E81               	movlw	low (_configDescriptor1+18)
  8829  001B62  0100               	movlb	0	; () banked
  8830  001B64  6F69               	movwf	_inPipes& (0+255),b	;volatile
  8831  001B66  0E0F               	movlw	high (_configDescriptor1+18)
  8832  001B68  0100               	movlb	0	; () banked
  8833  001B6A  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
  8834                           
  8835                           ; BSR set to: 0
  8836  001B6C  0E00               	movlw	0
  8837  001B6E  0100               	movlb	0	; () banked
  8838  001B70  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
  8839  001B72  0E09               	movlw	9
  8840  001B74  D00E               	goto	L12
  8841  001B76                     i2l3070:
  8842                           
  8843                           ; BSR set to: 0
  8844  001B76  0EC0               	movlw	192
  8845  001B78  0100               	movlb	0	; () banked
  8846  001B7A  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;usb_function_hid.c: 190: }
  8850                           ;usb_function_hid.c: 191: break;
  8851  001B7C  D015               	goto	i2l3082
  8852  001B7E                     i2l3072:
  8853                           
  8854                           ; BSR set to: 0
  8855                           ;usb_function_hid.c: 194: {
  8856                           ;usb_function_hid.c: 195: { inPipes[0].pSrc.bRom = (const BYTE*)&hid_rpt01; inPipes[0].w
      +                          Count.Val = 50; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
  8857  001B7E  0E3D               	movlw	low _hid_rpt01
  8858  001B80  0100               	movlb	0	; () banked
  8859  001B82  6F69               	movwf	_inPipes& (0+255),b	;volatile
  8860  001B84  0E0F               	movlw	high _hid_rpt01
  8861  001B86  0100               	movlb	0	; () banked
  8862  001B88  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
  8863                           
  8864                           ; BSR set to: 0
  8865  001B8A  0E00               	movlw	0
  8866  001B8C  0100               	movlb	0	; () banked
  8867  001B8E  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
  8868  001B90  0E32               	movlw	50
  8869  001B92                     L12:
  8870  001B92  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  8871  001B94  D7F0               	goto	i2l3070
  8872  001B96                     i2l3080:
  8873                           
  8874                           ; BSR set to: 0
  8875  001B96  0100               	movlb	0	; () banked
  8876  001B98  518F               	movf	(_SetupPkt+3)& (0+255),w,b	;volatile
  8877                           
  8878                           ; Switch size 1, requested type "space"
  8879                           ; Number of cases is 3, Range of values is 33 to 35
  8880                           ; switch strategies available:
  8881                           ; Name         Instructions Cycles
  8882                           ; simple_byte           10     6 (average)
  8883                           ;	Chosen strategy is simple_byte
  8884  001B9A  0A21               	xorlw	33	; case 33
  8885  001B9C  B4D8               	btfsc	status,2,c
  8886  001B9E  D7DD               	goto	i2l3064
  8887  001BA0  0A03               	xorlw	3	; case 34
  8888  001BA2  B4D8               	btfsc	status,2,c
  8889  001BA4  D7EC               	goto	i2l3072
  8890  001BA6  0A01               	xorlw	1	; case 35
  8891  001BA8                     i2l3082:
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;usb_function_hid.c: 215: }
  8895                           ;usb_function_hid.c: 217: if(SetupPkt.RequestType != (0x20>>5))
  8896  001BA8  0100               	movlb	0	; () banked
  8897  001BAA  398C               	swapf	_SetupPkt& (0+255),w,b	;volatile
  8898  001BAC  32E8               	rrcf	wreg,f,c
  8899  001BAE  0B03               	andlw	3
  8900  001BB0  06E8               	decf	wreg,f,c
  8901  001BB2  A4D8               	btfss	status,2,c
  8902  001BB4  0012               	return	
  8903  001BB6  D02A               	goto	i2l3108
  8904  001BB8                     i2l3086:
  8905                           
  8906                           ; BSR set to: 0
  8907                           ;usb_function_hid.c: 235: { inPipes[0].pSrc.bRam = (BYTE*)&idle_rate; inPipes[0].wCount.
      +                          Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8908  001BB8  0E4B               	movlw	low _idle_rate
  8909  001BBA  0100               	movlb	0	; () banked
  8910  001BBC  6F69               	movwf	_inPipes& (0+255),b	;volatile
  8911  001BBE  0E00               	movlw	high _idle_rate
  8912  001BC0  0100               	movlb	0	; () banked
  8913  001BC2  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
  8914                           
  8915                           ; BSR set to: 0
  8916  001BC4  0E00               	movlw	0
  8917  001BC6  0100               	movlb	0	; () banked
  8918  001BC8  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
  8919  001BCA  0E01               	movlw	1
  8920  001BCC  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  8921                           
  8922                           ; BSR set to: 0
  8923  001BCE  0EC1               	movlw	193
  8924  001BD0  0100               	movlb	0	; () banked
  8925  001BD2  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  8926                           
  8927                           ;usb_function_hid.c: 239: break;
  8928  001BD4  0012               	return	
  8929  001BD6                     i2l3092:
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;usb_function_hid.c: 241: inPipes[0].info.Val = 0x00 | 0x80;
  8933  001BD6  0E80               	movlw	128
  8934  001BD8  0100               	movlb	0	; () banked
  8935  001BDA  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;usb_function_hid.c: 242: idle_rate = SetupPkt.W_Value.byte.HB;
  8939  001BDC  C08F  F04B         	movff	_SetupPkt+3,_idle_rate	;volatile
  8940                           
  8941                           ;usb_function_hid.c: 243: break;
  8942  001BE0  0012               	return	
  8943  001BE2                     i2l3096:
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;usb_function_hid.c: 245: { inPipes[0].pSrc.bRam = (BYTE*)&active_protocol; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
  8947  001BE2  0E4A               	movlw	low _active_protocol
  8948  001BE4  0100               	movlb	0	; () banked
  8949  001BE6  6F69               	movwf	_inPipes& (0+255),b	;volatile
  8950  001BE8  0E00               	movlw	high _active_protocol
  8951  001BEA  0100               	movlb	0	; () banked
  8952  001BEC  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
  8953                           
  8954                           ; BSR set to: 0
  8955  001BEE  0E00               	movlw	0
  8956  001BF0  0100               	movlb	0	; () banked
  8957  001BF2  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
  8958  001BF4  0E01               	movlw	1
  8959  001BF6  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  8960                           
  8961                           ; BSR set to: 0
  8962  001BF8  0E81               	movlw	129
  8963  001BFA  0100               	movlb	0	; () banked
  8964  001BFC  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  8965                           
  8966                           ;usb_function_hid.c: 249: break;
  8967  001BFE  0012               	return	
  8968  001C00                     i2l3102:
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;usb_function_hid.c: 251: inPipes[0].info.Val = 0x00 | 0x80;
  8972  001C00  0E80               	movlw	128
  8973  001C02  0100               	movlb	0	; () banked
  8974  001C04  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;usb_function_hid.c: 252: active_protocol = SetupPkt.W_Value.byte.LB;
  8978  001C06  C08E  F04A         	movff	_SetupPkt+2,_active_protocol	;volatile
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;usb_function_hid.c: 254: }
  8982                           
  8983                           ;usb_function_hid.c: 253: break;
  8984  001C0A  0012               	return	
  8985  001C0C                     i2l3108:
  8986                           
  8987                           ; BSR set to: 0
  8988  001C0C  0100               	movlb	0	; () banked
  8989  001C0E  518D               	movf	(_SetupPkt+1)& (0+255),w,b	;volatile
  8990                           
  8991                           ; Switch size 1, requested type "space"
  8992                           ; Number of cases is 6, Range of values is 1 to 11
  8993                           ; switch strategies available:
  8994                           ; Name         Instructions Cycles
  8995                           ; simple_byte           19    10 (average)
  8996                           ;	Chosen strategy is simple_byte
  8997  001C10  0A01               	xorlw	1	; case 1
  8998  001C12  B4D8               	btfsc	status,2,c
  8999  001C14  0012               	return	
  9000  001C16  0A03               	xorlw	3	; case 2
  9001  001C18  B4D8               	btfsc	status,2,c
  9002  001C1A  D7CE               	goto	i2l3086
  9003  001C1C  0A01               	xorlw	1	; case 3
  9004  001C1E  B4D8               	btfsc	status,2,c
  9005  001C20  D7E0               	goto	i2l3096
  9006  001C22  0A0A               	xorlw	10	; case 9
  9007  001C24  B4D8               	btfsc	status,2,c
  9008  001C26  0012               	return	
  9009  001C28  0A03               	xorlw	3	; case 10
  9010  001C2A  B4D8               	btfsc	status,2,c
  9011  001C2C  D7D4               	goto	i2l3092
  9012  001C2E  0A01               	xorlw	1	; case 11
  9013  001C30  A4D8               	btfss	status,2,c
  9014  001C32  0012               	return	
  9015  001C34  D7E5               	goto	i2l3102
  9016  001C36                     __end_of_USBCheckHIDRequest:
  9017                           	opt stack 0
  9018                           pclatu	equ	0xFFB
  9019                           pclath	equ	0xFFA
  9020                           tblptru	equ	0xFF8
  9021                           tblptrh	equ	0xFF7
  9022                           tblptrl	equ	0xFF6
  9023                           tablat	equ	0xFF5
  9024                           prodh	equ	0xFF4
  9025                           prodl	equ	0xFF3
  9026                           intcon	equ	0xFF2
  9027                           indf0	equ	0xFEF
  9028                           postinc0	equ	0xFEE
  9029                           fsr0h	equ	0xFEA
  9030                           fsr0l	equ	0xFE9
  9031                           wreg	equ	0xFE8
  9032                           indf1	equ	0xFE7
  9033                           fsr1h	equ	0xFE2
  9034                           fsr1l	equ	0xFE1
  9035                           bsr	equ	0xFE0
  9036                           indf2	equ	0xFDF
  9037                           postinc2	equ	0xFDE
  9038                           postdec2	equ	0xFDD
  9039                           plusw2	equ	0xFDB
  9040                           fsr2h	equ	0xFDA
  9041                           fsr2l	equ	0xFD9
  9042                           status	equ	0xFD8
  9043                           
  9044 ;; *************** function _USBCtrlTrfOutHandler *****************
  9045 ;; Defined at:
  9046 ;;		line 2688 in file "../usb_lab/usb_device.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;		None
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;		None
  9051 ;; Return value:  Size  Location     Type
  9052 ;;		None               void
  9053 ;; Registers used:
  9054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9064 ;;Total ram usage:        0 bytes
  9065 ;; Hardware stack levels used:    1
  9066 ;; Hardware stack levels required when called:    2
  9067 ;; This function calls:
  9068 ;;		_USBCtrlTrfRxService
  9069 ;; This function is called by:
  9070 ;;		_USBCtrlEPService
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           	psect	text52
  9075  0028DC                     __ptext52:
  9076                           	opt stack 0
  9077  0028DC                     _USBCtrlTrfOutHandler:
  9078                           	opt stack 19
  9079                           
  9080                           ;usb_device.c: 2690: if(controlTransferState == 2)
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;incstack = 0
  9084  0028DC  0E02               	movlw	2
  9085  0028DE  1842               	xorwf	_controlTransferState,w,c	;volatile
  9086  0028E0  A4D8               	btfss	status,2,c
  9087  0028E2  D003               	goto	i2l3684
  9088                           
  9089                           ;usb_device.c: 2691: {
  9090                           ;usb_device.c: 2692: USBCtrlTrfRxService();
  9091  0028E4  EC17  F00D         	call	_USBCtrlTrfRxService	;wreg free
  9092                           
  9093                           ;usb_device.c: 2693: }
  9094  0028E8  0012               	return	
  9095  0028EA                     i2l3684:
  9096                           
  9097                           ;usb_device.c: 2694: else
  9098                           ;usb_device.c: 2695: {
  9099                           ;usb_device.c: 2698: controlTransferState = 0;
  9100  0028EA  0E00               	movlw	0
  9101  0028EC  6E42               	movwf	_controlTransferState,c	;volatile
  9102                           
  9103                           ;usb_device.c: 2705: if(BothEP0OutUOWNsSet == FALSE)
  9104  0028EE  503A               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
  9105  0028F0  A4D8               	btfss	status,2,c
  9106  0028F2  D019               	goto	i2l3690
  9107                           
  9108                           ;usb_device.c: 2706: {
  9109                           ;usb_device.c: 2707: pBDTEntryEP0OutNext->CNT = 8;
  9110  0028F4  EE20 F001          	lfsr	2,1
  9111  0028F8  5036               	movf	_pBDTEntryEP0OutNext,w,c
  9112  0028FA  26D9               	addwf	fsr2l,f,c
  9113  0028FC  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  9114  0028FE  22DA               	addwfc	fsr2h,f,c
  9115  002900  0E08               	movlw	8
  9116  002902  6EDF               	movwf	indf2,c
  9117                           
  9118                           ;usb_device.c: 2708: pBDTEntryEP0OutNext->ADR = ((WORD)(&SetupPkt));
  9119  002904  EE20 F002          	lfsr	2,2
  9120  002908  5036               	movf	_pBDTEntryEP0OutNext,w,c
  9121  00290A  26D9               	addwf	fsr2l,f,c
  9122  00290C  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  9123  00290E  22DA               	addwfc	fsr2h,f,c
  9124  002910  0E8C               	movlw	low _SetupPkt
  9125  002912  6EDE               	movwf	postinc2,c
  9126  002914  0E00               	movlw	high _SetupPkt
  9127  002916  6EDD               	movwf	postdec2,c
  9128                           
  9129                           ;usb_device.c: 2709: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  9130  002918  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9131  00291C  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9132  002920  0E8C               	movlw	140
  9133  002922  6EDF               	movwf	indf2,c
  9134                           
  9135                           ;usb_device.c: 2710: }
  9136  002924  0012               	return	
  9137  002926                     i2l3690:
  9138                           
  9139                           ;usb_device.c: 2711: else
  9140                           ;usb_device.c: 2712: {
  9141                           ;usb_device.c: 2713: BothEP0OutUOWNsSet = FALSE;
  9142  002926  0E00               	movlw	0
  9143  002928  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  9144  00292A  0012               	return	
  9145  00292C                     __end_of_USBCtrlTrfOutHandler:
  9146                           	opt stack 0
  9147                           pclatu	equ	0xFFB
  9148                           pclath	equ	0xFFA
  9149                           tblptru	equ	0xFF8
  9150                           tblptrh	equ	0xFF7
  9151                           tblptrl	equ	0xFF6
  9152                           tablat	equ	0xFF5
  9153                           prodh	equ	0xFF4
  9154                           prodl	equ	0xFF3
  9155                           intcon	equ	0xFF2
  9156                           indf0	equ	0xFEF
  9157                           postinc0	equ	0xFEE
  9158                           fsr0h	equ	0xFEA
  9159                           fsr0l	equ	0xFE9
  9160                           wreg	equ	0xFE8
  9161                           indf1	equ	0xFE7
  9162                           fsr1h	equ	0xFE2
  9163                           fsr1l	equ	0xFE1
  9164                           bsr	equ	0xFE0
  9165                           indf2	equ	0xFDF
  9166                           postinc2	equ	0xFDE
  9167                           postdec2	equ	0xFDD
  9168                           plusw2	equ	0xFDB
  9169                           fsr2h	equ	0xFDA
  9170                           fsr2l	equ	0xFD9
  9171                           status	equ	0xFD8
  9172                           
  9173 ;; *************** function _USBCtrlTrfRxService *****************
  9174 ;; Defined at:
  9175 ;;		line 2012 in file "../usb_lab/usb_device.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;		None
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;  byteToRead      1   20[COMRAM] unsigned char 
  9180 ;;  i               1   19[COMRAM] unsigned char 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;		None               void
  9183 ;; Registers used:
  9184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9193 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9194 ;;Total ram usage:        4 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:    1
  9197 ;; This function calls:
  9198 ;;		_USBCtrlEPAllowStatusStage
  9199 ;; This function is called by:
  9200 ;;		_USBCtrlTrfOutHandler
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text53
  9205  001A2E                     __ptext53:
  9206                           	opt stack 0
  9207  001A2E                     _USBCtrlTrfRxService:
  9208                           	opt stack 19
  9209                           
  9210                           ;usb_device.c: 2014: BYTE byteToRead;
  9211                           ;usb_device.c: 2015: BYTE i;
  9212                           ;usb_device.c: 2019: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9213                           
  9214                           ;incstack = 0
  9215  001A2E  EE20 F001          	lfsr	2,1
  9216  001A32  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
  9217  001A34  26D9               	addwf	fsr2l,f,c
  9218  001A36  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9219  001A38  22DA               	addwfc	fsr2h,f,c
  9220  001A3A  50DF               	movf	indf2,w,c
  9221  001A3C  6E15               	movwf	USBCtrlTrfRxService@byteToRead,c
  9222                           
  9223                           ;usb_device.c: 2025: if(byteToRead > outPipes[0].wCount.Val)
  9224  001A3E  5015               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9225  001A40  0100               	movlb	0	; () banked
  9226  001A42  5D64               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
  9227  001A44  0E00               	movlw	0
  9228  001A46  5965               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
  9229  001A48  A0D8               	btfss	status,0,c
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;usb_device.c: 2026: {
  9233                           ;usb_device.c: 2027: byteToRead = outPipes[0].wCount.Val;
  9234  001A4A  C064  F015         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;usb_device.c: 2028: }
  9238                           ;usb_device.c: 2030: outPipes[0].wCount.Val = outPipes[0].wCount.Val - byteToRead;
  9239                           
  9240                           ; BSR set to: 0
  9241  001A4E  5015               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9242  001A50  6E12               	movwf	??_USBCtrlTrfRxService& (0+255),c
  9243  001A52  6A13               	clrf	(??_USBCtrlTrfRxService+1)& (0+255),c
  9244  001A54  1E12               	comf	??_USBCtrlTrfRxService,f,c
  9245  001A56  1E13               	comf	??_USBCtrlTrfRxService+1,f,c
  9246  001A58  4A12               	infsnz	??_USBCtrlTrfRxService,f,c
  9247  001A5A  2A13               	incf	??_USBCtrlTrfRxService+1,f,c
  9248  001A5C  0100               	movlb	0	; () banked
  9249  001A5E  5164               	movf	(_outPipes+4)& (0+255),w,b	;volatile
  9250  001A60  2412               	addwf	??_USBCtrlTrfRxService,w,c
  9251  001A62  0100               	movlb	0	; () banked
  9252  001A64  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
  9253  001A66  0100               	movlb	0	; () banked
  9254  001A68  5165               	movf	(_outPipes+5)& (0+255),w,b	;volatile
  9255  001A6A  2013               	addwfc	??_USBCtrlTrfRxService+1,w,c
  9256  001A6C  0100               	movlb	0	; () banked
  9257  001A6E  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;usb_device.c: 2034: for(i=0;i<byteToRead;i++)
  9261  001A70  0E00               	movlw	0
  9262  001A72  6E14               	movwf	USBCtrlTrfRxService@i,c
  9263  001A74  D012               	goto	i2l3512
  9264  001A76                     i2l3506:
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;usb_device.c: 2035: {
  9268                           ;usb_device.c: 2036: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9269  001A76  5014               	movf	USBCtrlTrfRxService@i,w,c
  9270  001A78  0D01               	mullw	1
  9271  001A7A  0E84               	movlw	low _CtrlTrfData
  9272  001A7C  24F3               	addwf	prodl,w,c
  9273  001A7E  6ED9               	movwf	fsr2l,c
  9274  001A80  0E00               	movlw	high _CtrlTrfData
  9275  001A82  20F4               	addwfc	prodh,w,c
  9276  001A84  6EDA               	movwf	fsr2h,c
  9277  001A86  C060  FFE1         	movff	_outPipes,fsr1l	;volatile
  9278  001A8A  C061  FFE2         	movff	_outPipes+1,fsr1h	;volatile
  9279  001A8E  CFDF FFE7          	movff	indf2,indf1
  9280                           
  9281                           ; BSR set to: 0
  9282  001A92  0100               	movlb	0	; () banked
  9283  001A94  4B60               	infsnz	_outPipes& (0+255),f,b	;volatile
  9284  001A96  2B61               	incf	(_outPipes+1)& (0+255),f,b	;volatile
  9285                           
  9286                           ; BSR set to: 0
  9287  001A98  2A14               	incf	USBCtrlTrfRxService@i,f,c
  9288  001A9A                     i2l3512:
  9289                           
  9290                           ; BSR set to: 0
  9291  001A9A  5015               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9292  001A9C  5C14               	subwf	USBCtrlTrfRxService@i,w,c
  9293  001A9E  A0D8               	btfss	status,0,c
  9294  001AA0  D7EA               	goto	i2l3506
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;usb_device.c: 2037: }
  9298                           ;usb_device.c: 2041: if(outPipes[0].wCount.Val > 0)
  9299                           
  9300                           ; BSR set to: 0
  9301  001AA2  0100               	movlb	0	; () banked
  9302  001AA4  5164               	movf	(_outPipes+4)& (0+255),w,b	;volatile
  9303  001AA6  0100               	movlb	0	; () banked
  9304  001AA8  1165               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
  9305  001AAA  B4D8               	btfsc	status,2,c
  9306  001AAC  D026               	goto	i2l3524
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;usb_device.c: 2042: {
  9310                           ;usb_device.c: 2043: pBDTEntryEP0OutNext->CNT = 8;
  9311  001AAE  EE20 F001          	lfsr	2,1
  9312  001AB2  5036               	movf	_pBDTEntryEP0OutNext,w,c
  9313  001AB4  26D9               	addwf	fsr2l,f,c
  9314  001AB6  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  9315  001AB8  22DA               	addwfc	fsr2h,f,c
  9316  001ABA  0E08               	movlw	8
  9317  001ABC  6EDF               	movwf	indf2,c
  9318                           
  9319                           ;usb_device.c: 2044: pBDTEntryEP0OutNext->ADR = ((WORD)(&CtrlTrfData));
  9320  001ABE  EE20 F002          	lfsr	2,2
  9321  001AC2  5036               	movf	_pBDTEntryEP0OutNext,w,c
  9322  001AC4  26D9               	addwf	fsr2l,f,c
  9323  001AC6  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  9324  001AC8  22DA               	addwfc	fsr2h,f,c
  9325  001ACA  0E84               	movlw	low _CtrlTrfData
  9326  001ACC  6EDE               	movwf	postinc2,c
  9327  001ACE  0E00               	movlw	high _CtrlTrfData
  9328  001AD0  6EDD               	movwf	postdec2,c
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;usb_device.c: 2045: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9332  001AD2  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9333  001AD6  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9334  001ADA  BCDF               	btfsc	indf2,6,c
  9335  001ADC  D007               	goto	i2l3522
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;usb_device.c: 2046: {
  9339                           ;usb_device.c: 2047: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9340  001ADE  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9341  001AE2  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9342  001AE6  0EC8               	movlw	200
  9343  001AE8  6EDF               	movwf	indf2,c
  9344                           
  9345                           ;usb_device.c: 2048: }
  9346  001AEA  0012               	return	
  9347  001AEC                     i2l3522:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;usb_device.c: 2049: else
  9351                           ;usb_device.c: 2050: {
  9352                           ;usb_device.c: 2051: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9353  001AEC  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9354  001AF0  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9355  001AF4  0E88               	movlw	136
  9356  001AF6  6EDF               	movwf	indf2,c
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;usb_device.c: 2052: }
  9360                           ;usb_device.c: 2053: }
  9361  001AF8  0012               	return	
  9362  001AFA                     i2l3524:
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;usb_device.c: 2054: else
  9366                           ;usb_device.c: 2055: {
  9367                           ;usb_device.c: 2059: pBDTEntryEP0OutNext->CNT = 8;
  9368  001AFA  EE20 F001          	lfsr	2,1
  9369  001AFE  5036               	movf	_pBDTEntryEP0OutNext,w,c
  9370  001B00  26D9               	addwf	fsr2l,f,c
  9371  001B02  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  9372  001B04  22DA               	addwfc	fsr2h,f,c
  9373  001B06  0E08               	movlw	8
  9374  001B08  6EDF               	movwf	indf2,c
  9375                           
  9376                           ;usb_device.c: 2060: pBDTEntryEP0OutNext->ADR = ((WORD)(&SetupPkt));
  9377  001B0A  EE20 F002          	lfsr	2,2
  9378  001B0E  5036               	movf	_pBDTEntryEP0OutNext,w,c
  9379  001B10  26D9               	addwf	fsr2l,f,c
  9380  001B12  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  9381  001B14  22DA               	addwfc	fsr2h,f,c
  9382  001B16  0E8C               	movlw	low _SetupPkt
  9383  001B18  6EDE               	movwf	postinc2,c
  9384  001B1A  0E00               	movlw	high _SetupPkt
  9385  001B1C  6EDD               	movwf	postdec2,c
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;usb_device.c: 2064: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  9389  001B1E  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9390  001B22  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9391  001B26  0E84               	movlw	132
  9392  001B28  6EDF               	movwf	indf2,c
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;usb_device.c: 2083: }
  9396                           ;usb_device.c: 2084: outPipes[0].info.bits.busy = 0;
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;usb_device.c: 2072: {
  9400                           ;usb_device.c: 2078: outPipes[0].pFunc();
  9401  001B2A  0100               	movlb	0	; () banked
  9402  001B2C  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;usb_device.c: 2098: if(USBDeferStatusStagePacket == FALSE)
  9406  001B2E  503E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  9407  001B30  A4D8               	btfss	status,2,c
  9408  001B32  0012               	return	
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;usb_device.c: 2099: {
  9412                           ;usb_device.c: 2100: USBCtrlEPAllowStatusStage();
  9413  001B34  ECEC  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9414  001B38  0012               	return	
  9415  001B3A                     __end_of_USBCtrlTrfRxService:
  9416                           	opt stack 0
  9417                           pclatu	equ	0xFFB
  9418                           pclath	equ	0xFFA
  9419                           tblptru	equ	0xFF8
  9420                           tblptrh	equ	0xFF7
  9421                           tblptrl	equ	0xFF6
  9422                           tablat	equ	0xFF5
  9423                           prodh	equ	0xFF4
  9424                           prodl	equ	0xFF3
  9425                           intcon	equ	0xFF2
  9426                           indf0	equ	0xFEF
  9427                           postinc0	equ	0xFEE
  9428                           fsr0h	equ	0xFEA
  9429                           fsr0l	equ	0xFE9
  9430                           wreg	equ	0xFE8
  9431                           indf1	equ	0xFE7
  9432                           fsr1h	equ	0xFE2
  9433                           fsr1l	equ	0xFE1
  9434                           bsr	equ	0xFE0
  9435                           indf2	equ	0xFDF
  9436                           postinc2	equ	0xFDE
  9437                           postdec2	equ	0xFDD
  9438                           plusw2	equ	0xFDB
  9439                           fsr2h	equ	0xFDA
  9440                           fsr2l	equ	0xFD9
  9441                           status	equ	0xFD8
  9442                           
  9443 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9444 ;; Defined at:
  9445 ;;		line 1583 in file "../usb_lab/usb_device.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;		None
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;		None               void
  9452 ;; Registers used:
  9453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9463 ;;Total ram usage:        0 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_USBDeviceTasks
  9469 ;;		_USBCtrlEPServiceComplete
  9470 ;;		_USBCtrlTrfRxService
  9471 ;; This function uses a non-reentrant model
  9472 ;;
  9473                           
  9474                           	psect	text54
  9475  0023D8                     __ptext54:
  9476                           	opt stack 0
  9477  0023D8                     _USBCtrlEPAllowStatusStage:
  9478                           	opt stack 19
  9479                           
  9480                           ;usb_device.c: 1590: if(USBStatusStageEnabledFlag1 == FALSE)
  9481                           
  9482                           ;incstack = 0
  9483  0023D8  503F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
  9484  0023DA  A4D8               	btfss	status,2,c
  9485  0023DC  0012               	return	
  9486                           
  9487                           ;usb_device.c: 1591: {
  9488                           ;usb_device.c: 1592: USBStatusStageEnabledFlag1 = TRUE;
  9489  0023DE  0E01               	movlw	1
  9490  0023E0  6E3F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9491                           
  9492                           ;usb_device.c: 1593: if(USBStatusStageEnabledFlag2 == FALSE)
  9493  0023E2  5040               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
  9494  0023E4  A4D8               	btfss	status,2,c
  9495  0023E6  0012               	return	
  9496                           
  9497                           ;usb_device.c: 1594: {
  9498                           ;usb_device.c: 1595: USBStatusStageEnabledFlag2 = TRUE;
  9499  0023E8  0E01               	movlw	1
  9500  0023EA  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9501                           
  9502                           ;usb_device.c: 1599: if(controlTransferState == 2)
  9503  0023EC  0E02               	movlw	2
  9504  0023EE  1842               	xorwf	_controlTransferState,w,c	;volatile
  9505  0023F0  A4D8               	btfss	status,2,c
  9506  0023F2  D010               	goto	i2l3224
  9507                           
  9508                           ;usb_device.c: 1600: {
  9509                           ;usb_device.c: 1601: pBDTEntryIn[0]->CNT = 0;
  9510  0023F4  0100               	movlb	0	; () banked
  9511  0023F6  EE20 F001          	lfsr	2,1
  9512  0023FA  516F               	movf	_pBDTEntryIn& (0+255),w,b
  9513  0023FC  26D9               	addwf	fsr2l,f,c
  9514  0023FE  5170               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9515  002400  22DA               	addwfc	fsr2h,f,c
  9516  002402  0E00               	movlw	0
  9517  002404  6EDF               	movwf	indf2,c
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;usb_device.c: 1602: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9521  002406  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
  9522  00240A  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9523  00240E  0EC8               	movlw	200
  9524  002410  6EDF               	movwf	indf2,c
  9525                           
  9526                           ;usb_device.c: 1603: }
  9527  002412  0012               	return	
  9528  002414                     i2l3224:
  9529                           
  9530                           ;usb_device.c: 1604: else if(controlTransferState == 1)
  9531  002414  0442               	decf	_controlTransferState,w,c	;volatile
  9532  002416  A4D8               	btfss	status,2,c
  9533  002418  0012               	return	
  9534                           
  9535                           ;usb_device.c: 1605: {
  9536                           ;usb_device.c: 1606: BothEP0OutUOWNsSet = FALSE;
  9537  00241A  0E00               	movlw	0
  9538  00241C  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  9539                           
  9540                           ;usb_device.c: 1611: pBDTEntryEP0OutCurrent->CNT = 8;
  9541  00241E  EE20 F001          	lfsr	2,1
  9542  002422  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
  9543  002424  26D9               	addwf	fsr2l,f,c
  9544  002426  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9545  002428  22DA               	addwfc	fsr2h,f,c
  9546  00242A  0E08               	movlw	8
  9547  00242C  6EDF               	movwf	indf2,c
  9548                           
  9549                           ;usb_device.c: 1612: pBDTEntryEP0OutCurrent->ADR = ((WORD)(&SetupPkt));
  9550  00242E  EE20 F002          	lfsr	2,2
  9551  002432  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
  9552  002434  26D9               	addwf	fsr2l,f,c
  9553  002436  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9554  002438  22DA               	addwfc	fsr2h,f,c
  9555  00243A  0E8C               	movlw	low _SetupPkt
  9556  00243C  6EDE               	movwf	postinc2,c
  9557  00243E  0E00               	movlw	high _SetupPkt
  9558  002440  6EDD               	movwf	postdec2,c
  9559                           
  9560                           ;usb_device.c: 1613: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
  9561  002442  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9562  002446  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9563  00244A  0E84               	movlw	132
  9564  00244C  6EDF               	movwf	indf2,c
  9565                           
  9566                           ;usb_device.c: 1614: BothEP0OutUOWNsSet = TRUE;
  9567  00244E  0E01               	movlw	1
  9568  002450  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  9569                           
  9570                           ;usb_device.c: 1618: pBDTEntryEP0OutNext->CNT = 8;
  9571  002452  EE20 F001          	lfsr	2,1
  9572  002456  5036               	movf	_pBDTEntryEP0OutNext,w,c
  9573  002458  26D9               	addwf	fsr2l,f,c
  9574  00245A  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  9575  00245C  22DA               	addwfc	fsr2h,f,c
  9576  00245E  0E08               	movlw	8
  9577  002460  6EDF               	movwf	indf2,c
  9578                           
  9579                           ;usb_device.c: 1619: pBDTEntryEP0OutNext->ADR = ((WORD)(&SetupPkt));
  9580  002462  EE20 F002          	lfsr	2,2
  9581  002466  5036               	movf	_pBDTEntryEP0OutNext,w,c
  9582  002468  26D9               	addwf	fsr2l,f,c
  9583  00246A  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
  9584  00246C  22DA               	addwfc	fsr2h,f,c
  9585  00246E  0E8C               	movlw	low _SetupPkt
  9586  002470  6EDE               	movwf	postinc2,c
  9587  002472  0E00               	movlw	high _SetupPkt
  9588  002474  6EDD               	movwf	postdec2,c
  9589                           
  9590                           ;usb_device.c: 1620: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9591  002476  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9592  00247A  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9593  00247E  0E80               	movlw	128
  9594  002480  6EDF               	movwf	indf2,c
  9595  002482  0012               	return	
  9596  002484                     __end_of_USBCtrlEPAllowStatusStage:
  9597                           	opt stack 0
  9598                           pclatu	equ	0xFFB
  9599                           pclath	equ	0xFFA
  9600                           tblptru	equ	0xFF8
  9601                           tblptrh	equ	0xFF7
  9602                           tblptrl	equ	0xFF6
  9603                           tablat	equ	0xFF5
  9604                           prodh	equ	0xFF4
  9605                           prodl	equ	0xFF3
  9606                           intcon	equ	0xFF2
  9607                           indf0	equ	0xFEF
  9608                           postinc0	equ	0xFEE
  9609                           fsr0h	equ	0xFEA
  9610                           fsr0l	equ	0xFE9
  9611                           wreg	equ	0xFE8
  9612                           indf1	equ	0xFE7
  9613                           fsr1h	equ	0xFE2
  9614                           fsr1l	equ	0xFE1
  9615                           bsr	equ	0xFE0
  9616                           indf2	equ	0xFDF
  9617                           postinc2	equ	0xFDE
  9618                           postdec2	equ	0xFDD
  9619                           plusw2	equ	0xFDB
  9620                           fsr2h	equ	0xFDA
  9621                           fsr2l	equ	0xFD9
  9622                           status	equ	0xFD8
  9623                           
  9624 ;; *************** function _USBCtrlTrfInHandler *****************
  9625 ;; Defined at:
  9626 ;;		line 2741 in file "../usb_lab/usb_device.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;		None
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;  lastDTS         1   20[COMRAM] unsigned char 
  9631 ;; Return value:  Size  Location     Type
  9632 ;;		None               void
  9633 ;; Registers used:
  9634 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9644 ;;Total ram usage:        1 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; Hardware stack levels required when called:    1
  9647 ;; This function calls:
  9648 ;;		_USBCtrlTrfTxService
  9649 ;; This function is called by:
  9650 ;;		_USBCtrlEPService
  9651 ;; This function uses a non-reentrant model
  9652 ;;
  9653                           
  9654                           	psect	text55
  9655  002484                     __ptext55:
  9656                           	opt stack 0
  9657  002484                     _USBCtrlTrfInHandler:
  9658                           	opt stack 20
  9659                           
  9660                           ;usb_device.c: 2743: BYTE lastDTS;
  9661                           ;usb_device.c: 2745: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9662                           
  9663                           ;incstack = 0
  9664  002484  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
  9665  002488  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9666  00248C  0E00               	movlw	0
  9667  00248E  BCDF               	btfsc	indf2,6,c
  9668  002490  0E01               	movlw	1
  9669  002492  6E15               	movwf	USBCtrlTrfInHandler@lastDTS,c
  9670                           
  9671                           ;usb_device.c: 2748: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9672  002494  0E04               	movlw	4
  9673  002496  0100               	movlb	0	; () banked
  9674  002498  1B6F               	xorwf	_pBDTEntryIn& (0+255),f,b
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;usb_device.c: 2753: if(USBDeviceState == ADR_PENDING_STATE)
  9678  00249A  0E08               	movlw	8
  9679  00249C  0100               	movlb	0	; () banked
  9680  00249E  1983               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  9681  0024A0  A4D8               	btfss	status,2,c
  9682  0024A2  D00B               	goto	i2l3706
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;usb_device.c: 2754: {
  9686                           ;usb_device.c: 2755: UADDR = SetupPkt.bDevADR.Val;
  9687  0024A4  C08E  FF38         	movff	_SetupPkt+2,3896	;volatile
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;usb_device.c: 2756: if(UADDR != 0u)
  9691  0024A8  010F               	movlb	15	; () banked
  9692  0024AA  5138               	movf	56,w,b	;volatile
  9693  0024AC  B4D8               	btfsc	status,2,c
  9694  0024AE  D002               	goto	i2l3704
  9695                           
  9696                           ; BSR set to: 15
  9697                           ;usb_device.c: 2757: {
  9698                           ;usb_device.c: 2758: USBDeviceState=ADDRESS_STATE;
  9699  0024B0  0E10               	movlw	16
  9700  0024B2  D001               	goto	L13
  9701  0024B4                     i2l3704:
  9702                           
  9703                           ;usb_device.c: 2760: else
  9704                           ;usb_device.c: 2761: {
  9705                           ;usb_device.c: 2762: USBDeviceState=DEFAULT_STATE;
  9706  0024B4  0E04               	movlw	4
  9707  0024B6                     L13:
  9708  0024B6  0100               	movlb	0	; () banked
  9709  0024B8  6F83               	movwf	_USBDeviceState& (0+255),b	;volatile
  9710  0024BA                     i2l3706:
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;usb_device.c: 2763: }
  9714                           ;usb_device.c: 2764: }
  9715                           ;usb_device.c: 2767: if(controlTransferState == 1)
  9716  0024BA  0442               	decf	_controlTransferState,w,c	;volatile
  9717  0024BC  A4D8               	btfss	status,2,c
  9718  0024BE  D029               	goto	i2l753
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;usb_device.c: 2768: {
  9722                           ;usb_device.c: 2769: pBDTEntryIn[0]->ADR = ((WORD)(CtrlTrfData));
  9723  0024C0  0100               	movlb	0	; () banked
  9724  0024C2  EE20 F002          	lfsr	2,2
  9725  0024C6  516F               	movf	_pBDTEntryIn& (0+255),w,b
  9726  0024C8  26D9               	addwf	fsr2l,f,c
  9727  0024CA  5170               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9728  0024CC  22DA               	addwfc	fsr2h,f,c
  9729  0024CE  0E84               	movlw	low _CtrlTrfData
  9730  0024D0  6EDE               	movwf	postinc2,c
  9731  0024D2  0E00               	movlw	high _CtrlTrfData
  9732  0024D4  6EDD               	movwf	postdec2,c
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;usb_device.c: 2770: USBCtrlTrfTxService();
  9736  0024D6  EC0E  F00F         	call	_USBCtrlTrfTxService	;wreg free
  9737                           
  9738                           ;usb_device.c: 2776: if(shortPacketStatus == 2)
  9739  0024DA  0E02               	movlw	2
  9740  0024DC  1846               	xorwf	_shortPacketStatus,w,c	;volatile
  9741  0024DE  A4D8               	btfss	status,2,c
  9742  0024E0  D007               	goto	i2l3716
  9743                           
  9744                           ;usb_device.c: 2777: {
  9745                           ;usb_device.c: 2780: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  9746  0024E2  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
  9747  0024E6  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9748  0024EA  0E84               	movlw	132
  9749  0024EC  6EDF               	movwf	indf2,c
  9750                           
  9751                           ;usb_device.c: 2781: }
  9752  0024EE  0012               	return	
  9753  0024F0                     i2l3716:
  9754                           
  9755                           ;usb_device.c: 2782: else
  9756                           ;usb_device.c: 2783: {
  9757                           ;usb_device.c: 2784: if(lastDTS == 0)
  9758  0024F0  5015               	movf	USBCtrlTrfInHandler@lastDTS,w,c
  9759  0024F2  A4D8               	btfss	status,2,c
  9760  0024F4  D007               	goto	i2l3720
  9761                           
  9762                           ;usb_device.c: 2785: {
  9763                           ;usb_device.c: 2786: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9764  0024F6  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
  9765  0024FA  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9766  0024FE  0EC8               	movlw	200
  9767  002500  6EDF               	movwf	indf2,c
  9768                           
  9769                           ;usb_device.c: 2787: }
  9770  002502  0012               	return	
  9771  002504                     i2l3720:
  9772                           
  9773                           ;usb_device.c: 2788: else
  9774                           ;usb_device.c: 2789: {
  9775                           ;usb_device.c: 2790: pBDTEntryIn[0]->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9776  002504  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
  9777  002508  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9778  00250C  0E88               	movlw	136
  9779  00250E  6EDF               	movwf	indf2,c
  9780                           
  9781                           ;usb_device.c: 2791: }
  9782                           ;usb_device.c: 2792: }
  9783                           ;usb_device.c: 2793: }
  9784  002510  0012               	return	
  9785  002512                     i2l753:
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;usb_device.c: 2794: else
  9789                           ;usb_device.c: 2795: {
  9790                           ;usb_device.c: 2799: if(outPipes[0].info.bits.busy == 1)
  9791  002512  0100               	movlb	0	; () banked
  9792  002514  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
  9793  002516  D002               	goto	i2l3724
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;usb_device.c: 2804: }
  9797                           ;usb_device.c: 2805: outPipes[0].info.bits.busy = 0;
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;usb_device.c: 2802: {
  9801                           ;usb_device.c: 2803: outPipes[0].pFunc();
  9802  002518  0100               	movlb	0	; () banked
  9803  00251A  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
  9804  00251C                     i2l3724:
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;usb_device.c: 2806: }
  9808                           ;usb_device.c: 2808: controlTransferState = 0;
  9809  00251C  0E00               	movlw	0
  9810  00251E  6E42               	movwf	_controlTransferState,c	;volatile
  9811  002520  0012               	return	
  9812  002522                     __end_of_USBCtrlTrfInHandler:
  9813                           	opt stack 0
  9814                           pclatu	equ	0xFFB
  9815                           pclath	equ	0xFFA
  9816                           tblptru	equ	0xFF8
  9817                           tblptrh	equ	0xFF7
  9818                           tblptrl	equ	0xFF6
  9819                           tablat	equ	0xFF5
  9820                           prodh	equ	0xFF4
  9821                           prodl	equ	0xFF3
  9822                           intcon	equ	0xFF2
  9823                           indf0	equ	0xFEF
  9824                           postinc0	equ	0xFEE
  9825                           fsr0h	equ	0xFEA
  9826                           fsr0l	equ	0xFE9
  9827                           wreg	equ	0xFE8
  9828                           indf1	equ	0xFE7
  9829                           fsr1h	equ	0xFE2
  9830                           fsr1l	equ	0xFE1
  9831                           bsr	equ	0xFE0
  9832                           indf2	equ	0xFDF
  9833                           postinc2	equ	0xFDE
  9834                           postdec2	equ	0xFDD
  9835                           plusw2	equ	0xFDB
  9836                           fsr2h	equ	0xFDA
  9837                           fsr2l	equ	0xFD9
  9838                           status	equ	0xFD8
  9839                           
  9840 ;; *************** function _USBCtrlTrfTxService *****************
  9841 ;; Defined at:
  9842 ;;		line 1931 in file "../usb_lab/usb_device.c"
  9843 ;; Parameters:    Size  Location     Type
  9844 ;;		None
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;  byteToSend      1   19[COMRAM] unsigned char 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;		None               void
  9849 ;; Registers used:
  9850 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9858 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9859 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9860 ;;Total ram usage:        3 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_USBCtrlEPAllowDataStage
  9866 ;;		_USBCtrlTrfInHandler
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text56
  9871  001E1C                     __ptext56:
  9872                           	opt stack 0
  9873  001E1C                     _USBCtrlTrfTxService:
  9874                           	opt stack 18
  9875                           
  9876                           ;usb_device.c: 1933: BYTE byteToSend;
  9877                           ;usb_device.c: 1937: byteToSend = 8;
  9878                           
  9879                           ;incstack = 0
  9880  001E1C  0E08               	movlw	8
  9881  001E1E  6E14               	movwf	USBCtrlTrfTxService@byteToSend,c
  9882                           
  9883                           ;usb_device.c: 1938: if(inPipes[0].wCount.Val < (BYTE)8)
  9884  001E20  0100               	movlb	0	; () banked
  9885  001E22  516E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
  9886  001E24  E111               	bnz	i2l3168
  9887  001E26  0E08               	movlw	8
  9888  001E28  0100               	movlb	0	; () banked
  9889  001E2A  5D6D               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
  9890  001E2C  B0D8               	btfsc	status,0,c
  9891  001E2E  D00C               	goto	i2l3168
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;usb_device.c: 1939: {
  9895                           ;usb_device.c: 1940: byteToSend = inPipes[0].wCount.Val;
  9896  001E30  C06D  F014         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;usb_device.c: 1947: if(shortPacketStatus == 0)
  9900  001E34  5046               	movf	_shortPacketStatus,w,c	;volatile
  9901  001E36  A4D8               	btfss	status,2,c
  9902  001E38  D002               	goto	i2l3164
  9903                           
  9904                           ; BSR set to: 0
  9905                           ;usb_device.c: 1948: {
  9906                           ;usb_device.c: 1949: shortPacketStatus = 1;
  9907  001E3A  0E01               	movlw	1
  9908  001E3C  D004               	goto	L14
  9909  001E3E                     i2l3164:
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;usb_device.c: 1951: else if(shortPacketStatus == 1)
  9913  001E3E  0446               	decf	_shortPacketStatus,w,c	;volatile
  9914  001E40  A4D8               	btfss	status,2,c
  9915  001E42  D002               	goto	i2l3168
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;usb_device.c: 1952: {
  9919                           ;usb_device.c: 1953: shortPacketStatus = 2;
  9920  001E44  0E02               	movlw	2
  9921  001E46                     L14:
  9922  001E46  6E46               	movwf	_shortPacketStatus,c	;volatile
  9923  001E48                     i2l3168:
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;usb_device.c: 1954: }
  9927                           ;usb_device.c: 1955: }
  9928                           ;usb_device.c: 1959: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend;
  9929  001E48  5014               	movf	USBCtrlTrfTxService@byteToSend,w,c
  9930  001E4A  6E12               	movwf	??_USBCtrlTrfTxService& (0+255),c
  9931  001E4C  6A13               	clrf	(??_USBCtrlTrfTxService+1)& (0+255),c
  9932  001E4E  1E12               	comf	??_USBCtrlTrfTxService,f,c
  9933  001E50  1E13               	comf	??_USBCtrlTrfTxService+1,f,c
  9934  001E52  4A12               	infsnz	??_USBCtrlTrfTxService,f,c
  9935  001E54  2A13               	incf	??_USBCtrlTrfTxService+1,f,c
  9936  001E56  0100               	movlb	0	; () banked
  9937  001E58  516D               	movf	(_inPipes+4)& (0+255),w,b	;volatile
  9938  001E5A  2412               	addwf	??_USBCtrlTrfTxService,w,c
  9939  001E5C  0100               	movlb	0	; () banked
  9940  001E5E  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
  9941  001E60  0100               	movlb	0	; () banked
  9942  001E62  516E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
  9943  001E64  2013               	addwfc	??_USBCtrlTrfTxService+1,w,c
  9944  001E66  0100               	movlb	0	; () banked
  9945  001E68  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;usb_device.c: 1964: pBDTEntryIn[0]->CNT = byteToSend;
  9949  001E6A  0100               	movlb	0	; () banked
  9950  001E6C  EE20 F001          	lfsr	2,1
  9951  001E70  516F               	movf	_pBDTEntryIn& (0+255),w,b
  9952  001E72  26D9               	addwf	fsr2l,f,c
  9953  001E74  5170               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9954  001E76  22DA               	addwfc	fsr2h,f,c
  9955  001E78  C014  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;usb_device.c: 1968: pDst = (volatile BYTE*)CtrlTrfData;
  9959  001E7C  0E84               	movlw	low _CtrlTrfData
  9960  001E7E  6E38               	movwf	_pDst,c
  9961  001E80  0E00               	movlw	high _CtrlTrfData
  9962  001E82  6E39               	movwf	_pDst+1,c
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;usb_device.c: 1969: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9966  001E84  0100               	movlb	0	; () banked
  9967  001E86  A16C               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
  9968  001E88  D01D               	goto	i2l3186
  9969  001E8A  D03C               	goto	i2l3196
  9970  001E8C                     i2l3178:
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;usb_device.c: 1972: {
  9974                           ;usb_device.c: 1973: *pDst++ = *inPipes[0].pSrc.bRom++;
  9975  001E8C  C069  FFF6         	movff	_inPipes,tblptrl	;volatile
  9976  001E90  C06A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  9977  001E94  0E00               	movlw	low (__smallconst shr (0+16))
  9978  001E96  6EF8               	movwf	tblptru,c
  9979  001E98  C038  FFD9         	movff	_pDst,fsr2l
  9980  001E9C  C039  FFDA         	movff	_pDst+1,fsr2h
  9981  001EA0  0E0E               	movlw	(high __ramtop+-1)
  9982  001EA2  64F7               	cpfsgt	tblptrh,c
  9983  001EA4  D003               	bra	i2u229_47
  9984  001EA6  0008               	tblrd		*
  9985  001EA8  50F5               	movf	tablat,w,c
  9986  001EAA  D005               	bra	i2u229_40
  9987  001EAC                     i2u229_47:
  9988  001EAC  CFF6 FFE9          	movff	tblptrl,fsr0l
  9989  001EB0  CFF7 FFEA          	movff	tblptrh,fsr0h
  9990  001EB4  50EF               	movf	indf0,w,c
  9991  001EB6                     i2u229_40:
  9992  001EB6  6EDF               	movwf	indf2,c
  9993  001EB8  0100               	movlb	0	; () banked
  9994  001EBA  4B69               	infsnz	_inPipes& (0+255),f,b	;volatile
  9995  001EBC  2B6A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
  9996                           
  9997                           ; BSR set to: 0
  9998  001EBE  4A38               	infsnz	_pDst,f,c
  9999  001EC0  2A39               	incf	_pDst+1,f,c
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;usb_device.c: 1974: byteToSend--;
 10003  001EC2  0614               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10004  001EC4                     i2l3186:
 10005                           
 10006                           ; BSR set to: 0
 10007  001EC4  5014               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10008  001EC6  B4D8               	btfsc	status,2,c
 10009  001EC8  0012               	return	
 10010  001ECA  D7E0               	goto	i2l3178
 10011  001ECC                     i2l3188:
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;usb_device.c: 1980: {
 10015                           ;usb_device.c: 1981: *pDst++ = *inPipes[0].pSrc.bRam++;
 10016  001ECC  C069  FFF6         	movff	_inPipes,tblptrl	;volatile
 10017  001ED0  C06A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10018  001ED4  0E00               	movlw	low (__smallconst shr (0+16))
 10019  001ED6  6EF8               	movwf	tblptru,c
 10020  001ED8  C038  FFD9         	movff	_pDst,fsr2l
 10021  001EDC  C039  FFDA         	movff	_pDst+1,fsr2h
 10022  001EE0  0E0E               	movlw	(high __ramtop+-1)
 10023  001EE2  64F7               	cpfsgt	tblptrh,c
 10024  001EE4  D003               	bra	i2u231_47
 10025  001EE6  0008               	tblrd		*
 10026  001EE8  50F5               	movf	tablat,w,c
 10027  001EEA  D005               	bra	i2u231_40
 10028  001EEC                     i2u231_47:
 10029  001EEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 10030  001EF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 10031  001EF4  50EF               	movf	indf0,w,c
 10032  001EF6                     i2u231_40:
 10033  001EF6  6EDF               	movwf	indf2,c
 10034  001EF8  0100               	movlb	0	; () banked
 10035  001EFA  4B69               	infsnz	_inPipes& (0+255),f,b	;volatile
 10036  001EFC  2B6A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 10037                           
 10038                           ; BSR set to: 0
 10039  001EFE  4A38               	infsnz	_pDst,f,c
 10040  001F00  2A39               	incf	_pDst+1,f,c
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;usb_device.c: 1982: byteToSend--;
 10044  001F02  0614               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10045  001F04                     i2l3196:
 10046                           
 10047                           ; BSR set to: 0
 10048  001F04  5014               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10049  001F06  B4D8               	btfsc	status,2,c
 10050  001F08  0012               	return	
 10051  001F0A  D7E0               	goto	i2l3188
 10052  001F0C                     __end_of_USBCtrlTrfTxService:
 10053                           	opt stack 0
 10054                           pclatu	equ	0xFFB
 10055                           pclath	equ	0xFFA
 10056                           tblptru	equ	0xFF8
 10057                           tblptrh	equ	0xFF7
 10058                           tblptrl	equ	0xFF6
 10059                           tablat	equ	0xFF5
 10060                           prodh	equ	0xFF4
 10061                           prodl	equ	0xFF3
 10062                           intcon	equ	0xFF2
 10063                           indf0	equ	0xFEF
 10064                           postinc0	equ	0xFEE
 10065                           fsr0h	equ	0xFEA
 10066                           fsr0l	equ	0xFE9
 10067                           wreg	equ	0xFE8
 10068                           indf1	equ	0xFE7
 10069                           fsr1h	equ	0xFE2
 10070                           fsr1l	equ	0xFE1
 10071                           bsr	equ	0xFE0
 10072                           indf2	equ	0xFDF
 10073                           postinc2	equ	0xFDE
 10074                           postdec2	equ	0xFDD
 10075                           plusw2	equ	0xFDB
 10076                           fsr2h	equ	0xFDA
 10077                           fsr2l	equ	0xFD9
 10078                           status	equ	0xFD8
 10079                           pclatu	equ	0xFFB
 10080                           pclath	equ	0xFFA
 10081                           tblptru	equ	0xFF8
 10082                           tblptrh	equ	0xFF7
 10083                           tblptrl	equ	0xFF6
 10084                           tablat	equ	0xFF5
 10085                           prodh	equ	0xFF4
 10086                           prodl	equ	0xFF3
 10087                           intcon	equ	0xFF2
 10088                           indf0	equ	0xFEF
 10089                           postinc0	equ	0xFEE
 10090                           fsr0h	equ	0xFEA
 10091                           fsr0l	equ	0xFE9
 10092                           wreg	equ	0xFE8
 10093                           indf1	equ	0xFE7
 10094                           fsr1h	equ	0xFE2
 10095                           fsr1l	equ	0xFE1
 10096                           bsr	equ	0xFE0
 10097                           indf2	equ	0xFDF
 10098                           postinc2	equ	0xFDE
 10099                           postdec2	equ	0xFDD
 10100                           plusw2	equ	0xFDB
 10101                           fsr2h	equ	0xFDA
 10102                           fsr2l	equ	0xFD9
 10103                           status	equ	0xFD8
 10104                           
 10105                           	psect	rparam
 10106  0000                     pclatu	equ	0xFFB
 10107                           pclath	equ	0xFFA
 10108                           tblptru	equ	0xFF8
 10109                           tblptrh	equ	0xFF7
 10110                           tblptrl	equ	0xFF6
 10111                           tablat	equ	0xFF5
 10112                           prodh	equ	0xFF4
 10113                           prodl	equ	0xFF3
 10114                           intcon	equ	0xFF2
 10115                           indf0	equ	0xFEF
 10116                           postinc0	equ	0xFEE
 10117                           fsr0h	equ	0xFEA
 10118                           fsr0l	equ	0xFE9
 10119                           wreg	equ	0xFE8
 10120                           indf1	equ	0xFE7
 10121                           fsr1h	equ	0xFE2
 10122                           fsr1l	equ	0xFE1
 10123                           bsr	equ	0xFE0
 10124                           indf2	equ	0xFDF
 10125                           postinc2	equ	0xFDE
 10126                           postdec2	equ	0xFDD
 10127                           plusw2	equ	0xFDB
 10128                           fsr2h	equ	0xFDA
 10129                           fsr2l	equ	0xFD9
 10130                           status	equ	0xFD8
 10131                           
 10132                           	psect	temp
 10133  00004C                     btemp:
 10134                           	opt stack 0
 10135  00004C                     	ds	1
 10136  0000                     int$flags	set	btemp
 10137                           pclatu	equ	0xFFB
 10138                           pclath	equ	0xFFA
 10139                           tblptru	equ	0xFF8
 10140                           tblptrh	equ	0xFF7
 10141                           tblptrl	equ	0xFF6
 10142                           tablat	equ	0xFF5
 10143                           prodh	equ	0xFF4
 10144                           prodl	equ	0xFF3
 10145                           intcon	equ	0xFF2
 10146                           indf0	equ	0xFEF
 10147                           postinc0	equ	0xFEE
 10148                           fsr0h	equ	0xFEA
 10149                           fsr0l	equ	0xFE9
 10150                           wreg	equ	0xFE8
 10151                           indf1	equ	0xFE7
 10152                           fsr1h	equ	0xFE2
 10153                           fsr1l	equ	0xFE1
 10154                           bsr	equ	0xFE0
 10155                           indf2	equ	0xFDF
 10156                           postinc2	equ	0xFDE
 10157                           postdec2	equ	0xFDD
 10158                           plusw2	equ	0xFDB
 10159                           fsr2h	equ	0xFDA
 10160                           fsr2l	equ	0xFD9
 10161                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    192
    Data        0
    BSS         83
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      75
    BANK0           160     30      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          224      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 3
		 -> hid_report_in(BANK0[3]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    S1688$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S1678$wRam	PTR unsigned short  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(2) Largest target is 0

    S1678$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1636$wRom	PTR const unsigned short  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(2) Largest target is 0

    S1636$wRam	PTR unsigned short  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(2) Largest target is 0

    S1636$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1636$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 34
		 -> configDescriptor1(CODE[34]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    lastTransmission	PTR volatile void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    LCDWriteLine@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[15]), LCDScroll@str(COMRAM[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _YourHighPriorityISRCode in COMRAM

    _YourHighPriorityISRCode->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCBInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _YourLowPriorityISRCode in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_LCDWriteLine
    _ProcessIO->_Emulate_Mouse
    _Emulate_Mouse->___awdiv
    ___awdiv->_ReadPot
    _LCDWriteLine->_LCDSetPos
    _LCDWriteData->_LCDWriteByte
    _LCDSetPos->_LCDCommand
    _LCDCommand->_LCDWriteByte
    _InitializeSystem->_USBDeviceInit
    _USBDeviceInit->_memset
    _LCDInit->_LCDInitCommand
    _LCDInitPort->_WriteRegister
    _LCDInitCommand->_LCDWriteByte
    _LCDWriteByte->_WriteRegister

Critical Paths under _YourHighPriorityISRCode in BANK0

    None.

Critical Paths under _YourLowPriorityISRCode in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _YourHighPriorityISRCode in BANK1

    None.

Critical Paths under _YourLowPriorityISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _YourHighPriorityISRCode in BANK2

    None.

Critical Paths under _YourLowPriorityISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _YourHighPriorityISRCode in BANK3

    None.

Critical Paths under _YourLowPriorityISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _YourHighPriorityISRCode in BANK4

    None.

Critical Paths under _YourLowPriorityISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _YourHighPriorityISRCode in BANK5

    None.

Critical Paths under _YourLowPriorityISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _YourHighPriorityISRCode in BANK6

    None.

Critical Paths under _YourLowPriorityISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _YourHighPriorityISRCode in BANK7

    None.

Critical Paths under _YourLowPriorityISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _YourHighPriorityISRCode in BANK8

    None.

Critical Paths under _YourLowPriorityISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _YourHighPriorityISRCode in BANK9

    None.

Critical Paths under _YourLowPriorityISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _YourHighPriorityISRCode in BANK10

    None.

Critical Paths under _YourLowPriorityISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _YourHighPriorityISRCode in BANK11

    None.

Critical Paths under _YourLowPriorityISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _YourHighPriorityISRCode in BANK12

    None.

Critical Paths under _YourLowPriorityISRCode in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _YourHighPriorityISRCode in BANK13

    None.

Critical Paths under _YourLowPriorityISRCode in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _YourHighPriorityISRCode in BANK14

    None.

Critical Paths under _YourLowPriorityISRCode in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8176
                   _InitializeSystem
                       _LCDWriteLine
                          _ProcessIO
                    _USBDeviceAttach
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            0     0      0    1435
                     _BlinkUSBStatus
                      _Emulate_Mouse
 ---------------------------------------------------------------------------------
 (2) _Emulate_Mouse                                        3     3      0    1435
                                             24 BANK0      3     3      0
                            _ReadPot
               _USBTransferOnePacket
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     834
                                             16 BANK0      8     4      4
                            _ReadPot (ARG)
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 7     3      4     577
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ReadPot                                              2     0      2       0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _BlinkUSBStatus                                       1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteLine                                         3     0      3    3828
                                             27 BANK0      3     0      3
                          _LCDSetPos
                       _LCDWriteData
 ---------------------------------------------------------------------------------
 (2) _LCDWriteData                                         1     1      0    1068
                                             19 BANK0      1     1      0
                       _LCDWriteByte
                         _shortDelay
                               _wait
 ---------------------------------------------------------------------------------
 (2) _LCDSetPos                                            7     3      4    2025
                                             20 BANK0      7     3      4
                         _LCDCommand
                      _calculateBase
 ---------------------------------------------------------------------------------
 (3) _calculateBase                                        2     2      0      90
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCDCommand                                           1     1      0    1068
                                             19 BANK0      1     1      0
                       _LCDWriteByte
                         _shortDelay
                               _wait
 ---------------------------------------------------------------------------------
 (3) _wait                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _shortDelay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     2     2      0    2913
                                             23 BANK0      2     2      0
                            _LCDInit
                      _USBDeviceInit
                           _UserInit
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1132
                                             22 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     930
                                             14 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              2     2      0    1758
                                             20 BANK0      2     2      0
                     _LCDInitCommand
                        _LCDInitPort
 ---------------------------------------------------------------------------------
 (3) _LCDInitPort                                          0     0      0     667
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (3) _LCDInitCommand                                       1     1      0    1068
                                             19 BANK0      1     1      0
                       _LCDWriteByte
 ---------------------------------------------------------------------------------
 (3) _LCDWriteByte                                         3     2      1    1046
                                             16 BANK0      3     2      1
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (4) _WriteRegister                                        2     1      1     667
                                             14 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _YourLowPriorityISRCode                              17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _YourHighPriorityISRCode                             14    14      0   25302
                                              0 BANK0     14    14      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (8) _USBDeviceTasks                                       1     1      0   25302
                                             46 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (9) i2_USBDeviceInit                                      1     1      0     610
                                             25 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) _USBWakeFromSuspend                                   0     0      0    3336
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBSuspend                                           0     0      0    3336
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStallHandler                                      1     1      0       0
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPService                                     3     3      0   14638
                                             43 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfSetupHandler                              0     0      0   14341
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCheckStdRequest                                  0     0      0   10913
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStdSetCfgHandler                                 1     1      0    3834
                                             37 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (10) i2_memset                                            8     2      6     408
                                             17 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (12) _USBStdGetStatusHandler                              3     3      0      46
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (12) _USBStdGetDscHandler                                 2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _USBStdFeatureReqHandler                             6     6      0    3697
                                             37 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3336
                                             29 COMRAM     8     2      6
                 _USBCBCheckOtherReq
                  _USBCBErrorHandler
                        _USBCBInitEP
              _USBCBStdSetDscHandler
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
 ---------------------------------------------------------------------------------
 (10) _USBCB_SOF_Handler                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _USBCBWakeFromSuspend                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _USBCBSuspend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _USBCBStdSetDscHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _USBCBInitEP                                         0     0      0     644
                  _USBEnableEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBEnableEndpoint                                   4     3      1     644
                                             25 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (12) _USBConfigureEndpoint                                8     7      1     400
                                             17 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (10) _USBCBErrorHandler                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _USBCBCheckOtherReq                                  0     0      0       0
                 _USBCheckHIDRequest
 ---------------------------------------------------------------------------------
 (11) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfRxService                                 4     4      0     114
                                             17 COMRAM     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfInHandler                                 1     1      0     115
                                             20 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfTxService                                 3     3      0      92
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitializeSystem
     _LCDInit
       _LCDInitCommand
         _LCDWriteByte
           _WriteRegister
       _LCDInitPort
         _WriteRegister
     _USBDeviceInit
       _memset
     _UserInit
   _LCDWriteLine
     _LCDSetPos
       _LCDCommand
         _LCDWriteByte
           _WriteRegister
         _shortDelay
         _wait
       _calculateBase
     _LCDWriteData
       _LCDWriteByte
         _WriteRegister
       _shortDelay
       _wait
   _ProcessIO
     _BlinkUSBStatus
     _Emulate_Mouse
       _ReadPot
       _USBTransferOnePacket
       ___awdiv
         _ReadPot (ARG)
   _USBDeviceAttach

 _YourLowPriorityISRCode (ROOT)

 _YourHighPriorityISRCode (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBCheckOtherReq
                 _USBCheckHIDRequest
               _USBCBErrorHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
               _USBCBStdSetDscHandler
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBCheckOtherReq
                 _USBCheckHIDRequest
               _USBCBErrorHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
               _USBCBStdSetDscHandler
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCBCheckOtherReq
               _USBCheckHIDRequest
             _USBCBErrorHandler
             _USBCBInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
             _USBCBStdSetDscHandler
             _USBCBSuspend
             _USBCBWakeFromSuspend
             _USBCB_SOF_Handler
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCBCheckOtherReq
             _USBCheckHIDRequest
           _USBCBErrorHandler
           _USBCBInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
           _USBCBStdSetDscHandler
           _USBCBSuspend
           _USBCBWakeFromSuspend
           _USBCB_SOF_Handler
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBCheckOtherReq
           _USBCheckHIDRequest
         _USBCBErrorHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
         _USBCBStdSetDscHandler
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBCheckOtherReq
           _USBCheckHIDRequest
         _USBCBErrorHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
         _USBCBStdSetDscHandler
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCBCheckOtherReq
         _USBCheckHIDRequest
       _USBCBErrorHandler
       _USBCBInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
       _USBCBStdSetDscHandler
       _USBCBSuspend
       _USBCBWakeFromSuspend
       _USBCB_SOF_Handler
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0       0      36        0.0%
BIGRAMh            190      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           E0      0       0      31        0.0%
BANK13              E0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      55       5       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      4B       1       79.8%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A0       8        0.0%
DATA                 0      0      A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Apr 10 18:19:15 2017

                            ?_LCDInitPort 0001                                _USB_SD_Ptr 0F01  
                          _BlinkUSBStatus 1D2A                                        l95 2820  
                            ___awdiv@sign 00AC                                        bsr 000FE0  
                           _USBDeviceInit 13E4                        _USBCheckHIDRequest 1B3A  
                            __CFG_CP0$OFF 000000      USER_USB_CALLBACK_EVENT_HANDLER@event 001E  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0020                                       l322 2C4E  
             __end_of_USBStdGetDscHandler 1912                                       l182 2BBC  
                                     l343 1D70                                       l176 2BA8  
                                     l179 2BB2                                       l359 1E18  
                                     l617 2A34                                       l618 2A32  
                                     l556 145A                                       _BDT 000D00  
                                     _UIE 000F36                                       _UIR 000F62  
                              _USBSuspend 2B1C                      USBStdSetCfgHandler@i 0026  
                                     prod 000FF3                           ?_LCDInitCommand 0001  
                                     wreg 000FE8                            _USBDeviceTasks 1544  
                     ?_USBCheckHIDRequest 0001                 ??_YourHighPriorityISRCode 0097  
                          _USBDeviceState 0083                    ??_USBCBWakeFromSuspend 0012  
                   ??_USBCtrlTrfRxService 0012                  __size_ofi2_USBDeviceInit 0142  
                USBEnableEndpoint@options 001A                           __end_of_LCDInit 28DC  
                                    l4000 1368                                      l4004 139A  
                                    l4006 13A4                USBConfigureEndpoint@handle 0018  
                                    l3440 2946                                      l4320 29D4  
                                    l4152 191C                                      l3610 2B8A  
                                    l4170 19FE                                      l4162 1970  
                                    l4154 1934                                      l3612 2B98  
                                    l4172 1A04                                      l4166 19C0  
                                    l3630 21E2                                      l3622 21AE  
                                    l4168 19D8                                      l3640 223C  
                                    l3652 2AD2                                      l3804 27DE  
                                    l3740 228E                                      l3806 27F4  
                                    l3750 22BE                                      l3734 2278  
                                    l3648 2AC0                                      l3920 1D82  
                                    l3904 1D3A                                      l3746 22AC  
                                    l3762 22FC                                      l4474 2BE4  
                                    l3852 143A                                      l3940 1DE2  
                                    l3932 1DB0                                      l3924 1D90  
                                    l3916 1D74                                      l3748 22B8  
                                    l3766 2310                                      l3758 22EE  
                                    l3880 14AA                                      l3864 1468  
                                    l3872 1480                                      l3848 1430  
                                    l3928 1DA0                                      l3970 12A2  
                                    l3876 14A0                                      l3980 12C6  
                                    l3964 1286                                      l3886 1510  
                                    l3958 126C                                      l3992 1318  
                                    l3984 12CE                                      l3976 12BE  
                                    l3996 1334                                      l3988 12E6  
                                    STR_1 0FC1                                      u3200 1D58  
                                    _LATE 000F8D                                      u3330 1E00  
                                    u3218 1D5C                                      u3308 1DD2  
                                    u3510 138A                                      u3290 1DCE  
                                    u4307 2892                                      u3348 1E04  
                                    u4317 28A6                                      u3710 1992  
                                    u3518 138E                                      u4327 28B2  
                                    u4337 28C4                                      u3730 19BA  
                                    u4347 28D6                                      u3717 1988  
                                    u3750 19FA                                      u3760 1A26  
                                    u3680 1956                                      u4297 2C94  
                                    u3737 19B0                                      u3757 19F0  
                                    u3767 1A1C                                      u3687 194C  
                   ??_USBCtrlTrfTxService 0012                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      _UEIR 000F63  
                                    _UCON 000F65                            ?_Emulate_Mouse 0001  
  USBStdFeatureReqHandler@current_ep_data 0029                                      _pDst 0038  
                                    _main 2BC6                                      _wait 2CA0  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                           _USBDeviceAttach 2A04  
                                    btemp 004C                                      pclat 000FFA  
                      __size_of_LCDSetPos 0066                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00A6  
                 BlinkUSBStatus@led_count 0030                             __CFG_IESO$OFF 000000  
                      _USBCBCheckOtherReq 2C9A                      ??_USBCheckHIDRequest 0012  
              __end_of_USBCheckStdRequest 1D2A                    ??_USBCtrlTrfOutHandler 0016  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0026  
                  __end_of_BlinkUSBStatus 1E1C                           __end_of_ReadPot 2C5C  
                ??_USBStdGetStatusHandler 0012                            ?_USBDeviceInit 0001  
                           ?_LCDWriteData 0001                       ?_USBCBCheckOtherReq 0001  
                           ?_LCDWriteByte 00A7                             ?_LCDWriteLine 00B2  
                           __CFG_PLLDIV$3 000000                                     ?_main 0001  
                         __end_of___awdiv 231A                                     _ADRES 000FC3  
                                   ?_wait 0001         __size_of_USBCtrlEPServiceComplete 00D0  
                         ___awdiv@divisor 00A9                    __end_of_USBDeviceTasks 1692  
               ?_USBCtrlEPServiceComplete 0001                                     i2l703 2328  
                                   i2l801 11B8                                     i2l706 23BA  
                                   i2l642 2054                                     i2l707 233C  
                                   i2l708 2342                                     i2l556 16F8  
                                   i2l580 1628                                     i2l568 1578  
                                   i2l753 2512                                     i2l578 1616  
                                   i2l579 168E                                     i2l782 0FFC  
                                   i2l767 1C46                                     i2l776 1CAC  
                                   _UADDR 000F38                           ___awdiv@counter 00AB  
                                   _RPOR2 000EC2                                     _RPOR4 000EC4  
                                   _TRISE 000F96                                     _USTAT 000F64  
                  __size_of_WriteRegister 0028        __size_of_USBCtrlEPAllowStatusStage 00AC  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 26CA  
                                   _sd000 0FBD                                     _sd001 0F09  
                                   _sd002 0F91                       __size_of_LCDCommand 001C  
                              i2memset@p1 0012                                     _state 0080  
                    ??_USBCBCheckOtherReq 0012                                     tablat 000FF5  
                                   plusw2 000FDB                                     status 000FD8  
                       __CFG_DSWDTPS$8192 000000                          __end_ofi2_memset 2B74  
         __end_of_YourHighPriorityISRCode 27BC                   __CFG_DSWDTOSC$INTOSCREF 000000  
            __size_of_USBStdSetCfgHandler 00E6                           __initialization 2BEA  
                         ?_BlinkUSBStatus 0001                              LCDSetPos@col 00AD  
                            LCDSetPos@pos 00B0                              LCDSetPos@row 00AB  
                            __end_of_main 2BEA                              __end_of_wait 2CA2  
                          ??_LCDWriteData 00AA                            ??_LCDWriteByte 00A8  
                          ??_LCDWriteLine 00B5                            __CFG_OSC$HSPLL 000000  
               __size_of_USBCtrlEPService 00CE                                    ??_main 00B5  
                                  ??_wait 00A5                 __size_of_InitializeSystem 0046  
                           __activetblptr 000003                           ?_USBDeviceTasks 0001  
                       __end_of_LCDSetPos 2822                                 ??_LCDInit 00AB  
                             ?_USBSuspend 0001                          __end_of_UserInit 29BE  
                 __end_of_USBDeviceAttach 2A40                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                           ??_Emulate_Mouse 00AF  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 00A7  
                                  _GODONE 007E11                                    i2l3102 1C00  
                                  i2l3200 2B52                                    i2l3114 2A50  
                                  i2l3130 26D2                                    i2l3108 1C0C  
                                  i2l3140 26F0                                    i2l3132 26D8  
                                  i2l3300 17E6                                    i2l3204 2B62  
                                  i2l4020 2B14                                    i2l4100 16DC  
                                  i2l3070 1B76                                    i2l3046 2584  
                                  i2l3118 2A5E                                    i2l3134 26DE  
                                  i2l3310 1890                                    i2l4022 2B16  
                                  i2l3224 2414                                    i2l3072 1B7E  
                                  i2l3064 1B5A                                    i2l3080 1B96  
                                  i2l3136 26E4                                    i2l3128 26CC  
                                  i2l3144 26F6                                    i2l3400 1144  
                                  i2l3304 17FE                                    i2l4112 1706  
                                  i2l4120 171E                                    i2l3082 1BA8  
                                  i2l3138 26EA                                    i2l3402 1152  
                                  i2l3322 18FA                                    i2l4042 2AAE  
                                  i2l3164 1E3E                                    i2l3092 1BD6  
                                  i2l3412 1198                                    i2l3316 18EA  
                                  i2l3252 26A2                                    i2l4060 2112  
                                  i2l4044 2AB2                                    i2l4124 173C  
                                  i2l4300 164E                                    i2l4220 1560  
                                  i2l3086 1BB8                                    i2l3430 1226  
                                  i2l3422 11D4                                    i2l3414 11A4  
                                  i2l3318 18F2                                    i2l3334 2362  
                                  i2l3270 1F56                                    i2l4134 17A0  
                          __CFG_WDTEN$OFF 000000                                    i2l3168 1E48  
                                  i2l3512 1A9A                                    i2l3096 1BE2  
                                  i2l3344 23A2                                    i2l3248 2686  
                                  i2l4072 2160                                    i2l4064 211A  
                                  i2l4128 1744                                    i2l3178 1E8C  
                                  i2l3186 1EC4                                    i2l3522 1AEC  
                                  i2l3506 1A76                                    i2l3362 0FF8  
                                  i2l3266 1F4E                                    i2l4306 166E  
                                  i2l4250 15A0                                    i2l4242 1590  
                                  i2l3188 1ECC                                    i2l3196 1F04  
                                  i2l3524 1AFA                                    i2l3428 121A  
                                  i2l3292 1FCE                                    i2l3276 1F82  
                                  i2l3540 1C52                                    i2l4076 217A  
                                  i2l4308 168A                                    i2l4228 1570  
                                  i2l3382 10B8                                    i2l3542 1C58  
                                  i2l3462 2016                                    i2l4078 2180  
                                  i2l3720 2504                                    i2l3704 24B4  
                                  i2l3384 10BA                                    i2l3376 1074  
                                  i2l3552 1C7A                                    i2l3544 1C5E  
                                  i2l3480 207A                                    i2l4096 16D4  
                                  i2l4280 160A                                    i2l4272 15E2  
                                  i2l4256 15C6                                    i2l3706 24BA  
                                  i2l3554 1C80                                    i2l3570 1CE6  
                                  i2l4266 15D6                                    i2l3724 251C  
                                  i2l3716 24F0                                    i2l3388 10D6  
                                  i2l3556 1C86                                    i2l4606 270E  
                                  i2l3398 1128                                    i2l3566 1CC8  
                                  i2l4286 1620                                    i2l4608 2742  
                                  i2l3690 2926                                    i2l3684 28EA  
                                  _SSP2IF 007D27                            __CFG_WPCFG$OFF 000000  
                       ??i2_USBDeviceInit 001A                            __CFG_WPDIS$OFF 000000  
                               ??_ReadPot 00A7                             _WriteRegister 2B9E  
                       _shortPacketStatus 0046                            __CFG_XINST$OFF 000000  
                         USBDeviceTasks@i 002F               USBStdFeatureReqHandler@pUEP 0027  
                USBTransferOnePacket@data 00A6                USBCtrlTrfInHandler@lastDTS 0015  
                         ??_USBDeviceInit 00AD                                 ??___awdiv 00AB  
                          __CFG_STVREN$ON 000000                              ?_USBCBInitEP 0001  
                                  _buffer 0077                         _USBEnableEndpoint 2A40  
         __size_of_USBStdGetStatusHandler 00BE                                    _memset 2AB6  
                                  clear_0 2BF0                                    clear_1 2BFC  
                    __size_of_LCDInitPort 005E                          ___awdiv@quotient 00AD  
                      ?_USBEnableEndpoint 001A                     _USBCBStdSetDscHandler 2CA8  
           __size_of_USBTransferOnePacket 00CC                        __size_of_ProcessIO 0016  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                     ??_USBEnableEndpoint 001B                  ??_YourLowPriorityISRCode 0001  
                             _CtrlTrfData 0084                      _controlTransferState 0042  
                              __accesstop 0060                   __end_of__initialization 2C02  
                          ?_WriteRegister 00A5                             ___rparam_used 000001  
                __size_of_USBStallHandler 003A                              ??_LCDCommand 00AA  
                     __size_of_USBSuspend 002C                          WriteRegister@reg 00A6  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 2A7C  
                           __end_of_sd000 0FC1                             __end_of_sd001 0F3D  
                           __end_of_sd002 0FAB                         _USBCB_SOF_Handler 2CA2  
        __size_of_USBCtrlEPAllowDataStage 0086                           _active_protocol 004A  
           __size_of_USBConfigureEndpoint 0094               __end_of_USBCtrlTrfInHandler 2522  
                        ??_LCDInitCommand 00AA                        ?_USBCB_SOF_Handler 0001  
                               ?i2_memset 0012                       ??_USBCB_SOF_Handler 0012  
                ??_USBCtrlTrfSetupHandler 002C                        __end_of_LCDCommand 2C44  
                        ?_USBDeviceAttach 0001                    _USBStdGetStatusHandler 231A  
                    __end_of_LCDWriteData 2C28                                __pbssBANK0 0060  
                    __end_of_LCDWriteByte 2976                      __end_of_LCDWriteLine 1A2E  
                          WriteRegister@b 00A5               __size_of_USBWakeFromSuspend 0032  
                             _pBDTEntryIn 006F                         __end_of_ProcessIO 2C72  
        __end_of_USBCtrlEPServiceComplete 20C2                 __end_of_USBCB_SOF_Handler 2CA4  
                   LCDInitCommand@command 00AA                      USBCtrlTrfRxService@i 0014  
                               ?_UserInit 0001                                   ?_memset 00A5  
                  ?_USBCBStdSetDscHandler 0001                                _device_dsc 0FAB  
                        _USBCtrlEPService 20C2                                _ep_data_in 007A  
                        _InitializeSystem 29BE               __end_of_USBCtrlTrfRxService 1B3A  
                  __size_of_calculateBase 002A                        _USBCheckStdRequest 1C36  
                       _configDescriptor1 0F6F                                   _LCDInit 2880  
                              ??i2_memset 0018               __end_of_USBCtrlTrfTxService 1F0C  
                     _USBStdSetCfgHandler 1F0C                                   _SSP2BUF 000F75  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 013E  
         __size_of_YourLowPriorityISRCode 008E                                   _UIEbits 000F36  
           __size_of_USBCBWakeFromSuspend 0002                                   _UIRbits 000F62  
                         ??_WriteRegister 00A6                        LCDInit@functionSet 00AC  
                        ??_BlinkUSBStatus 00A5                                   _ReadPot 2C44  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 0001  
             __size_of_USBCheckHIDRequest 00FC                                   __Lparam 0000  
                       __end_of_hid_rpt01 0F6F                __size_of_USBEnableEndpoint 003C  
                    ??_USBCheckStdRequest 002C             __size_of_USBCtrlTrfOutHandler 0050  
                                 ___awdiv 225C                          ??_USBDeviceTasks 002F  
                       ??_USBStallHandler 0012                                ??_UserInit 00A5  
                            __psmallconst 0F00                                   __pcinit 2BEA  
                         __size_of_memset 0034                 __end_of_configDescriptor1 0F91  
                                 __ramtop 0F00                      __size_of_USBCBInitEP 000C  
                ?_YourHighPriorityISRCode 0001                                   __ptext0 2BC6  
                                 __ptext1 2A04                                   __ptext2 2C5C  
                                 __ptext3 124C                                   __ptext4 225C  
                                 __ptext5 2190                                   __ptext6 2C44  
                                 __ptext7 1D2A                                   __ptext8 1912  
                                 __ptext9 2C0C                                   _inPipes 0069  
             _USBDeferOUTDataStagePackets 003D                              ??_USBSuspend 0026  
                       _USBCBErrorHandler 2CAA                                   _old_sw2 0044  
                                 _old_sw3 0045                           i2_USBDeviceInit 1692  
                        i2USBDeviceInit@i 001A                        ?_USBCBErrorHandler 0001  
                           ?_USBCBSuspend 0001                                 _LCDSetPos 27BC  
                      __end_of_USB_CD_Ptr 0F09           __size_of_USBCtrlTrfSetupHandler 008E  
                          __pintcode_body 274C                      end_of_initialization 2C02  
             __size_of_USBCBCheckOtherReq 0006                        __end_of_USB_SD_Ptr 0F07  
                     _pBDTEntryEP0OutNext 0036                       ??_USBCBErrorHandler 0012  
                                 memset@c 00A7                                   memset@n 00A9  
                                 memset@p 00AB                                   int_func 274C  
                           LCDWriteData@c 00AA                             _calculateBase 2B74  
                ?_USBStdFeatureReqHandler 0001                             LCDWriteByte@c 00A8  
                   ??_USBStdSetCfgHandler 0026                __size_of_USBCB_SOF_Handler 0002  
                      __end_of_USBSuspend 2B48                   _USBCtrlEPAllowDataStage 2644  
                                 postdec2 000FDD                    _YourLowPriorityISRCode 0018  
                                 postinc0 000FEE                                   postinc2 000FDE  
                _USBCtrlEPServiceComplete 1FF2                _USBStatusStageEnabledFlag1 003F  
              _USBStatusStageEnabledFlag2 0040                        _Emulate_Mouse$1481 00B0  
                              _shortDelay 2C92                        USBEnableEndpoint@p 001B  
                               _PORTAbits 000F80                                 _PORTBbits 000F81  
               __end_of_USBCBErrorHandler 2CAC                          __CFG_DSBOREN$OFF 000000  
                        __CFG_CPUDIV$OSC1 000000                     __size_of_LCDWriteData 001C  
                   __size_of_LCDWriteByte 004A                     __size_of_LCDWriteLine 011C  
                               _TRISAbits 000F92                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                            ??_USBCBSuspend 0012  
                      _BothEP0OutUOWNsSet 003A                                ?_LCDSetPos 00AB  
               USBConfigureEndpoint@EPNum 0017                ?_USBCtrlEPAllowStatusStage 0001  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0022                                 _USTATcopy 0049  
                   __end_of_Emulate_Mouse 13E4                            ?_calculateBase 0001  
            __end_of_USBTransferOnePacket 225C                          __CFG_IOL1WAY$OFF 000000  
                       __CFG_WPEND$PAGE_0 000000                       __CFG_MSSP7B_EN$MSK7 000000  
                           ??_LCDInitPort 00A7                    _USBCtrlTrfSetupHandler 25B6  
                   __end_of_USBDeviceInit 1544                              _LCDWriteData 2C0C  
                            _LCDWriteByte 292C                              _LCDWriteLine 1912  
                 __end_ofi2_USBDeviceInit 17D4                                 i2memset@c 0014  
                               i2memset@n 0016                                 i2memset@p 0018  
                          __end_of_memset 2AEA                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 0082                       start_initialization 2BEA  
                 ?_USBStdGetStatusHandler 0001             USBCtrlTrfRxService@byteToRead 0015  
                       __size_ofi2_memset 002C              __end_of_USBConfigureEndpoint 25B6  
         __end_of_USBStdFeatureReqHandler 124C         __end_of_USBCtrlEPAllowStatusStage 2484  
                __end_of_USBCtrlEPService 2190                  __end_of_InitializeSystem 2A04  
               ??_USBCtrlEPAllowDataStage 0015                            USBDeviceInit@i 00AD  
                  _pBDTEntryEP0OutCurrent 0034                   USBTransferOnePacket@dir 00A5  
                 USBTransferOnePacket@len 00A8                   ??_USBCBStdSetDscHandler 0012  
                     _USBStdGetDscHandler 17D4                                 _ProcessIO 2C5C  
                       __CFG_ADCSEL$BIT10 000000                                  ??_memset 00AB  
                             ?_shortDelay 0001                __size_of_USBCBErrorHandler 0002  
                       __size_of_UserInit 0048                       __end_of_LCDInitPort 2880  
                  _USBActiveConfiguration 0047            __end_of_USBStdGetStatusHandler 23D8  
                                ?_LCDInit 0001                               __pbssCOMRAM 0030  
                           __pcstackBANK0 0097              __size_of_USBCtrlTrfInHandler 009E  
                             ??_LCDSetPos 00AF                      ?_USBStdGetDscHandler 0001  
                         ??_calculateBase 00A5                __end_of_USBWakeFromSuspend 2B1C  
                         _USBStallHandler 2A7C                          _lastTransmission 007E  
                            _pBDTEntryOut 0073                                  ?_ReadPot 00A5  
                __size_of_USBDeviceAttach 003C                                 __pintcode 0008  
                    __end_of_USBCBSuspend 2CA8              __end_of_USBCBWakeFromSuspend 2CA6  
                                ?___awdiv 00A7                                ?_ProcessIO 0001  
                        LCDWriteLine@line 00B4                                 _hid_rpt01 0F3D  
                             __pintcodelo 0018                                 _idle_rate 004B  
                        ?i2_USBDeviceInit 0001                USBCBSendResume@delay_count 0032  
                    _USBTransferOnePacket 2190                               __smallconst 0F00  
                       LCDCommand@command 00AA                      __CFG_RTCOSC$T1OSCREF 000000  
            __end_of_USBCtrlTrfOutHandler 292C                     ??_USBStdGetDscHandler 0012  
                             _ep_data_out 007C                   __size_of_LCDInitCommand 0014  
            __size_of_USBCtrlTrfRxService 010C             USBConfigureEndpoint@direction 0012  
        __size_of_YourHighPriorityISRCode 27B4              __size_of_USBCtrlTrfTxService 00F0  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                     __size_of_shortDelay 0008                                  _LATEbits 000F8D  
              __end_of_USBCheckHIDRequest 1C36                     __end_of_WriteRegister 2BC6  
              ??_USBCtrlEPServiceComplete 0015                                  _IPR2bits 000FA2  
                                _PIE2bits 000FA0                   ?_YourLowPriorityISRCode 0001  
                                i2u231_40 1EF6                                  i2u231_47 1EEC  
                                i2u250_40 18DE                                  i2u250_47 18D4  
                                i2u229_40 1EB6                                  i2u229_47 1EAC  
                                i2u247_40 1854                                  i2u247_47 184A  
                                i2u248_40 188A                                  i2u248_47 1880  
                                _PIR2bits 000FA1                 USBCtrlEPService@setup_cnt 002E  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _UEP0bits 000F26                _USBDeferINDataStagePackets 003C  
                             _LCDInitPort 2822                                  _SSP2CON1 000F72  
                           ??_USBCBInitEP 001E               __size_of_USBCheckStdRequest 00F4  
                                _UCONbits 000F65                      _USBConfigureEndpoint 2522  
        __size_of_USBStdFeatureReqHandler 027A                                _ADCON0bits 000FC2  
                   ?_USBTransferOnePacket 00A5                          __CFG_WPFP$PAGE_1 000000  
                            _RemoteWakeup 003B                          __size_of_LCDInit 005C  
                                i2_memset 2B48                         __CFG_CFGPLLEN$OFF 000000  
              __end_of_USBCBCheckOtherReq 2CA0                   __end_of_USBStallHandler 2AB6  
             ??_USBCtrlEPAllowStatusStage 0012               __end_of_USBStdSetCfgHandler 1FF2  
          __end_of_YourLowPriorityISRCode 00A6                        __end_of_device_dsc 0FBD  
                 ?_USBCtrlTrfSetupHandler 0001                                _ANCON0bits 000F48  
                 USBStdGetStatusHandler@p 0013                                  __Hrparam 0000  
                    LCDWriteByte@comFlags 00A9                          __size_of_ReadPot 0018  
                                __Lrparam 0000                    USBTransferOnePacket@ep 00A9  
                                _SetupPkt 008C                               ??_ProcessIO 00B2  
                   ?_USBConfigureEndpoint 0012                         ??_USBDeviceAttach 00A5  
                                _UserInit 2976                          __size_of___awdiv 00BE  
                 __size_of_BlinkUSBStatus 00F2                       __end_of_USBCBInitEP 2C92  
                 __size_of_USBDeviceTasks 014E       InitializeSystem@pll_startup_counter 00AE  
                                __ptext10 27BC                                  __ptext11 2B74  
                                __ptext20 2822                                  __ptext12 2C28  
                                __ptext21 2C72                                  __ptext13 2CA0  
                                __ptext30 2A7C                                  __ptext22 292C  
                                __ptext14 2C92                                  __ptext31 20C2  
                                __ptext23 2B9E                                  __ptext15 29BE  
                                __ptext40 0FD2                                  __ptext32 25B6  
                                __ptext16 2976                                  __ptext41 26CA  
                                __ptext33 1FF2                                  __ptext17 13E4  
                                __ptext50 2C9A                                  __ptext42 2CA2  
                                __ptext34 2644                                  __ptext26 1544  
                                __ptext18 2AB6                                  __ptext51 1B3A  
                                __ptext43 2CA4                                  __ptext35 1C36  
                                __ptext27 1692                                  __ptext19 2880  
                                __ptext52 28DC                                  __ptext44 2CA6  
                                __ptext36 1F0C                                  __ptext28 2AEA  
                                __ptext53 1A2E                                  __ptext45 2CA8  
                                __ptext37 2B48                                  __ptext29 2B1C  
                                __ptext54 23D8                                  __ptext46 2C86  
                                __ptext38 231A                                  __ptext55 2484  
                                __ptext47 2A40                                  __ptext39 17D4  
                                __ptext56 1E1C                                  __ptext48 2522  
                                __ptext49 2CAA                           LCDWriteLine@str 00B2  
                    _USBCBWakeFromSuspend 2CA4            __end_of_USBCtrlTrfSetupHandler 2644  
                           __size_of_main 0024                         ?_USBCtrlEPService 0001  
                           __size_of_wait 0002                     __size_of_USBCBSuspend 0002  
                       ?_InitializeSystem 0001                        ??_USBCtrlEPService 002C  
                              _LCDCommand 2C28                       _USBCtrlTrfInHandler 2484  
                      ??_InitializeSystem 00AE                         calculateBase@base 00A5  
                                _outPipes 0060                         calculateBase@line 00A6  
                    _USBCtrlTrfOutHandler 28DC                                  int$flags 004C  
               _USBCtrlEPAllowStatusStage 23D8            __size_of_USBCBStdSetDscHandler 0002  
           __end_of_USBCBStdSetDscHandler 2CAA                    ??_USBTransferOnePacket 00A9  
                            ??_shortDelay 00A5                              _SSP2STATbits 000F73  
                  __size_of_Emulate_Mouse 0198                             _hid_report_in 0094  
               _USBDeferStatusStagePacket 003E                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ?_USBCtrlTrfInHandler 0001  
           USBCtrlTrfTxService@byteToSend 0014                            _LCDInitCommand 2C72  
                                memset@p1 00A5                              _USBCBSuspend 2CA6  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 002A  
                   ?_USBCBWakeFromSuspend 0001                   _YourHighPriorityISRCode 0008  
                                intlevel1 0000                                  intlevel2 0000  
                  __size_of_USBDeviceInit 0160   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 274C  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0082         ??_USER_USB_CALLBACK_EVENT_HANDLER 0024  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 001E           _USER_USB_CALLBACK_EVENT_HANDLER 26CA  
                          LCDWriteByte@rs 00A7                        __end_of_shortDelay 2C9A  
                              _OSCCONbits 000FD3                    ??_USBConfigureEndpoint 0013  
                   ?_USBCtrlTrfOutHandler 0001                       _USBCtrlTrfRxService 1A2E  
                             _USBCBInitEP 2C86                        _USBWakeFromSuspend 2AEA  
                 _USBStdFeatureReqHandler 0FD2                       _USBCtrlTrfTxService 1E1C  
                     ?_USBWakeFromSuspend 0001                                _PPSCONbits 000EBF  
                   ??_USBCtrlTrfInHandler 0015                    __end_of_LCDInitCommand 2C86  
                   _USBAlternateInterface 0048                       USBEnableEndpoint@ep 001D  
                         _endpoint_number 0043                      ?_USBCtrlTrfRxService 0001  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
                   __end_of_calculateBase 2B9E                             _Emulate_Mouse 124C  
            _USBStatusStageTimeoutCounter 0041                      ??_USBWakeFromSuspend 0026  
              USBTransferOnePacket@handle 00AA                                _USB_CD_Ptr 0F07  
                             ?_LCDCommand 0001  
