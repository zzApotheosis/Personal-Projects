

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Jan 30 18:23:58 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  000494                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _txStr
    40  000494  48                 	db	72
    41  000495  65                 	db	101
    42  000496  6C                 	db	108
    43  000497  6C                 	db	108
    44  000498  6F                 	db	111
    45  000499  20                 	db	32
    46  00049A  57                 	db	87
    47  00049B  6F                 	db	111
    48  00049C  72                 	db	114
    49  00049D  6C                 	db	108
    50  00049E  64                 	db	100
    51  00049F  0A                 	db	10
    52  0004A0  00                 	db	0
    53  0000                     _BAUDCON1bits	set	3966
    54  0000                     _INTCONbits	set	4082
    55  0000                     _LATAbits	set	3977
    56  0000                     _LATD	set	3980
    57  0000                     _LATDbits	set	3980
    58  0000                     _OSCTUNEbits	set	3995
    59  0000                     _PIR1bits	set	3998
    60  0000                     _RCONbits	set	4048
    61  0000                     _RCREG1	set	4015
    62  0000                     _RCSTA1bits	set	4012
    63  0000                     _SPBRG1	set	4016
    64  0000                     _SPBRGH1	set	3967
    65  0000                     _SSPBUF	set	4041
    66  0000                     _SSPCON1	set	4038
    67  0000                     _SSPSTATbits	set	4039
    68  0000                     _TRISAbits	set	3986
    69  0000                     _TRISBbits	set	3987
    70  0000                     _TRISC	set	3988
    71  0000                     _TRISCbits	set	3988
    72  0000                     _TRISD	set	3989
    73  0000                     _TXREG1	set	4014
    74  0000                     _TXSTA1bits	set	4013
    75  0000                     _SSPIF	set	31987
    76                           
    77                           ; #config settings
    78  0000                     
    79                           	psect	cinit
    80  00037C                     __pcinit:
    81                           	opt stack 0
    82  00037C                     start_initialization:
    83                           	opt stack 0
    84  00037C                     __initialization:
    85                           	opt stack 0
    86                           
    87                           ; Clear objects allocated to COMRAM (41 bytes)
    88  00037C  EE00  F001         	lfsr	0,__pbssCOMRAM
    89  000380  0E29               	movlw	41
    90  000382                     clear_0:
    91  000382  6AEE               	clrf	postinc0,c
    92  000384  06E8               	decf	wreg,f,c
    93  000386  E1FD               	bnz	clear_0
    94                           
    95                           ; Initialize objects allocated to COMRAM (13 bytes)
    96                           ; load TBLPTR registers with __pidataCOMRAM
    97  000388  0E94               	movlw	low __pidataCOMRAM
    98  00038A  6EF6               	movwf	tblptrl,c
    99  00038C  0E04               	movlw	high __pidataCOMRAM
   100  00038E  6EF7               	movwf	tblptrh,c
   101  000390  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   102  000392  6EF8               	movwf	tblptru,c
   103  000394  EE00  F044         	lfsr	0,__pdataCOMRAM
   104  000398  EE10 F00D          	lfsr	1,13
   105  00039C                     copy_data0:
   106  00039C  0009               	tblrd		*+
   107  00039E  CFF5 FFEE          	movff	tablat,postinc0
   108  0003A2  50E5               	movf	postdec1,w,c
   109  0003A4  50E1               	movf	fsr1l,w,c
   110  0003A6  E1FA               	bnz	copy_data0
   111  0003A8                     end_of_initialization:
   112                           	opt stack 0
   113  0003A8                     __end_of__initialization:
   114                           	opt stack 0
   115  0003A8  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   116  0003AA  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   117  0003AC  0100               	movlb	0
   118  0003AE  EF5A  F000         	goto	_main	;jump to C main() function
   119                           tblptru	equ	0xFF8
   120                           tblptrh	equ	0xFF7
   121                           tblptrl	equ	0xFF6
   122                           tablat	equ	0xFF5
   123                           postinc0	equ	0xFEE
   124                           wreg	equ	0xFE8
   125                           postdec1	equ	0xFE5
   126                           fsr1l	equ	0xFE1
   127                           
   128                           	psect	bssCOMRAM
   129  000001                     __pbssCOMRAM:
   130                           	opt stack 0
   131  000001                     _string:
   132                           	opt stack 0
   133  000001                     	ds	17
   134  000012                     _rxCount:
   135                           	opt stack 0
   136  000012                     	ds	2
   137  000014                     _txCount:
   138                           	opt stack 0
   139  000014                     	ds	2
   140  000016                     _rxBuffer:
   141                           	opt stack 0
   142  000016                     	ds	20
   143                           tblptru	equ	0xFF8
   144                           tblptrh	equ	0xFF7
   145                           tblptrl	equ	0xFF6
   146                           tablat	equ	0xFF5
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           postdec1	equ	0xFE5
   150                           fsr1l	equ	0xFE1
   151                           
   152                           	psect	dataCOMRAM
   153  000044                     __pdataCOMRAM:
   154                           	opt stack 0
   155  000044                     _txStr:
   156                           	opt stack 0
   157  000044                     	ds	13
   158                           tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           tblptrl	equ	0xFF6
   161                           tablat	equ	0xFF5
   162                           postinc0	equ	0xFEE
   163                           wreg	equ	0xFE8
   164                           postdec1	equ	0xFE5
   165                           fsr1l	equ	0xFE1
   166                           
   167                           	psect	cstackBANK0
   168  000060                     __pcstackBANK0:
   169                           	opt stack 0
   170  000060                     LCDSetPos@pos:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x0
   174  000060                     	ds	2
   175  000062                     LCDClearLine@c:
   176                           	opt stack 0
   177  000062                     LCDWriteLine@str:
   178                           	opt stack 0
   179                           
   180                           ; 2 bytes @ 0x2
   181  000062                     	ds	1
   182  000063                     LCDClearLine@line:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x3
   186  000063                     	ds	1
   187  000064                     LCDWriteLine@line:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x4
   191  000064                     	ds	1
   192  000065                     
   193                           ; 0 bytes @ 0x5
   194  000065                     	ds	1
   195  000066                     main@temp:
   196                           	opt stack 0
   197                           
   198                           ; 1 bytes @ 0x6
   199  000066                     	ds	1
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           postdec1	equ	0xFE5
   207                           fsr1l	equ	0xFE1
   208                           
   209                           	psect	cstackCOMRAM
   210  00002A                     __pcstackCOMRAM:
   211                           	opt stack 0
   212  00002A                     ??_HighIsr:
   213  00002A                     
   214                           ; 1 bytes @ 0x0
   215  00002A                     	ds	14
   216  000038                     ??_longDelay:
   217  000038                     calculateBase@base:
   218                           	opt stack 0
   219  000038                     WriteRegister@b:
   220                           	opt stack 0
   221                           
   222                           ; 1 bytes @ 0xE
   223  000038                     	ds	1
   224  000039                     calculateBase@line:
   225                           	opt stack 0
   226  000039                     WriteRegister@reg:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0xF
   230  000039                     	ds	1
   231  00003A                     LCDWriteByte@rs:
   232                           	opt stack 0
   233                           
   234                           ; 1 bytes @ 0x10
   235  00003A                     	ds	1
   236  00003B                     LCDWriteByte@c:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x11
   240  00003B                     	ds	1
   241  00003C                     LCDWriteByte@comFlags:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x12
   245  00003C                     	ds	1
   246  00003D                     LCDCommand@command:
   247                           	opt stack 0
   248  00003D                     LCDInitCommand@command:
   249                           	opt stack 0
   250  00003D                     LCDWriteData@c:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x13
   254  00003D                     	ds	1
   255  00003E                     ??_LCDInit:
   256  00003E                     LCDSetPos@row:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x14
   260  00003E                     	ds	1
   261  00003F                     LCDInit@functionSet:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x15
   265  00003F                     	ds	1
   266  000040                     LCDSetPos@col:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x16
   270  000040                     	ds	2
   271  000042                     ??_LCDSetPos:
   272                           
   273                           ; 0 bytes @ 0x18
   274  000042                     	ds	1
   275  000043                     
   276                           ; 0 bytes @ 0x19
   277  000043                     	ds	1
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287 ;;
   288 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   289 ;;
   290 ;; *************** function _main *****************
   291 ;; Defined at:
   292 ;;		line 31 in file "usart.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  temp            1    6[BANK0 ] unsigned char 
   297 ;; Return value:  Size  Location     Type
   298 ;;		None               void
   299 ;; Registers used:
   300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;Total ram usage:        2 bytes
   311 ;; Hardware stack levels required when called:    6
   312 ;; This function calls:
   313 ;;		_ConfigInterrupts
   314 ;;		_ConfigPeriph
   315 ;;		_InitPins
   316 ;;		_LCDClear
   317 ;;		_LCDClearLine
   318 ;;		_LCDInit
   319 ;;		_LCDWriteLine
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text0
   326  0000B4                     __ptext0:
   327                           	opt stack 0
   328  0000B4                     _main:
   329                           	opt stack 25
   330                           
   331                           ;usart.c: 32: txCount = rxCount = 0;
   332                           
   333                           ;incstack = 0
   334  0000B4  0E00               	movlw	0
   335  0000B6  6E13               	movwf	_rxCount+1,c	;volatile
   336  0000B8  0E00               	movlw	0
   337  0000BA  6E12               	movwf	_rxCount,c	;volatile
   338  0000BC  C012  F014         	movff	_rxCount,_txCount	;volatile
   339  0000C0  C013  F015         	movff	_rxCount+1,_txCount+1	;volatile
   340                           
   341                           ;usart.c: 33: OSCTUNEbits.PLLEN = 1;
   342  0000C4  8C9B               	bsf	3995,6,c	;volatile
   343                           
   344                           ;usart.c: 34: LCDInit();
   345  0000C6  EC30  F001         	call	_LCDInit	;wreg free
   346                           
   347                           ;usart.c: 35: LCDClear();
   348  0000CA  EC51  F002         	call	_LCDClear	;wreg free
   349                           
   350                           ;usart.c: 36: InitPins();
   351  0000CE  EC3B  F002         	call	_InitPins	;wreg free
   352                           
   353                           ;usart.c: 37: ConfigPeriph();
   354  0000D2  EC29  F002         	call	_ConfigPeriph	;wreg free
   355                           
   356                           ;usart.c: 38: ConfigInterrupts();
   357  0000D6  EC5C  F002         	call	_ConfigInterrupts	;wreg free
   358                           
   359                           ;usart.c: 39: TXSTA1bits.TXEN = 1;
   360  0000DA  8AAD               	bsf	4013,5,c	;volatile
   361  0000DC                     l235:
   362  0000DC  AA9E               	btfss	3998,5,c	;volatile
   363  0000DE  D7FE               	goto	l235
   364                           
   365                           ;usart.c: 45: temp = RCREG1;
   366  0000E0  CFAF F066          	movff	4015,main@temp	;volatile
   367                           
   368                           ;usart.c: 46: TXREG1 = temp;
   369  0000E4  C066  FFAE         	movff	main@temp,4014	;volatile
   370                           
   371                           ;usart.c: 47: rxBuffer[rxCount] = temp;
   372  0000E8  0E16               	movlw	low _rxBuffer
   373  0000EA  2412               	addwf	_rxCount,w,c	;volatile
   374  0000EC  6ED9               	movwf	fsr2l,c
   375  0000EE  0E00               	movlw	high _rxBuffer
   376  0000F0  2013               	addwfc	_rxCount+1,w,c	;volatile
   377  0000F2  6EDA               	movwf	fsr2h,c
   378  0000F4  C066  FFDF         	movff	main@temp,indf2
   379                           
   380                           ;usart.c: 48: if (rxBuffer[rxCount] == '\r') {
   381  0000F8  0E16               	movlw	low _rxBuffer
   382  0000FA  2412               	addwf	_rxCount,w,c	;volatile
   383  0000FC  6ED9               	movwf	fsr2l,c
   384  0000FE  0E00               	movlw	high _rxBuffer
   385  000100  2013               	addwfc	_rxCount+1,w,c	;volatile
   386  000102  6EDA               	movwf	fsr2h,c
   387  000104  0E0D               	movlw	13
   388  000106  18DE               	xorwf	postinc2,w,c
   389  000108  A4D8               	btfss	status,2,c
   390  00010A  D01B               	goto	l1868
   391                           
   392                           ;usart.c: 49: rxBuffer[rxCount] = '\0';
   393  00010C  0E16               	movlw	low _rxBuffer
   394  00010E  2412               	addwf	_rxCount,w,c	;volatile
   395  000110  6ED9               	movwf	fsr2l,c
   396  000112  0E00               	movlw	high _rxBuffer
   397  000114  2013               	addwfc	_rxCount+1,w,c	;volatile
   398  000116  6EDA               	movwf	fsr2h,c
   399  000118  0E00               	movlw	0
   400  00011A  6EDF               	movwf	indf2,c
   401                           
   402                           ;usart.c: 50: LCDClearLine(0);
   403  00011C  0E00               	movlw	0
   404  00011E  EC82  F001         	call	_LCDClearLine
   405                           
   406                           ;usart.c: 51: LCDWriteLine(rxBuffer, 0);
   407  000122  0E16               	movlw	low _rxBuffer
   408  000124  0100               	movlb	0	; () banked
   409  000126  6F62               	movwf	LCDWriteLine@str& (0+255),b
   410  000128  0E00               	movlw	high _rxBuffer
   411  00012A  0100               	movlb	0	; () banked
   412  00012C  6F63               	movwf	(LCDWriteLine@str+1)& (0+255),b
   413  00012E  0E00               	movlw	0
   414  000130  0100               	movlb	0	; () banked
   415  000132  6F64               	movwf	LCDWriteLine@line& (0+255),b
   416  000134  ECE3  F000         	call	_LCDWriteLine	;wreg free
   417                           
   418                           ;usart.c: 52: rxCount = 0;
   419  000138  0E00               	movlw	0
   420  00013A  6E13               	movwf	_rxCount+1,c	;volatile
   421  00013C  0E00               	movlw	0
   422  00013E  6E12               	movwf	_rxCount,c	;volatile
   423                           
   424                           ;usart.c: 54: } else if (rxCount < 16) {
   425  000140  D00A               	goto	l1872
   426  000142                     l1868:
   427  000142  BE13               	btfsc	_rxCount+1,7,c	;volatile
   428  000144  D006               	goto	l1870
   429  000146  5013               	movf	_rxCount+1,w,c	;volatile
   430  000148  E106               	bnz	l1872
   431  00014A  0E10               	movlw	16
   432  00014C  5C12               	subwf	_rxCount,w,c	;volatile
   433  00014E  B0D8               	btfsc	status,0,c
   434  000150  D002               	goto	l1872
   435  000152                     l1870:
   436                           
   437                           ;usart.c: 55: ++rxCount;
   438  000152  4A12               	infsnz	_rxCount,f,c	;volatile
   439  000154  2A13               	incf	_rxCount+1,f,c	;volatile
   440  000156                     l1872:
   441                           
   442                           ;usart.c: 57: }
   443                           ;usart.c: 60: if (temp == '0') {
   444  000156  0E30               	movlw	48
   445  000158  0100               	movlb	0	; () banked
   446  00015A  1966               	xorwf	main@temp& (0+255),w,b
   447  00015C  A4D8               	btfss	status,2,c
   448  00015E  D002               	goto	l1876
   449                           
   450                           ; BSR set to: 0
   451                           ;usart.c: 61: LATDbits.LD0 ^= 1;
   452  000160  708C               	btg	3980,0,c	;volatile
   453                           
   454                           ;usart.c: 62: } else if (temp == '1') {
   455  000162  D7BC               	goto	l235
   456  000164                     l1876:
   457                           
   458                           ; BSR set to: 0
   459  000164  0E31               	movlw	49
   460  000166  0100               	movlb	0	; () banked
   461  000168  1966               	xorwf	main@temp& (0+255),w,b
   462  00016A  A4D8               	btfss	status,2,c
   463  00016C  D002               	goto	l1880
   464                           
   465                           ; BSR set to: 0
   466                           ;usart.c: 63: LATDbits.LD1 ^= 1;
   467  00016E  728C               	btg	3980,1,c	;volatile
   468                           
   469                           ;usart.c: 64: } else if (temp == '2') {
   470  000170  D7B5               	goto	l235
   471  000172                     l1880:
   472                           
   473                           ; BSR set to: 0
   474  000172  0E32               	movlw	50
   475  000174  0100               	movlb	0	; () banked
   476  000176  1966               	xorwf	main@temp& (0+255),w,b
   477  000178  A4D8               	btfss	status,2,c
   478  00017A  D002               	goto	l1884
   479                           
   480                           ; BSR set to: 0
   481                           ;usart.c: 65: LATDbits.LD2 ^= 1;
   482  00017C  748C               	btg	3980,2,c	;volatile
   483                           
   484                           ;usart.c: 66: } else if (temp == '3') {
   485  00017E  D7AE               	goto	l235
   486  000180                     l1884:
   487                           
   488                           ; BSR set to: 0
   489  000180  0E33               	movlw	51
   490  000182  0100               	movlb	0	; () banked
   491  000184  1966               	xorwf	main@temp& (0+255),w,b
   492  000186  A4D8               	btfss	status,2,c
   493  000188  D002               	goto	l1888
   494                           
   495                           ; BSR set to: 0
   496                           ;usart.c: 67: LATDbits.LD3 ^= 1;
   497  00018A  768C               	btg	3980,3,c	;volatile
   498                           
   499                           ;usart.c: 68: } else if (temp == '4') {
   500  00018C  D7A7               	goto	l235
   501  00018E                     l1888:
   502                           
   503                           ; BSR set to: 0
   504  00018E  0E34               	movlw	52
   505  000190  0100               	movlb	0	; () banked
   506  000192  1966               	xorwf	main@temp& (0+255),w,b
   507  000194  A4D8               	btfss	status,2,c
   508  000196  D002               	goto	l1892
   509                           
   510                           ; BSR set to: 0
   511                           ;usart.c: 69: LATDbits.LD4 ^= 1;
   512  000198  788C               	btg	3980,4,c	;volatile
   513                           
   514                           ;usart.c: 70: } else if (temp == '5') {
   515  00019A  D7A0               	goto	l235
   516  00019C                     l1892:
   517                           
   518                           ; BSR set to: 0
   519  00019C  0E35               	movlw	53
   520  00019E  0100               	movlb	0	; () banked
   521  0001A0  1966               	xorwf	main@temp& (0+255),w,b
   522  0001A2  A4D8               	btfss	status,2,c
   523  0001A4  D002               	goto	l1896
   524                           
   525                           ; BSR set to: 0
   526                           ;usart.c: 71: LATDbits.LD5 ^= 1;
   527  0001A6  7A8C               	btg	3980,5,c	;volatile
   528                           
   529                           ;usart.c: 72: } else if (temp == '6') {
   530  0001A8  D799               	goto	l235
   531  0001AA                     l1896:
   532                           
   533                           ; BSR set to: 0
   534  0001AA  0E36               	movlw	54
   535  0001AC  0100               	movlb	0	; () banked
   536  0001AE  1966               	xorwf	main@temp& (0+255),w,b
   537  0001B0  A4D8               	btfss	status,2,c
   538  0001B2  D002               	goto	l1900
   539                           
   540                           ; BSR set to: 0
   541                           ;usart.c: 73: LATDbits.LD6 ^= 1;
   542  0001B4  7C8C               	btg	3980,6,c	;volatile
   543                           
   544                           ;usart.c: 74: } else if (temp == '7') {
   545  0001B6  D792               	goto	l235
   546  0001B8                     l1900:
   547                           
   548                           ; BSR set to: 0
   549  0001B8  0E37               	movlw	55
   550  0001BA  0100               	movlb	0	; () banked
   551  0001BC  1966               	xorwf	main@temp& (0+255),w,b
   552  0001BE  A4D8               	btfss	status,2,c
   553  0001C0  D78D               	goto	l235
   554                           
   555                           ; BSR set to: 0
   556                           ;usart.c: 75: LATDbits.LD7 ^= 1;
   557  0001C2  7E8C               	btg	3980,7,c	;volatile
   558                           
   559                           ; BSR set to: 0
   560                           
   561                           ; BSR set to: 0
   562                           
   563                           ; BSR set to: 0
   564                           
   565                           ; BSR set to: 0
   566                           
   567                           ; BSR set to: 0
   568                           
   569                           ; BSR set to: 0
   570                           
   571                           ; BSR set to: 0
   572                           
   573                           ; BSR set to: 0
   574                           
   575                           ; BSR set to: 0
   576  0001C4  D78B               	goto	l235
   577  0001C6                     __end_of_main:
   578                           	opt stack 0
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           postinc0	equ	0xFEE
   584                           wreg	equ	0xFE8
   585                           postdec1	equ	0xFE5
   586                           fsr1l	equ	0xFE1
   587                           indf2	equ	0xFDF
   588                           postinc2	equ	0xFDE
   589                           fsr2h	equ	0xFDA
   590                           fsr2l	equ	0xFD9
   591                           status	equ	0xFD8
   592                           
   593 ;; *************** function _LCDWriteLine *****************
   594 ;; Defined at:
   595 ;;		line 59 in file "LCD.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  str             2    2[BANK0 ] PTR const unsigned char 
   598 ;;		 -> rxBuffer(20), LCDScroll@str(17), 
   599 ;;  line            1    4[BANK0 ] unsigned char 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;		None               void
   604 ;; Registers used:
   605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   611 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;Total ram usage:        4 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; Hardware stack levels required when called:    5
   618 ;; This function calls:
   619 ;;		_LCDSetPos
   620 ;;		_LCDWriteData
   621 ;; This function is called by:
   622 ;;		_main
   623 ;;		_LCDScroll
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text1
   628  0001C6                     __ptext1:
   629                           	opt stack 0
   630  0001C6                     _LCDWriteLine:
   631                           	opt stack 25
   632                           
   633                           ;LCD.c: 60: if (line >= 2) {
   634                           
   635                           ; BSR set to: 0
   636                           ;incstack = 0
   637  0001C6  0E01               	movlw	1
   638  0001C8  0100               	movlb	0	; () banked
   639  0001CA  6564               	cpfsgt	LCDWriteLine@line& (0+255),b
   640  0001CC  D001               	goto	l1654
   641  0001CE  0012               	return	
   642  0001D0                     l1654:
   643                           
   644                           ; BSR set to: 0
   645                           ;LCD.c: 62: }
   646                           ;LCD.c: 63: LCDSetPos(line, 0);
   647  0001D0  C064  F03E         	movff	LCDWriteLine@line,LCDSetPos@row
   648  0001D4  6A3F               	clrf	LCDSetPos@row+1,c
   649  0001D6  0E00               	movlw	0
   650  0001D8  6E41               	movwf	LCDSetPos@col+1,c
   651  0001DA  0E00               	movlw	0
   652  0001DC  6E40               	movwf	LCDSetPos@col,c
   653  0001DE  EC5C  F001         	call	_LCDSetPos	;wreg free
   654                           
   655                           ;LCD.c: 64: while (*str) {
   656  0001E2  D036               	goto	l1674
   657  0001E4                     l1656:
   658                           
   659                           ;LCD.c: 65: if (*str == '\n') {
   660  0001E4  C062  FFD9         	movff	LCDWriteLine@str,fsr2l
   661  0001E8  C063  FFDA         	movff	LCDWriteLine@str+1,fsr2h
   662  0001EC  0E0A               	movlw	10
   663  0001EE  18DE               	xorwf	postinc2,w,c
   664  0001F0  A4D8               	btfss	status,2,c
   665  0001F2  D00A               	goto	l1664
   666                           
   667                           ;LCD.c: 66: ++line;
   668  0001F4  0100               	movlb	0	; () banked
   669  0001F6  2B64               	incf	LCDWriteLine@line& (0+255),f,b
   670                           
   671                           ; BSR set to: 0
   672                           ;LCD.c: 67: if (line == 2) {
   673  0001F8  0E02               	movlw	2
   674  0001FA  0100               	movlb	0	; () banked
   675  0001FC  1964               	xorwf	LCDWriteLine@line& (0+255),w,b
   676  0001FE  A4D8               	btfss	status,2,c
   677  000200  D003               	goto	l1664
   678                           
   679                           ; BSR set to: 0
   680                           ;LCD.c: 68: line = 0;
   681  000202  0E00               	movlw	0
   682  000204  0100               	movlb	0	; () banked
   683  000206  6F64               	movwf	LCDWriteLine@line& (0+255),b
   684  000208                     l1664:
   685                           
   686                           ;LCD.c: 69: }
   687                           ;LCD.c: 70: }
   688                           ;LCD.c: 71: if (*str == '\r' || *str == '\n') {
   689  000208  C062  FFD9         	movff	LCDWriteLine@str,fsr2l
   690  00020C  C063  FFDA         	movff	LCDWriteLine@str+1,fsr2h
   691  000210  0E0D               	movlw	13
   692  000212  18DE               	xorwf	postinc2,w,c
   693  000214  B4D8               	btfsc	status,2,c
   694  000216  D008               	goto	l1668
   695  000218  C062  FFD9         	movff	LCDWriteLine@str,fsr2l
   696  00021C  C063  FFDA         	movff	LCDWriteLine@str+1,fsr2h
   697  000220  0E0A               	movlw	10
   698  000222  18DE               	xorwf	postinc2,w,c
   699  000224  A4D8               	btfss	status,2,c
   700  000226  D00A               	goto	l1670
   701  000228                     l1668:
   702                           
   703                           ;LCD.c: 72: LCDSetPos(line, 0);
   704  000228  C064  F03E         	movff	LCDWriteLine@line,LCDSetPos@row
   705  00022C  6A3F               	clrf	LCDSetPos@row+1,c
   706  00022E  0E00               	movlw	0
   707  000230  6E41               	movwf	LCDSetPos@col+1,c
   708  000232  0E00               	movlw	0
   709  000234  6E40               	movwf	LCDSetPos@col,c
   710  000236  EC5C  F001         	call	_LCDSetPos	;wreg free
   711                           
   712                           ;LCD.c: 73: } else {
   713  00023A  D007               	goto	l1672
   714  00023C                     l1670:
   715                           
   716                           ;LCD.c: 74: LCDWriteData(*str);
   717  00023C  C062  FFD9         	movff	LCDWriteLine@str,fsr2l
   718  000240  C063  FFDA         	movff	LCDWriteLine@str+1,fsr2h
   719  000244  50DF               	movf	indf2,w,c
   720  000246  EC13  F002         	call	_LCDWriteData
   721  00024A                     l1672:
   722                           
   723                           ;LCD.c: 75: }
   724                           ;LCD.c: 76: ++str;
   725  00024A  0100               	movlb	0	; () banked
   726  00024C  4B62               	infsnz	LCDWriteLine@str& (0+255),f,b
   727  00024E  2B63               	incf	(LCDWriteLine@str+1)& (0+255),f,b
   728  000250                     l1674:
   729  000250  C062  FFD9         	movff	LCDWriteLine@str,fsr2l
   730  000254  C063  FFDA         	movff	LCDWriteLine@str+1,fsr2h
   731  000258  50DF               	movf	indf2,w,c
   732  00025A  B4D8               	btfsc	status,2,c
   733  00025C  0012               	return	
   734  00025E  D7C2               	goto	l1656
   735  000260                     __end_of_LCDWriteLine:
   736                           	opt stack 0
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           tblptrl	equ	0xFF6
   740                           tablat	equ	0xFF5
   741                           postinc0	equ	0xFEE
   742                           wreg	equ	0xFE8
   743                           postdec1	equ	0xFE5
   744                           fsr1l	equ	0xFE1
   745                           indf2	equ	0xFDF
   746                           postinc2	equ	0xFDE
   747                           fsr2h	equ	0xFDA
   748                           fsr2l	equ	0xFD9
   749                           status	equ	0xFD8
   750                           
   751 ;; *************** function _LCDInit *****************
   752 ;; Defined at:
   753 ;;		line 24 in file "LCD.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  functionSet     1   21[COMRAM] unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;		None               void
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;Total ram usage:        2 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    4
   774 ;; This function calls:
   775 ;;		_LCDInitCommand
   776 ;;		_LCDInitPort
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text2
   783  000260                     __ptext2:
   784                           	opt stack 0
   785  000260                     _LCDInit:
   786                           	opt stack 26
   787                           
   788                           ;LCD.c: 25: char functionSet = 0b00111000;
   789                           
   790                           ;incstack = 0
   791  000260  0E38               	movlw	56
   792  000262  6E3F               	movwf	LCDInit@functionSet,c
   793                           
   794                           ;LCD.c: 26: LCDInitPort();
   795  000264  ECD9  F001         	call	_LCDInitPort	;wreg free
   796                           
   797                           ;LCD.c: 27: _delay((unsigned long)((10)*(40000000L/4000.0)));
   798  000268  0E82               	movlw	130
   799  00026A  6E3E               	movwf	??_LCDInit& (0+255),c
   800  00026C  0EDE               	movlw	222
   801  00026E                     u1287:
   802  00026E  2EE8               	decfsz	wreg,f,c
   803  000270  D7FE               	goto	u1287
   804  000272  2E3E               	decfsz	??_LCDInit& (0+255),f,c
   805  000274  D7FC               	goto	u1287
   806                           
   807                           ;LCD.c: 37: LCDInitCommand(functionSet);
   808  000276  503F               	movf	LCDInit@functionSet,w,c
   809  000278  EC43  F002         	call	_LCDInitCommand
   810                           
   811                           ;LCD.c: 38: _delay((unsigned long)((40)*(40000000L/4000000.0)));
   812  00027C  0E85               	movlw	133
   813  00027E                     u1297:
   814  00027E  2EE8               	decfsz	wreg,f,c
   815  000280  D7FE               	goto	u1297
   816  000282  F000               	nop	
   817                           
   818                           ;LCD.c: 39: LCDInitCommand(0b00001100);
   819  000284  0E0C               	movlw	12
   820  000286  EC43  F002         	call	_LCDInitCommand
   821                           
   822                           ;LCD.c: 40: _delay((unsigned long)((40)*(40000000L/4000000.0)));
   823  00028A  0E85               	movlw	133
   824  00028C                     u1307:
   825  00028C  2EE8               	decfsz	wreg,f,c
   826  00028E  D7FE               	goto	u1307
   827  000290  F000               	nop	
   828                           
   829                           ;LCD.c: 41: LCDInitCommand(0b00000001);
   830  000292  0E01               	movlw	1
   831  000294  EC43  F002         	call	_LCDInitCommand
   832                           
   833                           ;LCD.c: 42: _delay((unsigned long)((1700)*(40000000L/4000000.0)));
   834  000298  0E17               	movlw	23
   835  00029A  6E3E               	movwf	??_LCDInit& (0+255),c
   836  00029C  0E12               	movlw	18
   837  00029E                     u1317:
   838  00029E  2EE8               	decfsz	wreg,f,c
   839  0002A0  D7FE               	goto	u1317
   840  0002A2  2E3E               	decfsz	??_LCDInit& (0+255),f,c
   841  0002A4  D7FC               	goto	u1317
   842  0002A6  D000               	nop2	
   843                           
   844                           ;LCD.c: 43: LCDInitCommand(0b00000110);
   845  0002A8  0E06               	movlw	6
   846  0002AA  EC43  F002         	call	_LCDInitCommand
   847                           
   848                           ;LCD.c: 44: _delay((unsigned long)((40)*(40000000L/4000000.0)));
   849  0002AE  0E85               	movlw	133
   850  0002B0                     u1327:
   851  0002B0  2EE8               	decfsz	wreg,f,c
   852  0002B2  D7FE               	goto	u1327
   853  0002B4  F000               	nop	
   854  0002B6  0012               	return		;funcret
   855  0002B8                     __end_of_LCDInit:
   856                           	opt stack 0
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           postdec1	equ	0xFE5
   864                           fsr1l	equ	0xFE1
   865                           indf2	equ	0xFDF
   866                           postinc2	equ	0xFDE
   867                           fsr2h	equ	0xFDA
   868                           fsr2l	equ	0xFD9
   869                           status	equ	0xFD8
   870                           
   871 ;; *************** function _LCDInitPort *****************
   872 ;; Defined at:
   873 ;;		line 287 in file "LCD.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;		None               void
   880 ;; Registers used:
   881 ;;		wreg, status,2, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    2
   894 ;; This function calls:
   895 ;;		_WriteRegister
   896 ;; This function is called by:
   897 ;;		_LCDInit
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text3
   902  0003B2                     __ptext3:
   903                           	opt stack 0
   904  0003B2                     _LCDInitPort:
   905                           	opt stack 27
   906                           
   907                           ;LCD.c: 288: TRISAbits.TRISA2 = 0;
   908                           
   909                           ;incstack = 0
   910  0003B2  9492               	bcf	3986,2,c	;volatile
   911                           
   912                           ;LCD.c: 289: LATAbits.LATA2 = 1;
   913  0003B4  8489               	bsf	3977,2,c	;volatile
   914                           
   915                           ;LCD.c: 304: TRISCbits.TRISC3 = 0;
   916  0003B6  9694               	bcf	3988,3,c	;volatile
   917                           
   918                           ;LCD.c: 305: TRISCbits.TRISC5 = 0;
   919  0003B8  9A94               	bcf	3988,5,c	;volatile
   920                           
   921                           ;LCD.c: 307: SSPCON1 = 0x21;
   922  0003BA  0E21               	movlw	33
   923  0003BC  6EC6               	movwf	4038,c	;volatile
   924                           
   925                           ;LCD.c: 308: SSPSTATbits.CKE = 1;
   926  0003BE  8CC7               	bsf	4039,6,c	;volatile
   927                           
   928                           ;LCD.c: 309: SSPIF = 0;
   929  0003C0  969E               	bcf	3998,3,c	;volatile
   930                           
   931                           ;LCD.c: 310: WriteRegister(0, 0);
   932  0003C2  0E00               	movlw	0
   933  0003C4  6E38               	movwf	WriteRegister@b,c
   934  0003C6  0E00               	movlw	0
   935  0003C8  ECF1  F001         	call	_WriteRegister
   936                           
   937                           ;LCD.c: 311: WriteRegister(1, 0);
   938  0003CC  0E00               	movlw	0
   939  0003CE  6E38               	movwf	WriteRegister@b,c
   940  0003D0  0E01               	movlw	1
   941  0003D2  ECF1  F001         	call	_WriteRegister
   942                           
   943                           ;LCD.c: 312: WriteRegister(0x12, 0);
   944  0003D6  0E00               	movlw	0
   945  0003D8  6E38               	movwf	WriteRegister@b,c
   946  0003DA  0E12               	movlw	18
   947  0003DC  ECF1  F001         	call	_WriteRegister
   948  0003E0  0012               	return		;funcret
   949  0003E2                     __end_of_LCDInitPort:
   950                           	opt stack 0
   951                           tblptru	equ	0xFF8
   952                           tblptrh	equ	0xFF7
   953                           tblptrl	equ	0xFF6
   954                           tablat	equ	0xFF5
   955                           postinc0	equ	0xFEE
   956                           wreg	equ	0xFE8
   957                           postdec1	equ	0xFE5
   958                           fsr1l	equ	0xFE1
   959                           indf2	equ	0xFDF
   960                           postinc2	equ	0xFDE
   961                           fsr2h	equ	0xFDA
   962                           fsr2l	equ	0xFD9
   963                           status	equ	0xFD8
   964                           
   965 ;; *************** function _LCDInitCommand *****************
   966 ;; Defined at:
   967 ;;		line 193 in file "LCD.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  command         1    wreg     unsigned char 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  command         1   19[COMRAM] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;		None               void
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;Total ram usage:        1 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    3
   988 ;; This function calls:
   989 ;;		_LCDWriteByte
   990 ;; This function is called by:
   991 ;;		_LCDInit
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text4
   996  000486                     __ptext4:
   997                           	opt stack 0
   998  000486                     _LCDInitCommand:
   999                           	opt stack 26
  1000                           
  1001                           ;incstack = 0
  1002                           ;LCDInitCommand@command stored from wreg
  1003  000486  6E3D               	movwf	LCDInitCommand@command,c
  1004                           
  1005                           ;LCD.c: 194: LCDWriteByte(command, 0);
  1006  000488  0E00               	movlw	0
  1007  00048A  6E3A               	movwf	LCDWriteByte@rs,c
  1008  00048C  503D               	movf	LCDInitCommand@command,w,c
  1009  00048E  ECA0  F001         	call	_LCDWriteByte
  1010  000492  0012               	return		;funcret
  1011  000494                     __end_of_LCDInitCommand:
  1012                           	opt stack 0
  1013                           tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           postdec1	equ	0xFE5
  1020                           fsr1l	equ	0xFE1
  1021                           indf2	equ	0xFDF
  1022                           postinc2	equ	0xFDE
  1023                           fsr2h	equ	0xFDA
  1024                           fsr2l	equ	0xFD9
  1025                           status	equ	0xFD8
  1026                           
  1027 ;; *************** function _LCDClearLine *****************
  1028 ;; Defined at:
  1029 ;;		line 80 in file "LCD.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  line            1    wreg     unsigned char 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  line            1    3[BANK0 ] unsigned char 
  1034 ;;  c               1    2[BANK0 ] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;		None               void
  1037 ;; Registers used:
  1038 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;Total ram usage:        2 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:    5
  1051 ;; This function calls:
  1052 ;;		_LCDSetPos
  1053 ;;		_LCDWriteData
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;;		_LCDScroll
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text5
  1061  000304                     __ptext5:
  1062                           	opt stack 0
  1063  000304                     _LCDClearLine:
  1064                           	opt stack 25
  1065                           
  1066                           ;incstack = 0
  1067                           ;LCDClearLine@line stored from wreg
  1068  000304  0100               	movlb	0	; () banked
  1069  000306  6F63               	movwf	LCDClearLine@line& (0+255),b
  1070                           
  1071                           ;LCD.c: 81: char c = 0;
  1072  000308  0E00               	movlw	0
  1073  00030A  0100               	movlb	0	; () banked
  1074  00030C  6F62               	movwf	LCDClearLine@c& (0+255),b
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;LCD.c: 82: if (line >= 2) {
  1078  00030E  0E01               	movlw	1
  1079  000310  0100               	movlb	0	; () banked
  1080  000312  6563               	cpfsgt	LCDClearLine@line& (0+255),b
  1081  000314  D001               	goto	l1682
  1082  000316  0012               	return	
  1083  000318                     l1682:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;LCD.c: 84: }
  1087                           ;LCD.c: 85: LCDSetPos(line, 0);
  1088  000318  C063  F03E         	movff	LCDClearLine@line,LCDSetPos@row
  1089  00031C  6A3F               	clrf	LCDSetPos@row+1,c
  1090  00031E  0E00               	movlw	0
  1091  000320  6E41               	movwf	LCDSetPos@col+1,c
  1092  000322  0E00               	movlw	0
  1093  000324  6E40               	movwf	LCDSetPos@col,c
  1094  000326  EC5C  F001         	call	_LCDSetPos	;wreg free
  1095                           
  1096                           ;LCD.c: 86: while (c < 16) {
  1097  00032A  D005               	goto	l1688
  1098  00032C                     l1684:
  1099                           
  1100                           ;LCD.c: 87: LCDWriteData(' ');
  1101  00032C  0E20               	movlw	32
  1102  00032E  EC13  F002         	call	_LCDWriteData
  1103                           
  1104                           ;LCD.c: 88: ++c;
  1105  000332  0100               	movlb	0	; () banked
  1106  000334  2B62               	incf	LCDClearLine@c& (0+255),f,b
  1107  000336                     l1688:
  1108  000336  0E0F               	movlw	15
  1109  000338  0100               	movlb	0	; () banked
  1110  00033A  6562               	cpfsgt	LCDClearLine@c& (0+255),b
  1111  00033C  D7F7               	goto	l1684
  1112  00033E  0012               	return	
  1113  000340                     __end_of_LCDClearLine:
  1114                           	opt stack 0
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           postdec1	equ	0xFE5
  1122                           fsr1l	equ	0xFE1
  1123                           indf2	equ	0xFDF
  1124                           postinc2	equ	0xFDE
  1125                           fsr2h	equ	0xFDA
  1126                           fsr2l	equ	0xFD9
  1127                           status	equ	0xFD8
  1128                           
  1129 ;; *************** function _LCDWriteData *****************
  1130 ;; Defined at:
  1131 ;;		line 197 in file "LCD.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  c               1    wreg     unsigned char 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  c               1   19[COMRAM] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;		None               void
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;Total ram usage:        1 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    3
  1152 ;; This function calls:
  1153 ;;		_LCDWriteByte
  1154 ;;		_shortDelay
  1155 ;;		_wait
  1156 ;; This function is called by:
  1157 ;;		_LCDWriteLine
  1158 ;;		_LCDClearLine
  1159 ;;		_LCDPutStr
  1160 ;;		_LCDPutChar
  1161 ;;		_LCDLoadCustomChar
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text6
  1166  000426                     __ptext6:
  1167                           	opt stack 0
  1168  000426                     _LCDWriteData:
  1169                           	opt stack 26
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;incstack = 0
  1173                           ;LCDWriteData@c stored from wreg
  1174  000426  6E3D               	movwf	LCDWriteData@c,c
  1175                           
  1176                           ;LCD.c: 198: wait();
  1177  000428  EC60  F002         	call	_wait	;wreg free
  1178                           
  1179                           ;LCD.c: 199: LCDWriteByte(c, 1);
  1180  00042C  0E01               	movlw	1
  1181  00042E  6E3A               	movwf	LCDWriteByte@rs,c
  1182  000430  503D               	movf	LCDWriteData@c,w,c
  1183  000432  ECA0  F001         	call	_LCDWriteByte
  1184                           
  1185                           ;LCD.c: 200: shortDelay();
  1186  000436  EC57  F002         	call	_shortDelay	;wreg free
  1187  00043A  0012               	return		;funcret
  1188  00043C                     __end_of_LCDWriteData:
  1189                           	opt stack 0
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec1	equ	0xFE5
  1197                           fsr1l	equ	0xFE1
  1198                           indf2	equ	0xFDF
  1199                           postinc2	equ	0xFDE
  1200                           fsr2h	equ	0xFDA
  1201                           fsr2l	equ	0xFD9
  1202                           status	equ	0xFD8
  1203                           
  1204 ;; *************** function _LCDSetPos *****************
  1205 ;; Defined at:
  1206 ;;		line 96 in file "LCD.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  row             2   20[COMRAM] int 
  1209 ;;  col             2   22[COMRAM] int 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  pos             2    0[BANK0 ] int 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;		None               void
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;Total ram usage:        7 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    4
  1228 ;; This function calls:
  1229 ;;		_LCDCommand
  1230 ;;		_calculateBase
  1231 ;; This function is called by:
  1232 ;;		_LCDWriteLine
  1233 ;;		_LCDClearLine
  1234 ;;		_LCDReadLine
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text7
  1239  0002B8                     __ptext7:
  1240                           	opt stack 0
  1241  0002B8                     _LCDSetPos:
  1242                           	opt stack 25
  1243                           
  1244                           ;LCD.c: 97: int pos;
  1245                           ;LCD.c: 98: if (row < 0 || col < 0 || row >= 2 || col >= 16) {
  1246                           
  1247                           ;incstack = 0
  1248  0002B8  BE3F               	btfsc	LCDSetPos@row+1,7,c
  1249  0002BA  0012               	return	
  1250  0002BC  BE41               	btfsc	LCDSetPos@col+1,7,c
  1251  0002BE  0012               	return	
  1252  0002C0  BE3F               	btfsc	LCDSetPos@row+1,7,c
  1253  0002C2  D006               	goto	l1618
  1254  0002C4  503F               	movf	LCDSetPos@row+1,w,c
  1255  0002C6  E11D               	bnz	l85
  1256  0002C8  0E02               	movlw	2
  1257  0002CA  5C3E               	subwf	LCDSetPos@row,w,c
  1258  0002CC  B0D8               	btfsc	status,0,c
  1259  0002CE  0012               	return	
  1260  0002D0                     l1618:
  1261  0002D0  BE41               	btfsc	LCDSetPos@col+1,7,c
  1262  0002D2  D006               	goto	l1620
  1263  0002D4  5041               	movf	LCDSetPos@col+1,w,c
  1264  0002D6  E115               	bnz	l85
  1265  0002D8  0E10               	movlw	16
  1266  0002DA  5C40               	subwf	LCDSetPos@col,w,c
  1267  0002DC  B0D8               	btfsc	status,0,c
  1268  0002DE  0012               	return	
  1269  0002E0                     l1620:
  1270                           
  1271                           ;LCD.c: 100: }
  1272                           ;LCD.c: 101: pos = calculateBase(row) + col;
  1273  0002E0  503E               	movf	LCDSetPos@row,w,c
  1274  0002E2  EC04  F002         	call	_calculateBase
  1275  0002E6  6E42               	movwf	??_LCDSetPos& (0+255),c
  1276  0002E8  5042               	movf	??_LCDSetPos,w,c
  1277  0002EA  2440               	addwf	LCDSetPos@col,w,c
  1278  0002EC  0100               	movlb	0	; () banked
  1279  0002EE  6F60               	movwf	LCDSetPos@pos& (0+255),b
  1280  0002F0  0E00               	movlw	0
  1281  0002F2  2041               	addwfc	LCDSetPos@col+1,w,c
  1282  0002F4  0100               	movlb	0	; () banked
  1283  0002F6  6F61               	movwf	(LCDSetPos@pos+1)& (0+255),b
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;LCD.c: 102: LCDCommand(128 + pos);
  1287  0002F8  0100               	movlb	0	; () banked
  1288  0002FA  5160               	movf	LCDSetPos@pos& (0+255),w,b
  1289  0002FC  0F80               	addlw	128
  1290  0002FE  EC1E  F002         	call	_LCDCommand
  1291  000302                     l85:
  1292  000302  0012               	return		;funcret
  1293  000304                     __end_of_LCDSetPos:
  1294                           	opt stack 0
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1l	equ	0xFE1
  1303                           indf2	equ	0xFDF
  1304                           postinc2	equ	0xFDE
  1305                           fsr2h	equ	0xFDA
  1306                           fsr2l	equ	0xFD9
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _calculateBase *****************
  1310 ;; Defined at:
  1311 ;;		line 225 in file "LCD.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  line            1    wreg     unsigned char 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  line            1   15[COMRAM] unsigned char 
  1316 ;;  base            1   14[COMRAM] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      unsigned char 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, prodl, prodh
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;Total ram usage:        2 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_LCDSetPos
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text8
  1341  000408                     __ptext8:
  1342                           	opt stack 0
  1343  000408                     _calculateBase:
  1344                           	opt stack 27
  1345                           
  1346                           ;incstack = 0
  1347                           ;calculateBase@line stored from wreg
  1348  000408  6E39               	movwf	calculateBase@line,c
  1349                           
  1350                           ;LCD.c: 226: char base;
  1351                           ;LCD.c: 227: if (line % 2 == 0) {
  1352  00040A  B039               	btfsc	calculateBase@line,0,c
  1353  00040C  D005               	goto	l1582
  1354                           
  1355                           ;LCD.c: 228: base = line * 10;
  1356  00040E  5039               	movf	calculateBase@line,w,c
  1357  000410  0D0A               	mullw	10
  1358  000412  CFF3 F038          	movff	prodl,calculateBase@base
  1359                           
  1360                           ;LCD.c: 229: } else {
  1361  000416  D005               	goto	l1584
  1362  000418                     l1582:
  1363                           
  1364                           ;LCD.c: 230: base = 54 + line * 10;
  1365  000418  5039               	movf	calculateBase@line,w,c
  1366  00041A  0D0A               	mullw	10
  1367  00041C  50F3               	movf	prodl,w,c
  1368  00041E  0F36               	addlw	54
  1369  000420  6E38               	movwf	calculateBase@base,c
  1370  000422                     l1584:
  1371                           
  1372                           ;LCD.c: 231: }
  1373                           ;LCD.c: 232: return base;
  1374  000422  5038               	movf	calculateBase@base,w,c
  1375  000424  0012               	return	
  1376  000426                     __end_of_calculateBase:
  1377                           	opt stack 0
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           prodl	equ	0xFF3
  1383                           postinc0	equ	0xFEE
  1384                           wreg	equ	0xFE8
  1385                           postdec1	equ	0xFE5
  1386                           fsr1l	equ	0xFE1
  1387                           indf2	equ	0xFDF
  1388                           postinc2	equ	0xFDE
  1389                           fsr2h	equ	0xFDA
  1390                           fsr2l	equ	0xFD9
  1391                           status	equ	0xFD8
  1392                           
  1393 ;; *************** function _LCDClear *****************
  1394 ;; Defined at:
  1395 ;;		line 47 in file "LCD.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;		None               void
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    4
  1416 ;; This function calls:
  1417 ;;		_LCDCommand
  1418 ;;		_longDelay
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text9
  1425  0004A2                     __ptext9:
  1426                           	opt stack 0
  1427  0004A2                     _LCDClear:
  1428                           	opt stack 26
  1429                           
  1430                           ;LCD.c: 48: LCDCommand(0b00000001);
  1431                           
  1432                           ;incstack = 0
  1433  0004A2  0E01               	movlw	1
  1434  0004A4  EC1E  F002         	call	_LCDCommand
  1435                           
  1436                           ;LCD.c: 49: longDelay();
  1437  0004A8  EC33  F002         	call	_longDelay	;wreg free
  1438  0004AC  0012               	return		;funcret
  1439  0004AE                     __end_of_LCDClear:
  1440                           	opt stack 0
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           prodl	equ	0xFF3
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           postdec1	equ	0xFE5
  1449                           fsr1l	equ	0xFE1
  1450                           indf2	equ	0xFDF
  1451                           postinc2	equ	0xFDE
  1452                           fsr2h	equ	0xFDA
  1453                           fsr2l	equ	0xFD9
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _longDelay *****************
  1457 ;; Defined at:
  1458 ;;		line 241 in file "LCD.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;		None               void
  1465 ;; Registers used:
  1466 ;;		wreg
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;Total ram usage:        1 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_LCDClear
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text10
  1487  000466                     __ptext10:
  1488                           	opt stack 0
  1489  000466                     _longDelay:
  1490                           	opt stack 28
  1491                           
  1492                           ;LCD.c: 243: _delay((unsigned long)((1660)*(40000000L/4000000.0)));
  1493                           
  1494                           ;incstack = 0
  1495  000466  0E16               	movlw	22
  1496  000468  6E38               	movwf	??_longDelay& (0+255),c
  1497  00046A  0E8E               	movlw	142
  1498  00046C                     u1337:
  1499  00046C  2EE8               	decfsz	wreg,f,c
  1500  00046E  D7FE               	goto	u1337
  1501  000470  2E38               	decfsz	??_longDelay& (0+255),f,c
  1502  000472  D7FC               	goto	u1337
  1503  000474  0012               	return		;funcret
  1504  000476                     __end_of_longDelay:
  1505                           	opt stack 0
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           prodl	equ	0xFF3
  1511                           postinc0	equ	0xFEE
  1512                           wreg	equ	0xFE8
  1513                           postdec1	equ	0xFE5
  1514                           fsr1l	equ	0xFE1
  1515                           indf2	equ	0xFDF
  1516                           postinc2	equ	0xFDE
  1517                           fsr2h	equ	0xFDA
  1518                           fsr2l	equ	0xFD9
  1519                           status	equ	0xFD8
  1520                           
  1521 ;; *************** function _LCDCommand *****************
  1522 ;; Defined at:
  1523 ;;		line 187 in file "LCD.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  command         1    wreg     unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  command         1   19[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;		None               void
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;Total ram usage:        1 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    3
  1544 ;; This function calls:
  1545 ;;		_LCDWriteByte
  1546 ;;		_shortDelay
  1547 ;;		_wait
  1548 ;; This function is called by:
  1549 ;;		_LCDClear
  1550 ;;		_LCDSetPos
  1551 ;;		_LCDLoadCustomChar
  1552 ;;		_LCDScroll
  1553 ;;		_LCDDisplay
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text11
  1558  00043C                     __ptext11:
  1559                           	opt stack 0
  1560  00043C                     _LCDCommand:
  1561                           	opt stack 25
  1562                           
  1563                           ;incstack = 0
  1564                           ;LCDCommand@command stored from wreg
  1565  00043C  6E3D               	movwf	LCDCommand@command,c
  1566                           
  1567                           ;LCD.c: 188: wait();
  1568  00043E  EC60  F002         	call	_wait	;wreg free
  1569                           
  1570                           ;LCD.c: 189: LCDWriteByte(command, 0);
  1571  000442  0E00               	movlw	0
  1572  000444  6E3A               	movwf	LCDWriteByte@rs,c
  1573  000446  503D               	movf	LCDCommand@command,w,c
  1574  000448  ECA0  F001         	call	_LCDWriteByte
  1575                           
  1576                           ;LCD.c: 190: shortDelay();
  1577  00044C  EC57  F002         	call	_shortDelay	;wreg free
  1578  000450  0012               	return		;funcret
  1579  000452                     __end_of_LCDCommand:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           prodl	equ	0xFF3
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           postdec1	equ	0xFE5
  1589                           fsr1l	equ	0xFE1
  1590                           indf2	equ	0xFDF
  1591                           postinc2	equ	0xFDE
  1592                           fsr2h	equ	0xFDA
  1593                           fsr2l	equ	0xFD9
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _wait *****************
  1597 ;; Defined at:
  1598 ;;		line 235 in file "LCD.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;		None               void
  1605 ;; Registers used:
  1606 ;;		None
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_LCDCommand
  1623 ;;		_LCDWriteData
  1624 ;;		_LCDReadData
  1625 ;;		_LCDGetAC
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text12
  1630  0004C0                     __ptext12:
  1631                           	opt stack 0
  1632  0004C0                     _wait:
  1633                           	opt stack 27
  1634                           
  1635                           ;incstack = 0
  1636  0004C0  0012               	return		;funcret
  1637  0004C2                     __end_of_wait:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           prodl	equ	0xFF3
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           postdec1	equ	0xFE5
  1647                           fsr1l	equ	0xFE1
  1648                           indf2	equ	0xFDF
  1649                           postinc2	equ	0xFDE
  1650                           fsr2h	equ	0xFDA
  1651                           fsr2l	equ	0xFD9
  1652                           status	equ	0xFD8
  1653                           
  1654 ;; *************** function _shortDelay *****************
  1655 ;; Defined at:
  1656 ;;		line 247 in file "LCD.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;		None               void
  1663 ;; Registers used:
  1664 ;;		wreg
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_LCDCommand
  1681 ;;		_LCDWriteData
  1682 ;;		_LCDReadData
  1683 ;;		_LCDGetAC
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text13
  1688  0004AE                     __ptext13:
  1689                           	opt stack 0
  1690  0004AE                     _shortDelay:
  1691                           	opt stack 27
  1692                           
  1693                           ;LCD.c: 249: _delay((unsigned long)((40)*(40000000L/4000000.0)));
  1694                           
  1695                           ;incstack = 0
  1696  0004AE  0E85               	movlw	133
  1697  0004B0                     u1347:
  1698  0004B0  2EE8               	decfsz	wreg,f,c
  1699  0004B2  D7FE               	goto	u1347
  1700  0004B4  F000               	nop	
  1701  0004B6  0012               	return		;funcret
  1702  0004B8                     __end_of_shortDelay:
  1703                           	opt stack 0
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           prodl	equ	0xFF3
  1709                           postinc0	equ	0xFEE
  1710                           wreg	equ	0xFE8
  1711                           postdec1	equ	0xFE5
  1712                           fsr1l	equ	0xFE1
  1713                           indf2	equ	0xFDF
  1714                           postinc2	equ	0xFDE
  1715                           fsr2h	equ	0xFDA
  1716                           fsr2l	equ	0xFD9
  1717                           status	equ	0xFD8
  1718                           
  1719 ;; *************** function _LCDWriteByte *****************
  1720 ;; Defined at:
  1721 ;;		line 260 in file "LCD.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  c               1    wreg     unsigned char 
  1724 ;;  rs              1   16[COMRAM] unsigned char 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  c               1   17[COMRAM] unsigned char 
  1727 ;;  comFlags        1   18[COMRAM] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;		None               void
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:        3 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    2
  1744 ;; This function calls:
  1745 ;;		_WriteRegister
  1746 ;; This function is called by:
  1747 ;;		_LCDCommand
  1748 ;;		_LCDInitCommand
  1749 ;;		_LCDWriteData
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text14
  1754  000340                     __ptext14:
  1755                           	opt stack 0
  1756  000340                     _LCDWriteByte:
  1757                           	opt stack 26
  1758                           
  1759                           ;incstack = 0
  1760                           ;LCDWriteByte@c stored from wreg
  1761  000340  6E3B               	movwf	LCDWriteByte@c,c
  1762                           
  1763                           ;LCD.c: 261: unsigned char comFlags = 0;
  1764  000342  0E00               	movlw	0
  1765  000344  6E3C               	movwf	LCDWriteByte@comFlags,c
  1766                           
  1767                           ;LCD.c: 262: if (rs) {
  1768  000346  503A               	movf	LCDWriteByte@rs,w,c
  1769  000348  B4D8               	btfsc	status,2,c
  1770  00034A  D002               	goto	l1562
  1771                           
  1772                           ;LCD.c: 263: comFlags = 0b10000000;
  1773  00034C  0E80               	movlw	128
  1774  00034E  6E3C               	movwf	LCDWriteByte@comFlags,c
  1775  000350                     l1562:
  1776                           
  1777                           ;LCD.c: 264: }
  1778                           ;LCD.c: 265: WriteRegister(0x12, comFlags);
  1779  000350  C03C  F038         	movff	LCDWriteByte@comFlags,WriteRegister@b
  1780  000354  0E12               	movlw	18
  1781  000356  ECF1  F001         	call	_WriteRegister
  1782                           
  1783                           ;LCD.c: 266: WriteRegister(0x13, c);
  1784  00035A  C03B  F038         	movff	LCDWriteByte@c,WriteRegister@b
  1785  00035E  0E13               	movlw	19
  1786  000360  ECF1  F001         	call	_WriteRegister
  1787                           
  1788                           ;LCD.c: 267: WriteRegister(0x12, comFlags | 0b01000000);
  1789  000364  503C               	movf	LCDWriteByte@comFlags,w,c
  1790  000366  0940               	iorlw	64
  1791  000368  6E38               	movwf	WriteRegister@b,c
  1792  00036A  0E12               	movlw	18
  1793  00036C  ECF1  F001         	call	_WriteRegister
  1794                           
  1795                           ;LCD.c: 268: WriteRegister(0x12, comFlags);
  1796  000370  C03C  F038         	movff	LCDWriteByte@comFlags,WriteRegister@b
  1797  000374  0E12               	movlw	18
  1798  000376  ECF1  F001         	call	_WriteRegister
  1799  00037A  0012               	return		;funcret
  1800  00037C                     __end_of_LCDWriteByte:
  1801                           	opt stack 0
  1802                           tblptru	equ	0xFF8
  1803                           tblptrh	equ	0xFF7
  1804                           tblptrl	equ	0xFF6
  1805                           tablat	equ	0xFF5
  1806                           prodl	equ	0xFF3
  1807                           postinc0	equ	0xFEE
  1808                           wreg	equ	0xFE8
  1809                           postdec1	equ	0xFE5
  1810                           fsr1l	equ	0xFE1
  1811                           indf2	equ	0xFDF
  1812                           postinc2	equ	0xFDE
  1813                           fsr2h	equ	0xFDA
  1814                           fsr2l	equ	0xFD9
  1815                           status	equ	0xFD8
  1816                           
  1817 ;; *************** function _WriteRegister *****************
  1818 ;; Defined at:
  1819 ;;		line 320 in file "LCD.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  reg             1    wreg     unsigned char 
  1822 ;;  b               1   14[COMRAM] unsigned char 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  reg             1   15[COMRAM] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;		None               void
  1827 ;; Registers used:
  1828 ;;		wreg, status,2
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1834 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;Total ram usage:        2 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    1
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_LCDWriteByte
  1845 ;;		_LCDInitPort
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text15
  1850  0003E2                     __ptext15:
  1851                           	opt stack 0
  1852  0003E2                     _WriteRegister:
  1853                           	opt stack 26
  1854                           
  1855                           ;incstack = 0
  1856                           ;WriteRegister@reg stored from wreg
  1857  0003E2  6E39               	movwf	WriteRegister@reg,c
  1858                           
  1859                           ;LCD.c: 321: LATAbits.LATA2 = 0;
  1860  0003E4  9489               	bcf	3977,2,c	;volatile
  1861                           
  1862                           ;LCD.c: 322: SSPBUF = 0x40;
  1863  0003E6  0E40               	movlw	64
  1864  0003E8  6EC9               	movwf	4041,c	;volatile
  1865  0003EA                     l166:
  1866  0003EA  A69E               	btfss	3998,3,c	;volatile
  1867  0003EC  D7FE               	goto	l166
  1868                           
  1869                           ;LCD.c: 324: SSPIF = 0;
  1870  0003EE  969E               	bcf	3998,3,c	;volatile
  1871                           
  1872                           ;LCD.c: 325: SSPBUF = reg;
  1873  0003F0  C039  FFC9         	movff	WriteRegister@reg,4041	;volatile
  1874  0003F4                     l169:
  1875  0003F4  A69E               	btfss	3998,3,c	;volatile
  1876  0003F6  D7FE               	goto	l169
  1877                           
  1878                           ;LCD.c: 327: SSPIF = 0;
  1879  0003F8  969E               	bcf	3998,3,c	;volatile
  1880                           
  1881                           ;LCD.c: 328: SSPBUF = b;
  1882  0003FA  C038  FFC9         	movff	WriteRegister@b,4041	;volatile
  1883  0003FE                     l172:
  1884  0003FE  A69E               	btfss	3998,3,c	;volatile
  1885  000400  D7FE               	goto	l172
  1886                           
  1887                           ;LCD.c: 330: SSPIF = 0;
  1888  000402  969E               	bcf	3998,3,c	;volatile
  1889                           
  1890                           ;LCD.c: 331: LATAbits.LATA2 = 1;
  1891  000404  8489               	bsf	3977,2,c	;volatile
  1892  000406  0012               	return		;funcret
  1893  000408                     __end_of_WriteRegister:
  1894                           	opt stack 0
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           prodl	equ	0xFF3
  1900                           postinc0	equ	0xFEE
  1901                           wreg	equ	0xFE8
  1902                           postdec1	equ	0xFE5
  1903                           fsr1l	equ	0xFE1
  1904                           indf2	equ	0xFDF
  1905                           postinc2	equ	0xFDE
  1906                           fsr2h	equ	0xFDA
  1907                           fsr2l	equ	0xFD9
  1908                           status	equ	0xFD8
  1909                           
  1910 ;; *************** function _InitPins *****************
  1911 ;; Defined at:
  1912 ;;		line 92 in file "usart.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;		None               void
  1919 ;; Registers used:
  1920 ;;		wreg, status,2
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;Total ram usage:        0 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    1
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text16
  1941  000476                     __ptext16:
  1942                           	opt stack 0
  1943  000476                     _InitPins:
  1944                           	opt stack 29
  1945                           
  1946                           ;usart.c: 93: LATD = 0;
  1947                           
  1948                           ;incstack = 0
  1949  000476  0E00               	movlw	0
  1950  000478  6E8C               	movwf	3980,c	;volatile
  1951                           
  1952                           ;usart.c: 94: TRISD = 0;
  1953  00047A  0E00               	movlw	0
  1954  00047C  6E95               	movwf	3989,c	;volatile
  1955                           
  1956                           ;usart.c: 95: TRISBbits.TRISB0 = 1;
  1957  00047E  8093               	bsf	3987,0,c	;volatile
  1958                           
  1959                           ;usart.c: 97: TRISC = 0b10000000;
  1960  000480  0E80               	movlw	128
  1961  000482  6E94               	movwf	3988,c	;volatile
  1962  000484  0012               	return		;funcret
  1963  000486                     __end_of_InitPins:
  1964                           	opt stack 0
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           prodl	equ	0xFF3
  1970                           postinc0	equ	0xFEE
  1971                           wreg	equ	0xFE8
  1972                           postdec1	equ	0xFE5
  1973                           fsr1l	equ	0xFE1
  1974                           indf2	equ	0xFDF
  1975                           postinc2	equ	0xFDE
  1976                           fsr2h	equ	0xFDA
  1977                           fsr2l	equ	0xFD9
  1978                           status	equ	0xFD8
  1979                           
  1980 ;; *************** function _ConfigPeriph *****************
  1981 ;; Defined at:
  1982 ;;		line 114 in file "usart.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;		None               void
  1989 ;; Registers used:
  1990 ;;		wreg, status,2
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    1
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text17
  2011  000452                     __ptext17:
  2012                           	opt stack 0
  2013  000452                     _ConfigPeriph:
  2014                           	opt stack 29
  2015                           
  2016                           ;usart.c: 119: SPBRG1 = 520;
  2017                           
  2018                           ;incstack = 0
  2019  000452  0E08               	movlw	8
  2020  000454  6EB0               	movwf	4016,c	;volatile
  2021                           
  2022                           ;usart.c: 120: SPBRGH1 = 520 >> 8;
  2023  000456  0E02               	movlw	2
  2024  000458  6E7F               	movwf	3967,c	;volatile
  2025                           
  2026                           ;usart.c: 121: TXSTA1bits.BRGH = 1;
  2027  00045A  84AD               	bsf	4013,2,c	;volatile
  2028                           
  2029                           ;usart.c: 122: BAUDCON1bits.BRG16 = 1;
  2030  00045C  867E               	bsf	3966,3,c	;volatile
  2031                           
  2032                           ;usart.c: 123: TXSTA1bits.SYNC = 0;
  2033  00045E  98AD               	bcf	4013,4,c	;volatile
  2034                           
  2035                           ;usart.c: 124: RCSTA1bits.SPEN = 1;
  2036  000460  8EAC               	bsf	4012,7,c	;volatile
  2037                           
  2038                           ;usart.c: 125: RCSTA1bits.CREN = 1;
  2039  000462  88AC               	bsf	4012,4,c	;volatile
  2040  000464  0012               	return		;funcret
  2041  000466                     __end_of_ConfigPeriph:
  2042                           	opt stack 0
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           prodl	equ	0xFF3
  2048                           postinc0	equ	0xFEE
  2049                           wreg	equ	0xFE8
  2050                           postdec1	equ	0xFE5
  2051                           fsr1l	equ	0xFE1
  2052                           indf2	equ	0xFDF
  2053                           postinc2	equ	0xFDE
  2054                           fsr2h	equ	0xFDA
  2055                           fsr2l	equ	0xFD9
  2056                           status	equ	0xFD8
  2057                           
  2058 ;; *************** function _ConfigInterrupts *****************
  2059 ;; Defined at:
  2060 ;;		line 101 in file "usart.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;		None               void
  2067 ;; Registers used:
  2068 ;;		None
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;Total ram usage:        0 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    1
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text18
  2089  0004B8                     __ptext18:
  2090                           	opt stack 0
  2091  0004B8                     _ConfigInterrupts:
  2092                           	opt stack 29
  2093                           
  2094                           ;usart.c: 103: RCONbits.IPEN = 0;
  2095                           
  2096                           ;incstack = 0
  2097  0004B8  9ED0               	bcf	4048,7,c	;volatile
  2098                           
  2099                           ;usart.c: 109: INTCONbits.PEIE = 1;
  2100  0004BA  8CF2               	bsf	intcon,6,c	;volatile
  2101                           
  2102                           ;usart.c: 111: INTCONbits.GIE = 1;
  2103  0004BC  8EF2               	bsf	intcon,7,c	;volatile
  2104  0004BE  0012               	return		;funcret
  2105  0004C0                     __end_of_ConfigInterrupts:
  2106                           	opt stack 0
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           prodl	equ	0xFF3
  2112                           intcon	equ	0xFF2
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           postdec1	equ	0xFE5
  2116                           fsr1l	equ	0xFE1
  2117                           indf2	equ	0xFDF
  2118                           postinc2	equ	0xFDE
  2119                           fsr2h	equ	0xFDA
  2120                           fsr2l	equ	0xFD9
  2121                           status	equ	0xFD8
  2122                           
  2123 ;; *************** function _HighIsr *****************
  2124 ;; Defined at:
  2125 ;;		line 129 in file "usart.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;		None               void
  2132 ;; Registers used:
  2133 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;Total ram usage:       14 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		Interrupt level 2
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	intcode
  2153  000008                     __pintcode:
  2154                           	opt stack 0
  2155  000008                     _HighIsr:
  2156                           	opt stack 25
  2157                           
  2158                           ;incstack = 0
  2159  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2160  00000A  CFFA F02A          	movff	pclath,??_HighIsr
  2161  00000E  CFFB F02B          	movff	pclatu,??_HighIsr+1
  2162  000012  CFE9 F02C          	movff	fsr0l,??_HighIsr+2
  2163  000016  CFEA F02D          	movff	fsr0h,??_HighIsr+3
  2164  00001A  CFE1 F02E          	movff	fsr1l,??_HighIsr+4
  2165  00001E  CFE2 F02F          	movff	fsr1h,??_HighIsr+5
  2166  000022  CFD9 F030          	movff	fsr2l,??_HighIsr+6
  2167  000026  CFDA F031          	movff	fsr2h,??_HighIsr+7
  2168  00002A  CFF3 F032          	movff	prodl,??_HighIsr+8
  2169  00002E  CFF4 F033          	movff	prodh,??_HighIsr+9
  2170  000032  CFF6 F034          	movff	tblptrl,??_HighIsr+10
  2171  000036  CFF7 F035          	movff	tblptrh,??_HighIsr+11
  2172  00003A  CFF8 F036          	movff	tblptru,??_HighIsr+12
  2173  00003E  CFF5 F037          	movff	tablat,??_HighIsr+13
  2174                           
  2175                           ;usart.c: 131: if (PIR1bits.TX1IF == 1) {
  2176  000042  A89E               	btfss	3998,4,c	;volatile
  2177  000044  D017               	goto	i2l272
  2178                           
  2179                           ;usart.c: 133: TXREG1 = txStr[txCount];
  2180  000046  0E44               	movlw	low _txStr
  2181  000048  2414               	addwf	_txCount,w,c	;volatile
  2182  00004A  6ED9               	movwf	fsr2l,c
  2183  00004C  0E00               	movlw	high _txStr
  2184  00004E  2015               	addwfc	_txCount+1,w,c	;volatile
  2185  000050  6EDA               	movwf	fsr2h,c
  2186  000052  50DF               	movf	indf2,w,c
  2187  000054  6EAE               	movwf	4014,c	;volatile
  2188                           
  2189                           ;usart.c: 134: ++txCount;
  2190  000056  4A14               	infsnz	_txCount,f,c	;volatile
  2191  000058  2A15               	incf	_txCount+1,f,c	;volatile
  2192                           
  2193                           ;usart.c: 135: if (txStr[txCount] == '\0') {
  2194  00005A  0E44               	movlw	low _txStr
  2195  00005C  2414               	addwf	_txCount,w,c	;volatile
  2196  00005E  6ED9               	movwf	fsr2l,c
  2197  000060  0E00               	movlw	high _txStr
  2198  000062  2015               	addwfc	_txCount+1,w,c	;volatile
  2199  000064  6EDA               	movwf	fsr2h,c
  2200  000066  50DF               	movf	indf2,w,c
  2201  000068  A4D8               	btfss	status,2,c
  2202  00006A  D004               	goto	i2l272
  2203                           
  2204                           ;usart.c: 136: txCount = 0;
  2205  00006C  0E00               	movlw	0
  2206  00006E  6E15               	movwf	_txCount+1,c	;volatile
  2207  000070  0E00               	movlw	0
  2208  000072  6E14               	movwf	_txCount,c	;volatile
  2209  000074                     i2l272:
  2210  000074  C037  FFF5         	movff	??_HighIsr+13,tablat
  2211  000078  C036  FFF8         	movff	??_HighIsr+12,tblptru
  2212  00007C  C035  FFF7         	movff	??_HighIsr+11,tblptrh
  2213  000080  C034  FFF6         	movff	??_HighIsr+10,tblptrl
  2214  000084  C033  FFF4         	movff	??_HighIsr+9,prodh
  2215  000088  C032  FFF3         	movff	??_HighIsr+8,prodl
  2216  00008C  C031  FFDA         	movff	??_HighIsr+7,fsr2h
  2217  000090  C030  FFD9         	movff	??_HighIsr+6,fsr2l
  2218  000094  C02F  FFE2         	movff	??_HighIsr+5,fsr1h
  2219  000098  C02E  FFE1         	movff	??_HighIsr+4,fsr1l
  2220  00009C  C02D  FFEA         	movff	??_HighIsr+3,fsr0h
  2221  0000A0  C02C  FFE9         	movff	??_HighIsr+2,fsr0l
  2222  0000A4  C02B  FFFB         	movff	??_HighIsr+1,pclatu
  2223  0000A8  C02A  FFFA         	movff	??_HighIsr,pclath
  2224  0000AC  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2225  0000AE  0011               	retfie		f
  2226  0000B0                     __end_of_HighIsr:
  2227                           	opt stack 0
  2228  0000                     pclatu	equ	0xFFB
  2229                           pclath	equ	0xFFA
  2230                           tblptru	equ	0xFF8
  2231                           tblptrh	equ	0xFF7
  2232                           tblptrl	equ	0xFF6
  2233                           tablat	equ	0xFF5
  2234                           prodh	equ	0xFF4
  2235                           prodl	equ	0xFF3
  2236                           intcon	equ	0xFF2
  2237                           postinc0	equ	0xFEE
  2238                           fsr0h	equ	0xFEA
  2239                           fsr0l	equ	0xFE9
  2240                           wreg	equ	0xFE8
  2241                           postdec1	equ	0xFE5
  2242                           fsr1h	equ	0xFE2
  2243                           fsr1l	equ	0xFE1
  2244                           indf2	equ	0xFDF
  2245                           postinc2	equ	0xFDE
  2246                           fsr2h	equ	0xFDA
  2247                           fsr2l	equ	0xFD9
  2248                           status	equ	0xFD8
  2249                           pclatu	equ	0xFFB
  2250                           pclath	equ	0xFFA
  2251                           tblptru	equ	0xFF8
  2252                           tblptrh	equ	0xFF7
  2253                           tblptrl	equ	0xFF6
  2254                           tablat	equ	0xFF5
  2255                           prodh	equ	0xFF4
  2256                           prodl	equ	0xFF3
  2257                           intcon	equ	0xFF2
  2258                           postinc0	equ	0xFEE
  2259                           fsr0h	equ	0xFEA
  2260                           fsr0l	equ	0xFE9
  2261                           wreg	equ	0xFE8
  2262                           postdec1	equ	0xFE5
  2263                           fsr1h	equ	0xFE2
  2264                           fsr1l	equ	0xFE1
  2265                           indf2	equ	0xFDF
  2266                           postinc2	equ	0xFDE
  2267                           fsr2h	equ	0xFDA
  2268                           fsr2l	equ	0xFD9
  2269                           status	equ	0xFD8
  2270                           
  2271                           	psect	rparam
  2272  0000                     pclatu	equ	0xFFB
  2273                           pclath	equ	0xFFA
  2274                           tblptru	equ	0xFF8
  2275                           tblptrh	equ	0xFF7
  2276                           tblptrl	equ	0xFF6
  2277                           tablat	equ	0xFF5
  2278                           prodh	equ	0xFF4
  2279                           prodl	equ	0xFF3
  2280                           intcon	equ	0xFF2
  2281                           postinc0	equ	0xFEE
  2282                           fsr0h	equ	0xFEA
  2283                           fsr0l	equ	0xFE9
  2284                           wreg	equ	0xFE8
  2285                           postdec1	equ	0xFE5
  2286                           fsr1h	equ	0xFE2
  2287                           fsr1l	equ	0xFE1
  2288                           indf2	equ	0xFDF
  2289                           postinc2	equ	0xFDE
  2290                           fsr2h	equ	0xFDA
  2291                           fsr2l	equ	0xFD9
  2292                           status	equ	0xFD8
  2293                           
  2294                           	psect	temp
  2295  000051                     btemp:
  2296                           	opt stack 0
  2297  000051                     	ds	1
  2298  0000                     int$flags	set	btemp
  2299                           pclatu	equ	0xFFB
  2300                           pclath	equ	0xFFA
  2301                           tblptru	equ	0xFF8
  2302                           tblptrh	equ	0xFF7
  2303                           tblptrl	equ	0xFF6
  2304                           tablat	equ	0xFF5
  2305                           prodh	equ	0xFF4
  2306                           prodl	equ	0xFF3
  2307                           intcon	equ	0xFF2
  2308                           postinc0	equ	0xFEE
  2309                           fsr0h	equ	0xFEA
  2310                           fsr0l	equ	0xFE9
  2311                           wreg	equ	0xFE8
  2312                           postdec1	equ	0xFE5
  2313                           fsr1h	equ	0xFE2
  2314                           fsr1l	equ	0xFE1
  2315                           indf2	equ	0xFDF
  2316                           postinc2	equ	0xFDE
  2317                           fsr2h	equ	0xFDA
  2318                           fsr2l	equ	0xFD9
  2319                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      80
    BANK0           160      7       7
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    LCDWriteLine@str	PTR const unsigned char  size(2) Largest target is 20
		 -> rxBuffer(COMRAM[20]), LCDScroll@str(COMRAM[17]), 


Critical Paths under _main in COMRAM

    _main->_LCDWriteLine
    _LCDWriteLine->_LCDSetPos
    _LCDInit->_LCDInitCommand
    _LCDInitPort->_WriteRegister
    _LCDInitCommand->_LCDWriteByte
    _LCDClearLine->_LCDSetPos
    _LCDWriteData->_LCDWriteByte
    _LCDSetPos->_LCDCommand
    _LCDClear->_LCDCommand
    _LCDCommand->_LCDWriteByte
    _LCDWriteByte->_WriteRegister

Critical Paths under _HighIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_LCDWriteLine
    _LCDWriteLine->_LCDSetPos
    _LCDClearLine->_LCDSetPos

Critical Paths under _HighIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HighIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9793
                                              5 BANK0      2     2      0
                   _ConfigInterrupts
                       _ConfigPeriph
                           _InitPins
                           _LCDClear
                       _LCDClearLine
                            _LCDInit
                       _LCDWriteLine
 ---------------------------------------------------------------------------------
 (1) _LCDWriteLine                                         4     1      3    3724
                                             25 COMRAM     1     1      0
                                              2 BANK0      3     0      3
                          _LCDSetPos
                       _LCDWriteData
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              2     2      0    1659
                                             20 COMRAM     2     2      0
                     _LCDInitCommand
                        _LCDInitPort
 ---------------------------------------------------------------------------------
 (2) _LCDInitPort                                          0     0      0     601
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (2) _LCDInitCommand                                       1     1      0    1024
                                             19 COMRAM     1     1      0
                       _LCDWriteByte
 ---------------------------------------------------------------------------------
 (1) _LCDClearLine                                         2     2      0    3073
                                              2 BANK0      2     2      0
                          _LCDSetPos
                       _LCDWriteData
 ---------------------------------------------------------------------------------
 (2) _LCDWriteData                                         1     1      0    1024
                                             19 COMRAM     1     1      0
                       _LCDWriteByte
                         _shortDelay
                               _wait
 ---------------------------------------------------------------------------------
 (2) _LCDSetPos                                            7     3      4    1950
                                             20 COMRAM     5     1      4
                                              0 BANK0      2     2      0
                         _LCDCommand
                      _calculateBase
 ---------------------------------------------------------------------------------
 (3) _calculateBase                                        2     2      0      90
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCDClear                                             0     0      0    1024
                         _LCDCommand
                          _longDelay
 ---------------------------------------------------------------------------------
 (2) _longDelay                                            1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCDCommand                                           1     1      0    1024
                                             19 COMRAM     1     1      0
                       _LCDWriteByte
                         _shortDelay
                               _wait
 ---------------------------------------------------------------------------------
 (3) _wait                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _shortDelay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCDWriteByte                                         3     2      1     993
                                             16 COMRAM     3     2      1
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (4) _WriteRegister                                        2     1      1     601
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _InitPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPeriph                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighIsr                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigInterrupts
   _ConfigPeriph
   _InitPins
   _LCDClear
     _LCDCommand
       _LCDWriteByte
         _WriteRegister
       _shortDelay
       _wait
     _longDelay
   _LCDClearLine
     _LCDSetPos
       _LCDCommand
         _LCDWriteByte
           _WriteRegister
         _shortDelay
         _wait
       _calculateBase
     _LCDWriteData
       _LCDWriteByte
         _WriteRegister
       _shortDelay
       _wait
   _LCDInit
     _LCDInitCommand
       _LCDWriteByte
         _WriteRegister
     _LCDInitPort
       _WriteRegister
   _LCDWriteLine
     _LCDSetPos
       _LCDCommand
         _LCDWriteByte
           _WriteRegister
         _shortDelay
         _wait
       _calculateBase
     _LCDWriteData
       _LCDWriteByte
         _WriteRegister
       _shortDelay
       _wait

 _HighIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      7       7       5        4.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      50       1       85.1%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      57      12        0.0%
DATA                 0      0      57       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Jan 30 18:23:58 2017

             ?_LCDInitPort 002A                _SSPSTATbits 000FC7                         l85 0302  
                      l235 00DC                        l172 03FE                        l166 03EA  
                      l169 03F4              LCDClearLine@c 0062            ?_LCDInitCommand 002A  
                      wreg 000FE8                 _TXSTA1bits 000FAD             ??_LCDClearLine 0043  
          __end_of_LCDInit 02B8                       l1620 02E0                       l1562 0350  
                     l1618 02D0                       l1900 01B8                       l1582 0418  
                     l1670 023C                       l1654 01D0                       l1584 0422  
                     l1672 024A                       l1664 0208                       l1656 01E4  
                     l1682 0318                       l1674 0250                       l1684 032C  
                     l1668 0228                       l1870 0152                       l1688 0336  
                     l1880 0172                       l1872 0156                       l1892 019C  
                     l1884 0180                       l1876 0164                       l1868 0142  
                     l1896 01AA                       l1888 018E                       u1307 028C  
                     u1317 029E                       u1327 02B0                       _LATD 000F8C  
                     u1337 046C                       u1347 04B0                       u1287 026E  
                     u1297 027E                       _main 00B4                       _wait 04C0  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       btemp 0051                       pclat 000FFA  
       __size_of_LCDSetPos 004C                       prodh 000FF4                       prodl 000FF3  
                     start 00B0            __end_of_HighIsr 00B0               ___param_bank 000010  
         __end_of_LCDClear 04AE              ?_LCDWriteData 002A              ?_LCDWriteByte 003A  
            ?_LCDWriteLine 0062               _BAUDCON1bits 000F7E                      ?_main 002A  
                    ?_wait 002A                      i2l272 0074                      _TRISC 000F94  
                    _TRISD 000F95                      _SSPIF 007CF3     __size_of_WriteRegister 0026  
      __size_of_LCDCommand 0016                      _txStr 0044                      tablat 000FF5  
                    status 000FD8            __initialization 037C       __end_of_ConfigPeriph 0466  
             LCDSetPos@col 0040               LCDSetPos@pos 0060               LCDSetPos@row 003E  
             __end_of_main 01C6               __end_of_wait 04C2             ??_LCDWriteData 003D  
           ??_LCDWriteByte 003B             ??_LCDWriteLine 0043           __end_of_InitPins 0486  
                   ??_main 0065                     ??_wait 0038              __activetblptr 000000  
        __end_of_LCDSetPos 0304                  ??_LCDInit 003E   __end_of_ConfigInterrupts 04C0  
           __CFG_WDTEN$OFF 000000                     _RCREG1 000FAF                     _SPBRG1 000FB0  
                ??_HighIsr 002A                     _SSPBUF 000FC9                     _TXREG1 000FAE  
            _WriteRegister 03E2             __CFG_XINST$OFF 000000       __end_of_LCDClearLine 0340  
                   clear_0 0382       __size_of_LCDInitPort 0030           LCDClearLine@line 0063  
                   _string 0001               __pdataCOMRAM 0044                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8            __CFG_FOSC$HSPLL 000000  
                ?_LCDClear 002A                 __accesstop 0060    __end_of__initialization 03A8  
           ?_WriteRegister 0038              ___rparam_used 000001               ??_LCDCommand 003D  
         WriteRegister@reg 0039             __pcstackCOMRAM 002A           ??_LCDInitCommand 003D  
       __end_of_LCDCommand 0452       __end_of_LCDWriteData 043C       __end_of_LCDWriteByte 037C  
     __end_of_LCDWriteLine 0260                 ??_LCDClear 003E             WriteRegister@b 0038  
                ?_InitPins 002A      __size_of_ConfigPeriph 0014         __size_of_longDelay 0010  
    LCDInitCommand@command 003D     __size_of_calculateBase 001E                    _LCDInit 0260  
                  _SPBRGH1 000F7F               _ConfigPeriph 0452                    _SSPCON1 000FC6  
          ??_WriteRegister 0039                 ??_InitPins 0038         LCDInit@functionSet 003F  
                  _HighIsr 0008      __size_of_LCDClearLine 003C                    __Hparam 0000  
                  __Lparam 0000                    __pcinit 037C                    __ramtop 1000  
                  __ptext0 00B4                    __ptext1 01C6                    __ptext2 0260  
                  __ptext3 03B2                    __ptext4 0486                    __ptext5 0304  
                  __ptext6 0426                    __ptext7 02B8                    __ptext8 0408  
                  __ptext9 04A2                    _rxCount 0012          __end_of_longDelay 0476  
                  _txCount 0014          ?_ConfigInterrupts 002A                  _LCDSetPos 02B8  
             _LCDClearLine 0304       end_of_initialization 03A8         ??_ConfigInterrupts 0038  
            LCDWriteData@c 003D              _calculateBase 0408              LCDWriteByte@c 003B  
                  postdec1 000FE5                    postinc0 000FEE                    postinc2 000FDE  
               _shortDelay 04AE      __size_of_LCDWriteData 0016      __size_of_LCDWriteByte 003C  
    __size_of_LCDWriteLine 009A                  _TRISAbits 000F92                  _TRISBbits 000F93  
                _TRISCbits 000F94                 ?_LCDSetPos 003E             ?_calculateBase 002A  
        __size_of_LCDClear 000C              ??_LCDInitPort 003A               _LCDWriteData 0426  
             _LCDWriteByte 0340               _LCDWriteLine 01C6              __pidataCOMRAM 0494  
      start_initialization 037C          __size_of_InitPins 0010                ?_shortDelay 002A  
      __end_of_LCDInitPort 03E2                   ?_LCDInit 002A                __pbssCOMRAM 0001  
            __pcstackBANK0 0060                ??_LCDSetPos 0042            ??_calculateBase 0038  
                 ?_HighIsr 002A                  __pintcode 0008           LCDWriteLine@line 0064  
        LCDCommand@command 003D    __size_of_LCDInitCommand 000E                  _longDelay 0466  
                 _LCDClear 04A2                   _LATAbits 000F89                   _LATDbits 000F8C  
      __size_of_shortDelay 000A      __end_of_WriteRegister 0408                   _PIR1bits 000F9E  
__size_of_ConfigInterrupts 0008                   _RCONbits 000FD0                _LCDInitPort 03B2  
         __size_of_LCDInit 0058                  copy_data0 039C                 ?_longDelay 002A  
                 _InitPins 0476           __size_of_HighIsr 00A8                   __Hrparam 0000  
     LCDWriteByte@comFlags 003C                   __Lrparam 0000                   __ptext10 0466  
                 __ptext11 043C                   __ptext12 04C0                   __ptext13 04AE  
                 __ptext14 0340                   __ptext15 03E2                   __ptext16 0476  
                 __ptext17 0452                   __ptext18 04B8            LCDWriteLine@str 0062  
            __size_of_main 0112              __size_of_wait 0002                   _rxBuffer 0016  
               _LCDCommand 043C          calculateBase@base 0038          calculateBase@line 0039  
                 int$flags 0051                   main@temp 0066               ??_shortDelay 0038  
              _OSCTUNEbits 000F9B                 _INTCONbits 000FF2              ?_ConfigPeriph 002A  
           _LCDInitCommand 0486                ??_longDelay 0038                   intlevel2 0000  
           LCDWriteByte@rs 003A                 _RCSTA1bits 000FAC         __end_of_shortDelay 04B8  
         _ConfigInterrupts 04B8     __end_of_LCDInitCommand 0494             ??_ConfigPeriph 0038  
            ?_LCDClearLine 002A      __end_of_calculateBase 0426                ?_LCDCommand 002A  
